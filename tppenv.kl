PROGRAM tppenv
%NOLOCKGROUP

-------macros
--change depending on size of environment file
%define HASH_SIZE 32

%define HASH_PROGRAM 'tppenv'
%define HASHTABLE 'tbl'
---------------

%include register_types.klt
--include value type
%include hashenv.klt
hash_type_define(hashenv)
--create hash type
t_hash(hashname,hval_def,hashenv)

VAR
  tblProg : STRING[16]
  tblName : STRING[16]
  reg : hval_def
  tbl IN CMOS: ARRAY[HASH_SIZE] OF hashname
  b : BOOLEAN

%include hashreg.klh

%class hashenv('hash.klc','hashclass.klh','hashenv.klt')

BEGIN
  IF UNINIT(tblProg) THEN
    tblProg = HASH_PROGRAM
  ENDIF
  IF UNINIT(tblName) THEN
    tblName = HASHTABLE
  ENDIF

  --set hashreg object
  hashr__set_hash_table(tblProg, tblName)
  
  --clear registers
    hashr__clear_registers(DATA_REG, TRUE)
  hashr__clear_registers(DATA_POSREG, TRUE)
  hashr__clear_registers(DATA_STRING, TRUE)
  hashr__clear_registers(io_flag, TRUE)
  
  --clear hash table
  reg = hashr__nullenv
  b = hashenv__clear_table(tblProg, tblName, reg)

  --**insert environment variables into hash**
  -----------
    reg.typ = io_flag ; reg.id = 38
  b = hashenv__put('Headstock_select', reg, tblProg, tblName)
    reg.typ = DATA_POSREG ; reg.id = 3
  b = hashenv__put('Headstock_home', reg, tblProg, tblName)
    reg.typ = io_flag ; reg.id = 37
  b = hashenv__put('Positioner_select', reg, tblProg, tblName)
    reg.typ = DATA_POSREG ; reg.id = 4
  b = hashenv__put('Positioner_home', reg, tblProg, tblName)
    reg.typ = io_anin ; reg.id = 1
  b = hashenv__put('Tool1_read_pin', reg, tblProg, tblName)
    reg.typ = io_din ; reg.id = 8
  b = hashenv__put('Tool1_interupt_pin', reg, tblProg, tblName)
    reg.typ = io_anin ; reg.id = 2
  b = hashenv__put('Tool2_read_pin', reg, tblProg, tblName)
    reg.typ = io_din ; reg.id = 10
  b = hashenv__put('Tool2_interupt_pin', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 60
  b = hashenv__put('Lam_power', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 26
  b = hashenv__put('Lam_flowrate', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 61
  b = hashenv__put('Lam_speed', reg, tblProg, tblName)
    reg.typ = io_dout ; reg.id = 3
  b = hashenv__put('Lam_strt', reg, tblProg, tblName)
    reg.typ = io_dout ; reg.id = 1
  b = hashenv__put('Lam_enable', reg, tblProg, tblName)
    reg.typ = io_dout ; reg.id = 1
  b = hashenv__put('Laser_Enable', reg, tblProg, tblName)
    reg.typ = io_din ; reg.id = 2
  b = hashenv__put('Laser_Ready', reg, tblProg, tblName)
    reg.typ = io_dout ; reg.id = 3
  b = hashenv__put('Laser_On', reg, tblProg, tblName)
    reg.typ = io_anout ; reg.id = 1
  b = hashenv__put('Laser_Power', reg, tblProg, tblName)
    reg.typ = io_uopout ; reg.id = 2
  b = hashenv__put('system_ready', reg, tblProg, tblName)
    reg.typ = io_uopout ; reg.id = 3
  b = hashenv__put('Prgm_Run', reg, tblProg, tblName)
    reg.typ = io_uopout ; reg.id = 4
  b = hashenv__put('Prgm_Pause', reg, tblProg, tblName)
    reg.typ = io_flag ; reg.id = 1
  b = hashenv__put('Hmi_Start', reg, tblProg, tblName)
    reg.typ = io_flag ; reg.id = 2
  b = hashenv__put('Hmi_Stop', reg, tblProg, tblName)
    reg.typ = io_flag ; reg.id = 3
  b = hashenv__put('Hmi_Laser_Enable', reg, tblProg, tblName)
    reg.typ = io_flag ; reg.id = 4
  b = hashenv__put('Hmi_Laser_Disable', reg, tblProg, tblName)
    reg.typ = DATA_STRING ; reg.id = 1
  b = hashenv__put('program_name', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 1
  b = hashenv__put('Alarm_Reg', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 2
  b = hashenv__put('Mem_Tool_No', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 3
  b = hashenv__put('Mem_Frame_No', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 50
  b = hashenv__put('j', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 51
  b = hashenv__put('passes', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 52
  b = hashenv__put('l', reg, tblProg, tblName)
    reg.typ = DATA_REG ; reg.id = 53
  b = hashenv__put('layers', reg, tblProg, tblName)
    -----------

  --set comment registers
  hashr__set_comments

END tppenv