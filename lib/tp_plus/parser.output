state 3 contains 2 shift/reduce conflicts
state 51 contains 1 shift/reduce conflicts
state 59 contains 1 shift/reduce conflicts
state 61 contains 1 reduce/reduce conflicts
state 75 contains 2 shift/reduce conflicts
state 98 contains 2 shift/reduce conflicts
state 101 contains 1 shift/reduce conflicts
state 127 contains 1 reduce/reduce conflicts
state 154 contains 1 reduce/reduce conflicts
state 175 contains 1 shift/reduce conflicts
state 179 contains 1 shift/reduce conflicts
state 198 contains 1 shift/reduce conflicts
state 274 contains 2 reduce/reduce conflicts
state 275 contains 2 reduce/reduce conflicts
state 276 contains 2 reduce/reduce conflicts
state 278 contains 2 reduce/reduce conflicts
state 287 contains 1 shift/reduce conflicts
state 294 contains 1 shift/reduce conflicts
state 314 contains 1 shift/reduce conflicts
state 331 contains 14 shift/reduce conflicts
state 360 contains 1 shift/reduce conflicts
state 440 contains 1 shift/reduce conflicts
state 487 contains 1 shift/reduce conflicts

rule 140 (case_allowed_statement) never reduced
rule 141 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 group_statement: GROUP LPAREN integer RPAREN
rule 69 use_statement: FANUC_USE indirectable
rule 70 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 71 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 72 collguard_statement: COLL_GUARD optional_arg
rule 73 set_skip_statement: SET_SKIP_CONDITION expression
rule 74 function_call: WORD
rule 75 function_call: namespaces WORD
rule 76 basic_program_call: function_call LPAREN args RPAREN
rule 77 program_call: basic_program_call
rule 78 program_call: RUN function_call LPAREN args RPAREN
rule 79 program_call: CALL var_or_indirect LPAREN args RPAREN
rule 80 args: arg
rule 81 args: args COMMA arg
rule 82 args: 
rule 83 arg: number
rule 84 arg: signed_number
rule 85 arg: var
rule 86 arg: string
rule 87 arg: address
rule 88 arg: expression
rule 89 program_vars: program_var
rule 90 program_vars: program_vars COMMA program_var
rule 91 program_vars: 
rule 92 program_var: WORD
rule 93 return_statement: RETURN LPAREN expression RPAREN
rule 94 return_statement: RETURN
rule 95 string: STRING
rule 96 io_method: IO_METHOD var_or_indirect
rule 97 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 98 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 99 var_or_indirect: var
rule 100 var_or_indirect: indirect_thing
rule 101 var_or_indirect: var_system
rule 102 jump: JUMP label
rule 103 conditional: IF expression block elsif_conditions else_block END
rule 104 conditional: UNLESS expression block else_block END
rule 105 conditional_block: IF expression THEN block elsif_block else_block END
rule 106 elsif_conditions: elsif_condition
rule 107 elsif_conditions: elsif_conditions elsif_condition
rule 108 elsif_conditions: 
rule 109 elsif_condition: ELSIF expression block
rule 110 elsif_block: elsif_block_condition
rule 111 elsif_block: elsif_block elsif_block_condition
rule 112 elsif_block: 
rule 113 elsif_block_condition: ELSIF expression THEN block
rule 114 forloop: FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 115 forloop: FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 116 while_loop: WHILE expression block END
rule 117 int_or_var: integer
rule 118 int_or_var: var
rule 119 int_or_var: indirect_thing
rule 120 word_list: word_tuple
rule 121 word_list: word_list word_tuple
rule 122 word_tuple: COMMA WORD
rule 123 word_tuple: WORD
rule 124 using_statement: USING word_list
rule 125 compile_statement: COMPILE IMPORT word_list
rule 126 import_statement: IMPORT word_list
rule 127 namespace: NAMESPACE WORD block END
rule 128 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 129 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 130 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 131 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 132 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 133 case_conditions: case_condition
rule 134 case_conditions: case_conditions case_condition
rule 135 case_condition: WHEN case_allowed_condition block
rule 136 case_allowed_condition: number
rule 137 case_allowed_condition: var
rule 138 case_else: ELSE block
rule 139 case_else: 
rule 140 case_allowed_statement: program_call
rule 141 case_allowed_statement: jump
rule 142 inline_conditional: inlineable
rule 143 inline_conditional: inlineable IF expression
rule 144 inline_conditional: inlineable UNLESS expression
rule 145 inlineable: jump
rule 146 inlineable: assignment
rule 147 inlineable: io_method
rule 148 inlineable: program_call
rule 149 else_block: ELSE block
rule 150 else_block: 
rule 151 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 152 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 153 motion_modifiers: motion_modifier
rule 154 motion_modifiers: motion_modifiers motion_modifier
rule 155 motion_arguements: valid_terminations
rule 156 motion_arguements: valid_terminations COMMA valid_terminations
rule 157 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 158 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 159 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 160 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 161 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 162 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
rule 163 motion_modifier: DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
rule 164 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 165 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 166 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 167 valid_motion_statements: COORD
rule 168 valid_motion_statements: MROT
rule 169 valid_motion_statements: PTH
rule 170 valid_motion_statements: INC
rule 171 valid_motion_statements: WJNT
rule 172 valid_motion_statements: BREAK
rule 173 valid_motion_statements: RTCP
rule 174 valid_motion_statements: FPLIN
rule 175 single_argument_motion_modifiers: CD
rule 176 single_argument_motion_modifiers: EV
rule 177 single_argument_motion_modifiers: INDEV
rule 178 single_argument_motion_modifiers: RT_LD
rule 179 single_argument_motion_modifiers: AP_LD
rule 180 single_argument_motion_modifiers: PSPD
rule 181 single_argument_motion_modifiers: CTV
rule 182 valid_terminations: integer
rule 183 valid_terminations: var
rule 184 valid_terminations: MINUS DIGIT
rule 185 optional_lpos_arg: COMMA var
rule 186 optional_lpos_arg: 
rule 187 indirectable: number
rule 188 indirectable: var
rule 189 optional_arg: number
rule 190 optional_arg: var
rule 191 optional_arg: 
rule 192 seg_actions: program_call
rule 193 seg_actions: io_method
rule 194 seg_actions: assignment
rule 195 time: var
rule 196 time: number
rule 197 distance: var
rule 198 distance: number
rule 199 speed: indirectable COMMA STRING
rule 200 speed: STRING
rule 201 label_definition: label
rule 202 definition: LOCALSTACK ASSIGN definable
rule 203 definition: WORD ASSIGN definable
rule 204 assignment: var_or_indirect EQUAL expression
rule 205 assignment: var_or_indirect PLUS EQUAL expression
rule 206 assignment: var_or_indirect MINUS EQUAL expression
rule 207 assignment: var_or_indirect STAR EQUAL expression
rule 208 assignment: var_or_indirect SLASH EQUAL expression
rule 209 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 210 position_assignment: var_or_indirect ARROW array
rule 211 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 212 position_assignment: assignable_range EQUAL assignable_range
rule 213 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 214 assignable_range: var RANGE var
rule 215 assignable_range: var
rule 216 var: var_without_namespaces
rule 217 var: var_with_namespaces
rule 218 var_without_namespaces: WORD
rule 219 var_without_namespaces: WORD var_method_modifiers
rule 220 var_with_namespaces: namespaces var_without_namespaces
rule 221 var_method_modifiers: var_method_modifier
rule 222 var_method_modifiers: var_method_modifiers var_method_modifier
rule 223 pose_range_modifiers: pose_range_modifier
rule 224 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 225 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 226 coord_system: SPHERE
rule 227 coord_system: POLAR
rule 228 coord_system: ORIGIN
rule 229 var_method_modifier: DOT swallow_newlines WORD
rule 230 var_method_modifier: DOT swallow_newlines group_statement
rule 231 var_method_modifier: DOT swallow_newlines POSEATTR
rule 232 var_method_modifier: DOT swallow_newlines OFFSET
rule 233 var_method_modifier: DOT swallow_newlines coord_system
rule 234 var_method_modifier: DOT swallow_newlines FIX
rule 235 var_system: SYSTEM WORD var_system_modifers
rule 236 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 237 var_system_modifers: var_system_modifer
rule 238 var_system_modifers: var_system_modifers var_system_modifer
rule 239 var_system_modifers: 
rule 240 var_system_modifer: DOT var_system
rule 241 namespaces: ns
rule 242 namespaces: namespaces ns
rule 243 ns: WORD COLON COLON
rule 244 expression: unary_expression
rule 245 expression: binary_expression
rule 246 unary_expression: factor
rule 247 unary_expression: address
rule 248 unary_expression: BANG factor
rule 249 unary_expression: basic_program_call
rule 250 binary_expression: expression operator expression
rule 251 operator: EEQUAL
rule 252 operator: NOTEQUAL
rule 253 operator: LT
rule 254 operator: GT
rule 255 operator: GTE
rule 256 operator: LTE
rule 257 operator: PLUS
rule 258 operator: MINUS
rule 259 operator: OR
rule 260 operator: STAR
rule 261 operator: SLASH
rule 262 operator: DIV
rule 263 operator: MOD
rule 264 operator: AND
rule 265 factor: number
rule 266 factor: signed_number
rule 267 factor: operation
rule 268 factor: var
rule 269 factor: signed_var
rule 270 factor: var_system
rule 271 factor: indirect_thing
rule 272 factor: paren_expr
rule 273 factor: booleans
rule 274 booleans: TRUE_FALSE
rule 275 booleans: ON_OFF
rule 276 paren_expr: LPAREN expression RPAREN
rule 277 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 278 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 279 signed_number: sign DIGIT
rule 280 signed_number: sign REAL
rule 281 signed_var: sign var
rule 282 sign: MINUS
rule 283 number: integer
rule 284 number: REAL
rule 285 integer: DIGIT
rule 286 definable: reg
rule 287 definable: number
rule 288 definable: signed_number
rule 289 definable: string
rule 290 definable: framereg
rule 291 definable: booleans
rule 292 definable: localvars
rule 293 definable_range: DIGIT RANGE DIGIT
rule 294 definable_range: DIGIT
rule 295 reg_types: SREG
rule 296 reg_types: UALM
rule 297 reg_types: TIMER
rule 298 reg_types: ARG
rule 299 reg_types: VREG
rule 300 reg_types: POSITION
rule 301 reg_types: NUMREG
rule 302 reg_types: POSREG
rule 303 reg_types: INPUT
rule 304 reg_types: OUTPUT
rule 305 reg: reg_types LBRACK definable_range RBRACK
rule 306 frametype: TOOLREG
rule 307 frametype: FRAMEREG
rule 308 framereg: frametype LBRACK DIGIT RBRACK
rule 309 local_types: LOCALREG
rule 310 local_types: LOCALPOSE
rule 311 local_types: LOCALFLAG
rule 312 localvars: local_types LBRACK RBRACK
rule 313 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 314 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 315 operation: OPERATION LBRACK signed_number RBRACK
rule 316 operation: OPERATION LBRACK number RBRACK
rule 317 address: ADDRESS var
rule 318 comment: COMMENT
rule 319 message: MESSAGE LPAREN STRING RPAREN
rule 320 warning: WARNING LPAREN STRING RPAREN
rule 321 terminator: NEWLINE
rule 322 terminator: comment optional_newline
rule 323 terminator: false
rule 324 terminator: 
rule 325 swallow_newlines: NEWLINE
rule 326 swallow_newlines: 
rule 327 position_data: POSITION_DATA sn hash sn END
rule 328 sn: swallow_newlines
rule 329 hash: LBRACE sn hash_attributes sn RBRACE
rule 330 hash: LBRACE sn RBRACE
rule 331 hash_attributes: hash_attribute
rule 332 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 333 hash_attribute: STRING COLON hash_value
rule 334 hash_value: STRING
rule 335 hash_value: WORD
rule 336 hash_value: hash
rule 337 hash_value: array
rule 338 hash_value: optional_sign DIGIT
rule 339 hash_value: optional_sign REAL
rule 340 hash_value: TRUE_FALSE
rule 341 optional_sign: sign
rule 342 optional_sign: 
rule 343 array: LBRACK sn array_values sn RBRACK
rule 344 array_values: array_value
rule 345 array_values: array_values COMMA sn array_value
rule 346 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (138)
    on right: 
    on left : 
  program (139)
    on right: 
    on left : 1 2
  statements (140)
    on right: 1 4 5
    on left : 3 4
  statement (141)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (142)
    on right: 3 4
    on left : 321 322 323 324
  block (143)
    on right: 103 104 105 109 113 114 115 116 127 128 129 130 131 135 138 149
    on left : 5
  optional_newline (144)
    on right: 322
    on left : 6 7
  comment (145)
    on right: 8 322
    on left : 318
  message (146)
    on right: 9
    on left : 319
  definition (147)
    on right: 10
    on left : 202 203
  namespace (148)
    on right: 11
    on left : 127
  motion_statement (149)
    on right: 12
    on left : 151 152
  position_assignment (150)
    on right: 13
    on left : 209 210 211 212 213
  label_definition (151)
    on right: 14
    on left : 201
  address (152)
    on right: 15 87 247
    on left : 317
  conditional (153)
    on right: 16
    on left : 103 104
  inline_conditional (154)
    on right: 17
    on left : 142 143 144
  conditional_block (155)
    on right: 18
    on left : 105
  forloop (156)
    on right: 19
    on left : 114 115
  while_loop (157)
    on right: 20
    on left : 116
  use_statement (158)
    on right: 21
    on left : 69 70 71
  set_skip_statement (159)
    on right: 22
    on left : 73
  wait_statement (160)
    on right: 23
    on left : 59 60 61 62
  case_statement (161)
    on right: 24
    on left : 132
  fanuc_eval (162)
    on right: 25
    on left : 58
  timer_method (163)
    on right: 26
    on left : 57
  position_data (164)
    on right: 27
    on left : 327
  raise (165)
    on right: 28
    on left : 56
  tp_header_definition (166)
    on right: 29
    on left : 46
  lpos_or_jpos (167)
    on right: 30
    on left : 43 44
  empty_stmt (168)
    on right: 31
    on left : 45
  warning (169)
    on right: 32
    on left : 320
  var_system (170)
    on right: 33 101 240 270
    on left : 235 236
  return_statement (171)
    on right: 36
    on left : 93 94
  collguard_statement (172)
    on right: 37
    on left : 72
  function (173)
    on right: 38
    on left : 128 129 130 131
  tp_application_definition (174)
    on right: 39
    on left : 55
  using_statement (175)
    on right: 40
    on left : 124
  import_statement (176)
    on right: 41
    on left : 126
  compile_statement (177)
    on right: 42
    on left : 125
  var_or_indirect (178)
    on right: 43 44 56 57 79 96 97 98 151 152 161 204 205 206 207 208 210 313 314
    on left : 99 100 101
  tp_header_value (179)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (180)
    on right: 55
    on left : 50 51
  sn (181)
    on right: 50 51 53 55 327 329 330 332 343 345
    on left : 328
  tp_tool_attributes (182)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (183)
    on right: 52 53
    on left : 54
  hash_value (184)
    on right: 54 333 346
    on left : 334 335 336 337 338 339 340
  indirectable (185)
    on right: 59 66 69 70 71 199 277 278
    on left : 187 188
  expression (186)
    on right: 60 61 62 73 88 93 103 104 105 109 113 116 143 144 204 205 206 207 208 250 276
    on left : 244 245
  wait_modifier (187)
    on right: 61 62
    on left : 63 64
  timeout_modifier (188)
    on right: 63
    on left : 65
  after_modifier (189)
    on right: 64
    on left : 66
  swallow_newlines (190)
    on right: 65 66 132 151 152 157 158 159 160 161 162 163 164 165 166 225 229 230 231 232 233 234 328
    on left : 325 326
  label (191)
    on right: 65 102 164 201
    on left : 67
  group_statement (192)
    on right: 71 230
    on left : 68
  integer (193)
    on right: 68 117 182 236 283
    on left : 285
  optional_arg (194)
    on right: 72
    on left : 189 190 191
  function_call (195)
    on right: 76 78
    on left : 74 75
  namespaces (196)
    on right: 75 220 242
    on left : 241 242
  basic_program_call (197)
    on right: 77 249
    on left : 76
  args (198)
    on right: 76 78 79 81
    on left : 80 81 82
  program_call (199)
    on right: 140 148 192
    on left : 77 78 79
  arg (200)
    on right: 80 81
    on left : 83 84 85 86 87 88
  number (201)
    on right: 83 98 136 187 189 196 198 265 287 316
    on left : 283 284
  signed_number (202)
    on right: 84 266 288 315
    on left : 279 280
  var (203)
    on right: 85 99 118 132 137 183 185 188 190 195 197 214 215 268 281 317
    on left : 216 217
  string (204)
    on right: 86 289
    on left : 95
  program_vars (205)
    on right: 90 128 129 130 131
    on left : 89 90 91
  program_var (206)
    on right: 89 90
    on left : 92
  io_method (207)
    on right: 147 193
    on left : 96 97 98
  indirect_thing (208)
    on right: 100 119 271
    on left : 277 278
  jump (209)
    on right: 141 145
    on left : 102
  elsif_conditions (210)
    on right: 103 107
    on left : 106 107 108
  else_block (211)
    on right: 103 104 105
    on left : 149 150
  elsif_block (212)
    on right: 105 111
    on left : 110 111 112
  elsif_condition (213)
    on right: 106 107
    on left : 109
  elsif_block_condition (214)
    on right: 110 111
    on left : 113
  int_or_var (215)
    on right: 114 115 158 166
    on left : 117 118 119
  word_list (216)
    on right: 121 124 125 126
    on left : 120 121
  word_tuple (217)
    on right: 120 121
    on left : 122 123
  case_conditions (218)
    on right: 132 134
    on left : 133 134
  case_else (219)
    on right: 132
    on left : 138 139
  case_condition (220)
    on right: 133 134
    on left : 135
  case_allowed_condition (221)
    on right: 135
    on left : 136 137
  case_allowed_statement (222)
    on right: 
    on left : 140 141
  inlineable (223)
    on right: 142 143 144
    on left : 145 146 147 148
  assignment (224)
    on right: 146 194
    on left : 204 205 206 207 208
  motion_modifiers (225)
    on right: 151 152 154
    on left : 153 154
  motion_modifier (226)
    on right: 153 154
    on left : 157 158 159 160 161 162 163 164 165 166
  motion_arguements (227)
    on right: 159
    on left : 155 156
  valid_terminations (228)
    on right: 155 156 160
    on left : 182 183 184
  speed (229)
    on right: 157
    on left : 199 200
  time (230)
    on right: 162
    on left : 195 196
  seg_actions (231)
    on right: 162 163
    on left : 192 193 194
  distance (232)
    on right: 163
    on left : 197 198
  optional_lpos_arg (233)
    on right: 164
    on left : 185 186
  valid_motion_statements (234)
    on right: 165
    on left : 167 168 169 170 171 172 173 174
  single_argument_motion_modifiers (235)
    on right: 166
    on left : 175 176 177 178 179 180 181
  definable (236)
    on right: 202 203
    on left : 286 287 288 289 290 291 292
  var_method_modifiers (237)
    on right: 209 211 219 222 278
    on left : 221 222
  array (238)
    on right: 209 210 211 337
    on left : 343
  assignable_range (239)
    on right: 211 212 213
    on left : 214 215
  pose_range_modifiers (240)
    on right: 213 224
    on left : 223 224
  var_without_namespaces (241)
    on right: 216 220
    on left : 218 219
  var_with_namespaces (242)
    on right: 217
    on left : 220
  var_method_modifier (243)
    on right: 221 222
    on left : 229 230 231 232 233 234
  pose_range_modifier (244)
    on right: 223 224
    on left : 225
  coord_system (245)
    on right: 233
    on left : 226 227 228
  var_system_modifers (246)
    on right: 235 236 238
    on left : 237 238 239
  var_system_modifer (247)
    on right: 237 238
    on left : 240
  ns (248)
    on right: 241 242
    on left : 243
  unary_expression (249)
    on right: 244
    on left : 246 247 248 249
  binary_expression (250)
    on right: 245
    on left : 250
  factor (251)
    on right: 246 248
    on left : 265 266 267 268 269 270 271 272 273
  operator (252)
    on right: 250
    on left : 251 252 253 254 255 256 257 258 259 260 261 262 263 264
  operation (253)
    on right: 267
    on left : 313 314 315 316
  signed_var (254)
    on right: 269
    on left : 281
  paren_expr (255)
    on right: 272
    on left : 276
  booleans (256)
    on right: 273 291
    on left : 274 275
  sign (257)
    on right: 279 280 281 341
    on left : 282
  reg (258)
    on right: 286
    on left : 305
  framereg (259)
    on right: 290
    on left : 308
  localvars (260)
    on right: 292
    on left : 312
  definable_range (261)
    on right: 305
    on left : 293 294
  reg_types (262)
    on right: 305
    on left : 295 296 297 298 299 300 301 302 303 304
  frametype (263)
    on right: 308
    on left : 306 307
  local_types (264)
    on right: 312
    on left : 309 310 311
  hash (265)
    on right: 327 336
    on left : 329 330
  hash_attributes (266)
    on right: 329 332
    on left : 331 332
  hash_attribute (267)
    on right: 331 332
    on left : 333
  optional_sign (268)
    on right: 338 339
    on left : 341 342
  array_values (269)
    on right: 343 345
    on left : 344 345
  array_value (270)
    on right: 344 345
    on left : 346

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 202 203
  AT_SYM (3) 
  COMMENT (4) 318
  MESSAGE (5) 319
  WARNING (6) 320
  JUMP (7) 102
  IO_METHOD (8) 96 97 98
  INPUT (9) 303
  OUTPUT (10) 304
  NUMREG (11) 301
  POSREG (12) 302
  VREG (13) 299
  SREG (14) 295
  TIME_SEGMENT (15) 162
  DISTANCE_SEGMENT (16) 163
  ARG (17) 298
  UALM (18) 296
  TOOLREG (19) 306
  FRAMEREG (20) 307
  MOVE (21) 151 152
  DOT (22) 61 62 151 152 157 158 159 160 161 162 163 164 165 166 225 229 230 231 232 233 234 240
  TO (23) 114 151 152
  DOWNTO (24) 115
  MID (25) 152
  AT (26) 157
  ACC (27) 158
  TERM (28) 160
  OFFSET (29) 161 232
  SKIP (30) 164
  GROUP (31) 68
  COORD (32) 167
  MROT (33) 168
  PTH (34) 169
  WJNT (35) 171
  INC (36) 170
  BREAK (37) 172
  RTCP (38) 173
  FPLIN (39) 174
  AP_LD (40) 179
  RT_LD (41) 178
  CD (42) 175
  CR (43) 159
  INDEV (44) 177
  EV (45) 176
  PSPD (46) 180
  CTV (47) 181
  SEMICOLON (48) 
  NEWLINE (49) 5 6 45 321 325
  STRING (50) 47 58 59 66 95 98 199 200 277 278 319 320 333 334
  REAL (51) 280 284 339
  DIGIT (52) 184 279 285 293 294 308 338
  WORD (53) 54 74 75 92 122 123 127 128 129 130 131 203 218 219 229 235 236 243 335
  EQUAL (54) 46 55 204 205 206 207 208 212 213
  RANGE (55) 214 293
  EEQUAL (56) 251
  NOTEQUAL (57) 252
  GTE (58) 255
  LTE (59) 256
  LT (60) 253
  GT (61) 254
  BANG (62) 248
  PLUS (63) 205 257
  MINUS (64) 184 206 258 282
  STAR (65) 207 260
  SLASH (66) 208 261
  DIV (67) 262
  AND (68) 264
  OR (69) 259
  MOD (70) 263
  IF (71) 103 105 143
  THEN (72) 105 113
  ELSE (73) 138 149
  ELSIF (74) 109 113
  END (75) 103 104 105 114 115 116 127 128 129 130 131 132 327
  UNLESS (76) 104 144
  FOR (77) 114 115
  IN (78) 114 115
  WHILE (79) 116
  WAIT_FOR (80) 59
  WAIT_UNTIL (81) 60 61 62
  TIMEOUT (82) 65
  AFTER (83) 66
  FANUC_USE (84) 69 70 71
  COLL_GUARD (85) 72
  SET_SKIP_CONDITION (86) 73
  NAMESPACE (87) 127
  CASE (88) 132
  WHEN (89) 135
  INDIRECT (90) 277 278
  POSITION (91) 300
  EVAL (92) 58
  TIMER (93) 297
  TIMER_METHOD (94) 57
  RAISE (95) 56
  ABORT (96) 35
  RETURN (97) 93 94
  POSITION_DATA (98) 327
  TRUE_FALSE (99) 48 274 340
  ON_OFF (100) 49 275
  CALL (101) 79
  RUN (102) 78
  PAUSE (103) 34
  TP_HEADER (104) 46
  TP_APPLICATION_TYPE (105) 55
  LPAREN (106) 43 44 59 60 61 62 65 66 68 70 71 76 78 79 93 97 98 114 115 128 129 130 131 151 152 157 158 159 160 161 162 163 164 166 211 213 276 277 278 319 320
  RPAREN (107) 43 44 59 60 61 62 65 66 68 70 71 76 78 79 93 97 98 114 115 128 129 130 131 151 152 157 158 159 160 161 162 163 164 166 211 213 276 277 278 319 320
  COLON (108) 54 129 131 243 333
  COMMA (109) 53 59 66 71 81 90 98 122 156 162 163 185 199 277 278 314 332 345
  LBRACK (110) 236 305 308 312 313 314 315 316 343
  RBRACK (111) 236 305 308 312 313 314 315 316 343
  LBRACE (112) 50 51 329 330
  RBRACE (113) 50 51 329 330
  LABEL (114) 67
  SYSTEM (115) 235 236
  ADDRESS (116) 317
  LPOS (117) 43
  JPOS (118) 44
  false (119) 323
  FUNCTION (120) 128 129 130 131
  OPERATION (121) 313 314 315 316
  USING (122) 124
  IMPORT (123) 125 126
  COMPILE (124) 125
  INLINE (125) 128 129
  ARROW (126) 209 210 211
  DEFAULTPOS (127) 209
  POSEATTR (128) 231
  POSEREVERSE (129) 225
  SPHERE (130) 226
  POLAR (131) 227
  ORIGIN (132) 228
  FIX (133) 234
  LOCALSTACK (134) 202
  LOCALREG (135) 309
  LOCALPOSE (136) 310
  LOCALFLAG (137) 311

--------- State ---------

state 0


  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 1


  $end          shift, and go to state 97


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 1 (program)

  statement     go to state 98
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 93
  COMMENT       [reduce using rule 324 (terminator)]
  NEWLINE       shift, and go to state 100
  NEWLINE       [reduce using rule 324 (terminator)]
  false         shift, and go to state 102
  $default      reduce using rule 324 (terminator)

  terminator    go to state 99
  comment       go to state 101

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 101) var_or_indirect : var_system _

  EQUAL         reduce using rule 101 (var_or_indirect)
  PLUS          reduce using rule 101 (var_or_indirect)
  MINUS         reduce using rule 101 (var_or_indirect)
  STAR          reduce using rule 101 (var_or_indirect)
  SLASH         reduce using rule 101 (var_or_indirect)
  ARROW         reduce using rule 101 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 103


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 104


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 105


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 106


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 107
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 112
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 113


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 114


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 115


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  69) use_statement : FANUC_USE _ indirectable
  70) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  71) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  LPAREN        shift, and go to state 117

  indirectable  go to state 116
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 51

  72) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  WORD          [reduce using rule 191 (optional_arg)]
  $default      reduce using rule 191 (optional_arg)

  optional_arg  go to state 123
  number        go to state 124
  var           go to state 125
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 52

  73) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  expression    go to state 126
  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 53

  74) function_call : WORD _
 203) definition : WORD _ ASSIGN definable
 218) var_without_namespaces : WORD _
 219) var_without_namespaces : WORD _ var_method_modifiers
 243) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 149
  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 74 (function_call)
  $default      reduce using rule 218 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 54

  75) function_call : namespaces _ WORD
 220) var_with_namespaces : namespaces _ var_without_namespaces
 242) namespaces : namespaces _ ns

  WORD          shift, and go to state 154

  var_without_namespaces  go to state 155
  ns            go to state 156

state 55

  76) basic_program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 157


state 56

  77) program_call : basic_program_call _

  $default      reduce using rule 77 (program_call)


state 57

  78) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 158

  namespaces    go to state 159
  function_call  go to state 160
  ns            go to state 90

state 58

  79) program_call : CALL _ var_or_indirect LPAREN args RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 161
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 59

  93) return_statement : RETURN _ LPAREN expression RPAREN
  94) return_statement : RETURN _

  LPAREN        shift, and go to state 162
  LPAREN        [reduce using rule 94 (return_statement)]
  $default      reduce using rule 94 (return_statement)


state 60

  96) io_method : IO_METHOD _ var_or_indirect
  97) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
  98) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  LPAREN        shift, and go to state 164
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 163
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 61

  99) var_or_indirect : var _
 214) assignable_range : var _ RANGE var
 215) assignable_range : var _

  RANGE         shift, and go to state 165
  EQUAL         [reduce using rule 215 (assignable_range)]
  $default      reduce using rule 99 (var_or_indirect)


state 62

 100) var_or_indirect : indirect_thing _

  $default      reduce using rule 100 (var_or_indirect)


state 63

 102) jump : JUMP _ label

  LABEL         shift, and go to state 49

  label         go to state 166

state 64

 103) conditional : IF _ expression block elsif_conditions else_block END
 105) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 167
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 65

 104) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 168
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 66

 114) forloop : FOR _ int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR _ int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91

  int_or_var    go to state 169
  integer       go to state 170
  var           go to state 171
  indirect_thing  go to state 172
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 67

 116) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 173
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 68

 124) using_statement : USING _ word_list

  WORD          shift, and go to state 177
  COMMA         shift, and go to state 176

  word_tuple    go to state 174
  word_list     go to state 175

state 69

 125) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 178


state 70

 126) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 177
  COMMA         shift, and go to state 176

  word_tuple    go to state 174
  word_list     go to state 179

state 71

 127) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 180


state 72

 128) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 129) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 181


state 73

 130) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 131) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 182


state 74

 132) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 110

  var           go to state 183
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 75

 142) inline_conditional : inlineable _
 143) inline_conditional : inlineable _ IF expression
 144) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 184
  IF            [reduce using rule 142 (inline_conditional)]
  UNLESS        shift, and go to state 185
  UNLESS        [reduce using rule 142 (inline_conditional)]
  $default      reduce using rule 142 (inline_conditional)


state 76

 145) inlineable : jump _

  $default      reduce using rule 145 (inlineable)


state 77

 146) inlineable : assignment _

  $default      reduce using rule 146 (inlineable)


state 78

 147) inlineable : io_method _

  $default      reduce using rule 147 (inlineable)


state 79

 148) inlineable : program_call _

  $default      reduce using rule 148 (inlineable)


state 80

 151) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 152) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 186


state 81

 201) label_definition : label _

  $default      reduce using rule 201 (label_definition)


state 82

 202) definition : LOCALSTACK _ ASSIGN definable

  ASSIGN        shift, and go to state 187


state 83

 204) assignment : var_or_indirect _ EQUAL expression
 205) assignment : var_or_indirect _ PLUS EQUAL expression
 206) assignment : var_or_indirect _ MINUS EQUAL expression
 207) assignment : var_or_indirect _ STAR EQUAL expression
 208) assignment : var_or_indirect _ SLASH EQUAL expression
 210) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 188
  PLUS          shift, and go to state 189
  MINUS         shift, and go to state 190
  STAR          shift, and go to state 191
  SLASH         shift, and go to state 192
  ARROW         shift, and go to state 193


state 84

 209) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 152

  var_method_modifiers  go to state 194
  var_method_modifier  go to state 151

state 85

 211) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 110

  assignable_range  go to state 195
  var           go to state 196
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 86

 212) position_assignment : assignable_range _ EQUAL assignable_range
 213) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 197


state 87

 216) var : var_without_namespaces _

  $default      reduce using rule 216 (var)


state 88

 217) var : var_with_namespaces _

  $default      reduce using rule 217 (var)


state 89

 235) var_system : SYSTEM _ WORD var_system_modifers
 236) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 198


state 90

 241) namespaces : ns _

  $default      reduce using rule 241 (namespaces)


state 91

 277) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 278) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 199


state 92

 317) address : ADDRESS _ var

  WORD          shift, and go to state 110

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var           go to state 200

state 93

 318) comment : COMMENT _

  $default      reduce using rule 318 (comment)


state 94

 319) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 201


state 95

 320) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 202


state 96

 327) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  sn            go to state 204
  swallow_newlines  go to state 205

state 97


  $end          shift, and go to state 206


state 98

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 93
  COMMENT       [reduce using rule 324 (terminator)]
  NEWLINE       shift, and go to state 100
  NEWLINE       [reduce using rule 324 (terminator)]
  false         shift, and go to state 102
  $default      reduce using rule 324 (terminator)

  terminator    go to state 207
  comment       go to state 101

state 99

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 100

 321) terminator : NEWLINE _

  $default      reduce using rule 321 (terminator)


state 101

 322) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 208
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 209

state 102

 323) terminator : false _

  $default      reduce using rule 323 (terminator)


state 103

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 210
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 104

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 211
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 105

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 213
  TRUE_FALSE    shift, and go to state 214
  ON_OFF        shift, and go to state 215

  tp_header_value  go to state 212

state 106

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  sn            go to state 216
  swallow_newlines  go to state 205

state 107

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 108

  99) var_or_indirect : var _

  $default      reduce using rule 99 (var_or_indirect)


state 109

 101) var_or_indirect : var_system _

  $default      reduce using rule 101 (var_or_indirect)


state 110

 218) var_without_namespaces : WORD _
 219) var_without_namespaces : WORD _ var_method_modifiers
 243) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  $default      reduce using rule 218 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 111

 220) var_with_namespaces : namespaces _ var_without_namespaces
 242) namespaces : namespaces _ ns

  WORD          shift, and go to state 110

  var_without_namespaces  go to state 155
  ns            go to state 156

state 112

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 113

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 114

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 217
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 115

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  expression    go to state 218
  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 116

  69) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 69 (use_statement)


state 117

  70) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  71) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 219
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 118

 187) indirectable : number _

  $default      reduce using rule 187 (indirectable)


state 119

 188) indirectable : var _

  $default      reduce using rule 188 (indirectable)


state 120

 283) number : integer _

  $default      reduce using rule 283 (number)


state 121

 284) number : REAL _

  $default      reduce using rule 284 (number)


state 122

 285) integer : DIGIT _

  $default      reduce using rule 285 (integer)


state 123

  72) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 72 (collguard_statement)


state 124

 189) optional_arg : number _

  $default      reduce using rule 189 (optional_arg)


state 125

 190) optional_arg : var _

  $default      reduce using rule 190 (optional_arg)


state 126

  73) set_skip_statement : SET_SKIP_CONDITION expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 73 (set_skip_statement)

  operator      go to state 220

state 127

  74) function_call : WORD _
 218) var_without_namespaces : WORD _
 219) var_without_namespaces : WORD _ var_method_modifiers
 243) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 74 (function_call)
  LPAREN        [reduce using rule 218 (var_without_namespaces)]
  $default      reduce using rule 218 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 128

 244) expression : unary_expression _

  $default      reduce using rule 244 (expression)


state 129

 245) expression : binary_expression _

  $default      reduce using rule 245 (expression)


state 130

 246) unary_expression : factor _

  $default      reduce using rule 246 (unary_expression)


state 131

 247) unary_expression : address _

  $default      reduce using rule 247 (unary_expression)


state 132

 248) unary_expression : BANG _ factor

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  OPERATION     shift, and go to state 148

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  factor        go to state 235
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 133

 249) unary_expression : basic_program_call _

  $default      reduce using rule 249 (unary_expression)


state 134

 265) factor : number _

  $default      reduce using rule 265 (factor)


state 135

 266) factor : signed_number _

  $default      reduce using rule 266 (factor)


state 136

 267) factor : operation _

  $default      reduce using rule 267 (factor)


state 137

 268) factor : var _

  $default      reduce using rule 268 (factor)


state 138

 269) factor : signed_var _

  $default      reduce using rule 269 (factor)


state 139

 270) factor : var_system _

  $default      reduce using rule 270 (factor)


state 140

 271) factor : indirect_thing _

  $default      reduce using rule 271 (factor)


state 141

 272) factor : paren_expr _

  $default      reduce using rule 272 (factor)


state 142

 273) factor : booleans _

  $default      reduce using rule 273 (factor)


state 143

 274) booleans : TRUE_FALSE _

  $default      reduce using rule 274 (booleans)


state 144

 275) booleans : ON_OFF _

  $default      reduce using rule 275 (booleans)


state 145

 276) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  expression    go to state 236
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 146

 279) signed_number : sign _ DIGIT
 280) signed_number : sign _ REAL
 281) signed_var : sign _ var

  REAL          shift, and go to state 238
  DIGIT         shift, and go to state 237
  WORD          shift, and go to state 110

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var           go to state 239

state 147

 282) sign : MINUS _

  $default      reduce using rule 282 (sign)


state 148

 313) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 314) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 315) operation : OPERATION _ LBRACK signed_number RBRACK
 316) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 240


state 149

 203) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 259
  OUTPUT        shift, and go to state 260
  NUMREG        shift, and go to state 257
  POSREG        shift, and go to state 258
  VREG          shift, and go to state 255
  SREG          shift, and go to state 251
  ARG           shift, and go to state 254
  UALM          shift, and go to state 252
  TOOLREG       shift, and go to state 262
  FRAMEREG      shift, and go to state 263
  STRING        shift, and go to state 241
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  MINUS         shift, and go to state 147
  POSITION      shift, and go to state 256
  TIMER         shift, and go to state 253
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LOCALREG      shift, and go to state 265
  LOCALPOSE     shift, and go to state 266
  LOCALFLAG     shift, and go to state 267

  definable     go to state 242
  sign          go to state 243
  integer       go to state 120
  reg           go to state 244
  number        go to state 245
  signed_number  go to state 246
  string        go to state 247
  framereg      go to state 248
  booleans      go to state 249
  localvars     go to state 250
  reg_types     go to state 261
  frametype     go to state 264
  local_types   go to state 268

state 150

 219) var_without_namespaces : WORD var_method_modifiers _
 222) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  $default      reduce using rule 219 (var_without_namespaces)

  var_method_modifier  go to state 269

state 151

 221) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 221 (var_method_modifiers)


state 152

 229) var_method_modifier : DOT _ swallow_newlines WORD
 230) var_method_modifier : DOT _ swallow_newlines group_statement
 231) var_method_modifier : DOT _ swallow_newlines POSEATTR
 232) var_method_modifier : DOT _ swallow_newlines OFFSET
 233) var_method_modifier : DOT _ swallow_newlines coord_system
 234) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 270

state 153

 243) ns : WORD COLON _ COLON

  COLON         shift, and go to state 271


state 154

  75) function_call : namespaces WORD _
 218) var_without_namespaces : WORD _
 219) var_without_namespaces : WORD _ var_method_modifiers
 243) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 75 (function_call)
  LPAREN        [reduce using rule 218 (var_without_namespaces)]
  $default      reduce using rule 218 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 155

 220) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 220 (var_with_namespaces)


state 156

 242) namespaces : namespaces ns _

  $default      reduce using rule 242 (namespaces)


state 157

  76) basic_program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 241
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148
  $default      reduce using rule 82 (args)

  namespaces    go to state 54
  function_call  go to state 55
  args          go to state 272
  arg           go to state 273
  number        go to state 274
  signed_number  go to state 275
  var           go to state 276
  string        go to state 277
  address       go to state 278
  expression    go to state 279
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 158

  74) function_call : WORD _
 243) ns : WORD _ COLON COLON

  COLON         shift, and go to state 153
  $default      reduce using rule 74 (function_call)


state 159

  75) function_call : namespaces _ WORD
 242) namespaces : namespaces _ ns

  WORD          shift, and go to state 280

  ns            go to state 156

state 160

  78) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 281


state 161

  79) program_call : CALL var_or_indirect _ LPAREN args RPAREN

  LPAREN        shift, and go to state 282


state 162

  93) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 283
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 163

  96) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 96 (io_method)


state 164

  97) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
  98) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 284
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 165

 214) assignable_range : var RANGE _ var

  WORD          shift, and go to state 110

  var           go to state 285
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 166

 102) jump : JUMP label _

  $default      reduce using rule 102 (jump)


state 167

 103) conditional : IF expression _ block elsif_conditions else_block END
 105) conditional_block : IF expression _ THEN block elsif_block else_block END
 250) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 286
  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  THEN          shift, and go to state 288

  block         go to state 287
  operator      go to state 220

state 168

 104) conditional : UNLESS expression _ block else_block END
 250) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 286
  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233

  block         go to state 289
  operator      go to state 220

state 169

 114) forloop : FOR int_or_var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR int_or_var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 290


state 170

 117) int_or_var : integer _

  $default      reduce using rule 117 (int_or_var)


state 171

 118) int_or_var : var _

  $default      reduce using rule 118 (int_or_var)


state 172

 119) int_or_var : indirect_thing _

  $default      reduce using rule 119 (int_or_var)


state 173

 116) while_loop : WHILE expression _ block END
 250) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 286
  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233

  block         go to state 291
  operator      go to state 220

state 174

 120) word_list : word_tuple _

  $default      reduce using rule 120 (word_list)


state 175

 121) word_list : word_list _ word_tuple
 124) using_statement : USING word_list _

  WORD          shift, and go to state 177
  WORD          [reduce using rule 124 (using_statement)]
  COMMA         shift, and go to state 176
  $default      reduce using rule 124 (using_statement)

  word_tuple    go to state 292

state 176

 122) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 293


state 177

 123) word_tuple : WORD _

  $default      reduce using rule 123 (word_tuple)


state 178

 125) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 177
  COMMA         shift, and go to state 176

  word_tuple    go to state 174
  word_list     go to state 294

state 179

 121) word_list : word_list _ word_tuple
 126) import_statement : IMPORT word_list _

  WORD          shift, and go to state 177
  WORD          [reduce using rule 126 (import_statement)]
  COMMA         shift, and go to state 176
  $default      reduce using rule 126 (import_statement)

  word_tuple    go to state 292

state 180

 127) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 286

  block         go to state 295

state 181

 128) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 129) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 296


state 182

 130) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 131) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 297


state 183

 132) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 298

state 184

 143) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 299
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 185

 144) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 300
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 186

 151) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 152) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 301

state 187

 202) definition : LOCALSTACK ASSIGN _ definable

  INPUT         shift, and go to state 259
  OUTPUT        shift, and go to state 260
  NUMREG        shift, and go to state 257
  POSREG        shift, and go to state 258
  VREG          shift, and go to state 255
  SREG          shift, and go to state 251
  ARG           shift, and go to state 254
  UALM          shift, and go to state 252
  TOOLREG       shift, and go to state 262
  FRAMEREG      shift, and go to state 263
  STRING        shift, and go to state 241
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  MINUS         shift, and go to state 147
  POSITION      shift, and go to state 256
  TIMER         shift, and go to state 253
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LOCALREG      shift, and go to state 265
  LOCALPOSE     shift, and go to state 266
  LOCALFLAG     shift, and go to state 267

  definable     go to state 302
  sign          go to state 243
  integer       go to state 120
  reg           go to state 244
  number        go to state 245
  signed_number  go to state 246
  string        go to state 247
  framereg      go to state 248
  booleans      go to state 249
  localvars     go to state 250
  reg_types     go to state 261
  frametype     go to state 264
  local_types   go to state 268

state 188

 204) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 303
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 189

 205) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 304


state 190

 206) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 305


state 191

 207) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 306


state 192

 208) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 307


state 193

 210) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 309

  array         go to state 308

state 194

 209) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 222) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  ARROW         shift, and go to state 310

  var_method_modifier  go to state 269

state 195

 211) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 311


state 196

 214) assignable_range : var _ RANGE var
 215) assignable_range : var _

  RANGE         shift, and go to state 165
  $default      reduce using rule 215 (assignable_range)


state 197

 212) position_assignment : assignable_range EQUAL _ assignable_range
 213) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 110
  LPAREN        shift, and go to state 313

  assignable_range  go to state 312
  var           go to state 196
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 198

 235) var_system : SYSTEM WORD _ var_system_modifers
 236) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 317
  DOT           [reduce using rule 239 (var_system_modifers)]
  LBRACK        shift, and go to state 315
  $default      reduce using rule 239 (var_system_modifers)

  var_system_modifers  go to state 314
  var_system_modifer  go to state 316

state 199

 277) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 278) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 318


state 200

 317) address : ADDRESS var _

  $default      reduce using rule 317 (address)


state 201

 319) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 319


state 202

 320) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 320


state 203

 325) swallow_newlines : NEWLINE _

  $default      reduce using rule 325 (swallow_newlines)


state 204

 327) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 322

  hash          go to state 321

state 205

 328) sn : swallow_newlines _

  $default      reduce using rule 328 (sn)


state 206


  $default      accept


state 207

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 208

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 209

 322) terminator : comment optional_newline _

  $default      reduce using rule 322 (terminator)


state 210

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 323


state 211

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 324


state 212

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 213

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 214

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 215

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 216

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 325

  tp_tool_methods  go to state 326

state 217

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 327


state 218

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  RPAREN        shift, and go to state 328

  operator      go to state 220

state 219

  70) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  71) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 329
  COMMA         shift, and go to state 330


state 220

 250) binary_expression : expression operator _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  expression    go to state 331
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 221

 251) operator : EEQUAL _

  $default      reduce using rule 251 (operator)


state 222

 252) operator : NOTEQUAL _

  $default      reduce using rule 252 (operator)


state 223

 253) operator : LT _

  $default      reduce using rule 253 (operator)


state 224

 254) operator : GT _

  $default      reduce using rule 254 (operator)


state 225

 255) operator : GTE _

  $default      reduce using rule 255 (operator)


state 226

 256) operator : LTE _

  $default      reduce using rule 256 (operator)


state 227

 257) operator : PLUS _

  $default      reduce using rule 257 (operator)


state 228

 258) operator : MINUS _

  $default      reduce using rule 258 (operator)


state 229

 259) operator : OR _

  $default      reduce using rule 259 (operator)


state 230

 260) operator : STAR _

  $default      reduce using rule 260 (operator)


state 231

 261) operator : SLASH _

  $default      reduce using rule 261 (operator)


state 232

 262) operator : DIV _

  $default      reduce using rule 262 (operator)


state 233

 263) operator : MOD _

  $default      reduce using rule 263 (operator)


state 234

 264) operator : AND _

  $default      reduce using rule 264 (operator)


state 235

 248) unary_expression : BANG factor _

  $default      reduce using rule 248 (unary_expression)


state 236

 250) binary_expression : expression _ operator expression
 276) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  RPAREN        shift, and go to state 332

  operator      go to state 220

state 237

 279) signed_number : sign DIGIT _

  $default      reduce using rule 279 (signed_number)


state 238

 280) signed_number : sign REAL _

  $default      reduce using rule 280 (signed_number)


state 239

 281) signed_var : sign var _

  $default      reduce using rule 281 (signed_var)


state 240

 313) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 314) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 315) operation : OPERATION LBRACK _ signed_number RBRACK
 316) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 243
  integer       go to state 120
  var_or_indirect  go to state 333
  signed_number  go to state 334
  number        go to state 335

state 241

  95) string : STRING _

  $default      reduce using rule 95 (string)


state 242

 203) definition : WORD ASSIGN definable _

  $default      reduce using rule 203 (definition)


state 243

 279) signed_number : sign _ DIGIT
 280) signed_number : sign _ REAL

  REAL          shift, and go to state 238
  DIGIT         shift, and go to state 237


state 244

 286) definable : reg _

  $default      reduce using rule 286 (definable)


state 245

 287) definable : number _

  $default      reduce using rule 287 (definable)


state 246

 288) definable : signed_number _

  $default      reduce using rule 288 (definable)


state 247

 289) definable : string _

  $default      reduce using rule 289 (definable)


state 248

 290) definable : framereg _

  $default      reduce using rule 290 (definable)


state 249

 291) definable : booleans _

  $default      reduce using rule 291 (definable)


state 250

 292) definable : localvars _

  $default      reduce using rule 292 (definable)


state 251

 295) reg_types : SREG _

  $default      reduce using rule 295 (reg_types)


state 252

 296) reg_types : UALM _

  $default      reduce using rule 296 (reg_types)


state 253

 297) reg_types : TIMER _

  $default      reduce using rule 297 (reg_types)


state 254

 298) reg_types : ARG _

  $default      reduce using rule 298 (reg_types)


state 255

 299) reg_types : VREG _

  $default      reduce using rule 299 (reg_types)


state 256

 300) reg_types : POSITION _

  $default      reduce using rule 300 (reg_types)


state 257

 301) reg_types : NUMREG _

  $default      reduce using rule 301 (reg_types)


state 258

 302) reg_types : POSREG _

  $default      reduce using rule 302 (reg_types)


state 259

 303) reg_types : INPUT _

  $default      reduce using rule 303 (reg_types)


state 260

 304) reg_types : OUTPUT _

  $default      reduce using rule 304 (reg_types)


state 261

 305) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 336


state 262

 306) frametype : TOOLREG _

  $default      reduce using rule 306 (frametype)


state 263

 307) frametype : FRAMEREG _

  $default      reduce using rule 307 (frametype)


state 264

 308) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 337


state 265

 309) local_types : LOCALREG _

  $default      reduce using rule 309 (local_types)


state 266

 310) local_types : LOCALPOSE _

  $default      reduce using rule 310 (local_types)


state 267

 311) local_types : LOCALFLAG _

  $default      reduce using rule 311 (local_types)


state 268

 312) localvars : local_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 338


state 269

 222) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 222 (var_method_modifiers)


state 270

 229) var_method_modifier : DOT swallow_newlines _ WORD
 230) var_method_modifier : DOT swallow_newlines _ group_statement
 231) var_method_modifier : DOT swallow_newlines _ POSEATTR
 232) var_method_modifier : DOT swallow_newlines _ OFFSET
 233) var_method_modifier : DOT swallow_newlines _ coord_system
 234) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 346
  GROUP         shift, and go to state 339
  WORD          shift, and go to state 343
  POSEATTR      shift, and go to state 345
  SPHERE        shift, and go to state 340
  POLAR         shift, and go to state 341
  ORIGIN        shift, and go to state 342
  FIX           shift, and go to state 348

  group_statement  go to state 344
  coord_system  go to state 347

state 271

 243) ns : WORD COLON COLON _

  $default      reduce using rule 243 (ns)


state 272

  76) basic_program_call : function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 349
  COMMA         shift, and go to state 350


state 273

  80) args : arg _

  $default      reduce using rule 80 (args)


state 274

  83) arg : number _
 265) factor : number _

  RPAREN        reduce using rule 83 (arg)
  RPAREN        [reduce using rule 265 (factor)]
  COMMA         reduce using rule 83 (arg)
  COMMA         [reduce using rule 265 (factor)]
  $default      reduce using rule 265 (factor)


state 275

  84) arg : signed_number _
 266) factor : signed_number _

  RPAREN        reduce using rule 84 (arg)
  RPAREN        [reduce using rule 266 (factor)]
  COMMA         reduce using rule 84 (arg)
  COMMA         [reduce using rule 266 (factor)]
  $default      reduce using rule 266 (factor)


state 276

  85) arg : var _
 268) factor : var _

  RPAREN        reduce using rule 85 (arg)
  RPAREN        [reduce using rule 268 (factor)]
  COMMA         reduce using rule 85 (arg)
  COMMA         [reduce using rule 268 (factor)]
  $default      reduce using rule 268 (factor)


state 277

  86) arg : string _

  $default      reduce using rule 86 (arg)


state 278

  87) arg : address _
 247) unary_expression : address _

  RPAREN        reduce using rule 87 (arg)
  RPAREN        [reduce using rule 247 (unary_expression)]
  COMMA         reduce using rule 87 (arg)
  COMMA         [reduce using rule 247 (unary_expression)]
  $default      reduce using rule 247 (unary_expression)


state 279

  88) arg : expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 88 (arg)

  operator      go to state 220

state 280

  75) function_call : namespaces WORD _
 243) ns : WORD _ COLON COLON

  COLON         shift, and go to state 153
  $default      reduce using rule 75 (function_call)


state 281

  78) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 241
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148
  $default      reduce using rule 82 (args)

  namespaces    go to state 54
  function_call  go to state 55
  args          go to state 351
  arg           go to state 273
  number        go to state 274
  signed_number  go to state 275
  var           go to state 276
  string        go to state 277
  address       go to state 278
  expression    go to state 279
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 282

  79) program_call : CALL var_or_indirect LPAREN _ args RPAREN

  STRING        shift, and go to state 241
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148
  $default      reduce using rule 82 (args)

  namespaces    go to state 54
  function_call  go to state 55
  args          go to state 352
  arg           go to state 273
  number        go to state 274
  signed_number  go to state 275
  var           go to state 276
  string        go to state 277
  address       go to state 278
  expression    go to state 279
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 283

  93) return_statement : RETURN LPAREN expression _ RPAREN
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  RPAREN        shift, and go to state 353

  operator      go to state 220

state 284

  97) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
  98) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 354
  COMMA         shift, and go to state 355


state 285

 214) assignable_range : var RANGE var _

  $default      reduce using rule 214 (assignable_range)


state 286

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82

  statement     go to state 3
  statements    go to state 356
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 287

 103) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 359
  ELSIF         [reduce using rule 108 (elsif_conditions)]
  $default      reduce using rule 108 (elsif_conditions)

  elsif_conditions  go to state 357
  elsif_condition  go to state 358

state 288

 105) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 286

  block         go to state 360

state 289

 104) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 362
  $default      reduce using rule 150 (else_block)

  else_block    go to state 361

state 290

 114) forloop : FOR int_or_var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR int_or_var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 363


state 291

 116) while_loop : WHILE expression block _ END

  END           shift, and go to state 364


state 292

 121) word_list : word_list word_tuple _

  $default      reduce using rule 121 (word_list)


state 293

 122) word_tuple : COMMA WORD _

  $default      reduce using rule 122 (word_tuple)


state 294

 121) word_list : word_list _ word_tuple
 125) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 177
  WORD          [reduce using rule 125 (compile_statement)]
  COMMA         shift, and go to state 176
  $default      reduce using rule 125 (compile_statement)

  word_tuple    go to state 292

state 295

 127) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 365


state 296

 128) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 129) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 366


state 297

 130) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 131) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 369
  $default      reduce using rule 91 (program_vars)

  program_var   go to state 367
  program_vars  go to state 368

state 298

 132) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 372

  case_conditions  go to state 370
  case_condition  go to state 371

state 299

 143) inline_conditional : inlineable IF expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 143 (inline_conditional)

  operator      go to state 220

state 300

 144) inline_conditional : inlineable UNLESS expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 144 (inline_conditional)

  operator      go to state 220

state 301

 151) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 152) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 373
  MID           shift, and go to state 374


state 302

 202) definition : LOCALSTACK ASSIGN definable _

  $default      reduce using rule 202 (definition)


state 303

 204) assignment : var_or_indirect EQUAL expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 204 (assignment)

  operator      go to state 220

state 304

 205) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 375
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 305

 206) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 376
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 306

 207) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 377
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 307

 208) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 378
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 308

 210) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 210 (position_assignment)


state 309

 343) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 205
  sn            go to state 379

state 310

 209) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 309

  array         go to state 380

state 311

 211) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 152

  var_method_modifiers  go to state 381
  var_method_modifier  go to state 151

state 312

 212) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 212 (position_assignment)


state 313

 213) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 110

  assignable_range  go to state 382
  var           go to state 196
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 314

 235) var_system : SYSTEM WORD var_system_modifers _
 238) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 317
  DOT           [reduce using rule 235 (var_system)]
  $default      reduce using rule 235 (var_system)

  var_system_modifer  go to state 383

state 315

 236) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 122

  integer       go to state 384

state 316

 237) var_system_modifers : var_system_modifer _

  $default      reduce using rule 237 (var_system_modifers)


state 317

 240) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 89

  var_system    go to state 385

state 318

 277) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 278) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 386


state 319

 319) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 387


state 320

 320) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 388


state 321

 327) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  sn            go to state 389
  swallow_newlines  go to state 205

state 322

 329) hash : LBRACE _ sn hash_attributes sn RBRACE
 330) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 205
  sn            go to state 390

state 323

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 324

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 325

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  sn            go to state 391
  swallow_newlines  go to state 205

state 326

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 327

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 392


state 328

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 393
  $default      reduce using rule 60 (wait_statement)


state 329

  70) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 70 (use_statement)


state 330

  71) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 339

  group_statement  go to state 394

state 331

 250) binary_expression : expression _ operator expression
 250) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 221
  EEQUAL        [reduce using rule 250 (binary_expression)]
  NOTEQUAL      shift, and go to state 222
  NOTEQUAL      [reduce using rule 250 (binary_expression)]
  GTE           shift, and go to state 225
  GTE           [reduce using rule 250 (binary_expression)]
  LTE           shift, and go to state 226
  LTE           [reduce using rule 250 (binary_expression)]
  LT            shift, and go to state 223
  LT            [reduce using rule 250 (binary_expression)]
  GT            shift, and go to state 224
  GT            [reduce using rule 250 (binary_expression)]
  PLUS          shift, and go to state 227
  PLUS          [reduce using rule 250 (binary_expression)]
  MINUS         shift, and go to state 228
  MINUS         [reduce using rule 250 (binary_expression)]
  STAR          shift, and go to state 230
  STAR          [reduce using rule 250 (binary_expression)]
  SLASH         shift, and go to state 231
  SLASH         [reduce using rule 250 (binary_expression)]
  DIV           shift, and go to state 232
  DIV           [reduce using rule 250 (binary_expression)]
  AND           shift, and go to state 234
  AND           [reduce using rule 250 (binary_expression)]
  OR            shift, and go to state 229
  OR            [reduce using rule 250 (binary_expression)]
  MOD           shift, and go to state 233
  MOD           [reduce using rule 250 (binary_expression)]
  $default      reduce using rule 250 (binary_expression)

  operator      go to state 220

state 332

 276) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 276 (paren_expr)


state 333

 313) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 314) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 396
  RBRACK        shift, and go to state 395


state 334

 315) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 397


state 335

 316) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 398


state 336

 305) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 399

  definable_range  go to state 400

state 337

 308) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 401


state 338

 312) localvars : local_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 402


state 339

  68) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 403


state 340

 226) coord_system : SPHERE _

  $default      reduce using rule 226 (coord_system)


state 341

 227) coord_system : POLAR _

  $default      reduce using rule 227 (coord_system)


state 342

 228) coord_system : ORIGIN _

  $default      reduce using rule 228 (coord_system)


state 343

 229) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 229 (var_method_modifier)


state 344

 230) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 230 (var_method_modifier)


state 345

 231) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 231 (var_method_modifier)


state 346

 232) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 232 (var_method_modifier)


state 347

 233) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 233 (var_method_modifier)


state 348

 234) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 234 (var_method_modifier)


state 349

  76) basic_program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 76 (basic_program_call)


state 350

  81) args : args COMMA _ arg

  STRING        shift, and go to state 241
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  arg           go to state 404
  number        go to state 274
  signed_number  go to state 275
  var           go to state 276
  string        go to state 277
  address       go to state 278
  expression    go to state 279
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 351

  78) program_call : RUN function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 405
  COMMA         shift, and go to state 350


state 352

  79) program_call : CALL var_or_indirect LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 406
  COMMA         shift, and go to state 350


state 353

  93) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 93 (return_statement)


state 354

  97) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 97 (io_method)


state 355

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122

  number        go to state 407
  integer       go to state 120

state 356

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 5 (block)

  statement     go to state 98
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 357

 103) conditional : IF expression block elsif_conditions _ else_block END
 107) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 362
  ELSIF         shift, and go to state 359
  $default      reduce using rule 150 (else_block)

  else_block    go to state 408
  elsif_condition  go to state 409

state 358

 106) elsif_conditions : elsif_condition _

  $default      reduce using rule 106 (elsif_conditions)


state 359

 109) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 410
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 360

 105) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 413
  ELSIF         [reduce using rule 112 (elsif_block)]
  $default      reduce using rule 112 (elsif_block)

  elsif_block   go to state 411
  elsif_block_condition  go to state 412

state 361

 104) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 414


state 362

 149) else_block : ELSE _ block

  NEWLINE       shift, and go to state 286

  block         go to state 415

state 363

 114) forloop : FOR int_or_var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR int_or_var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91

  int_or_var    go to state 416
  integer       go to state 170
  var           go to state 171
  indirect_thing  go to state 172
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 364

 116) while_loop : WHILE expression block END _

  $default      reduce using rule 116 (while_loop)


state 365

 127) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 127 (namespace)


state 366

 128) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 129) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 369
  $default      reduce using rule 91 (program_vars)

  program_var   go to state 367
  program_vars  go to state 417

state 367

  89) program_vars : program_var _

  $default      reduce using rule 89 (program_vars)


state 368

  90) program_vars : program_vars _ COMMA program_var
 130) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 131) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 419
  COMMA         shift, and go to state 418


state 369

  92) program_var : WORD _

  $default      reduce using rule 92 (program_var)


state 370

 132) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 134) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 422
  WHEN          shift, and go to state 372
  $default      reduce using rule 139 (case_else)

  case_else     go to state 420
  case_condition  go to state 421

state 371

 133) case_conditions : case_condition _

  $default      reduce using rule 133 (case_conditions)


state 372

 135) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  case_allowed_condition  go to state 423
  number        go to state 424
  var           go to state 425
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 373

 151) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 426


state 374

 152) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 427


state 375

 205) assignment : var_or_indirect PLUS EQUAL expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 205 (assignment)

  operator      go to state 220

state 376

 206) assignment : var_or_indirect MINUS EQUAL expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 206 (assignment)

  operator      go to state 220

state 377

 207) assignment : var_or_indirect STAR EQUAL expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 207 (assignment)

  operator      go to state 220

state 378

 208) assignment : var_or_indirect SLASH EQUAL expression _
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  $default      reduce using rule 208 (assignment)

  operator      go to state 220

state 379

 343) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 428
  WORD          shift, and go to state 429
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 433
  LBRACK        shift, and go to state 309
  LBRACE        shift, and go to state 322
  $default      reduce using rule 342 (optional_sign)

  hash          go to state 430
  array         go to state 431
  optional_sign  go to state 432
  sign          go to state 434
  array_values  go to state 435
  array_value   go to state 436
  hash_value    go to state 437

state 380

 209) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 209 (position_assignment)


state 381

 211) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 222) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  ARROW         shift, and go to state 438

  var_method_modifier  go to state 269

state 382

 213) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 439


state 383

 238) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 238 (var_system_modifers)


state 384

 236) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 440


state 385

 240) var_system_modifer : DOT var_system _

  $default      reduce using rule 240 (var_system_modifer)


state 386

 277) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 278) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  indirectable  go to state 441
  integer       go to state 120

state 387

 319) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 319 (message)


state 388

 320) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 320 (warning)


state 389

 327) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 442


state 390

 329) hash : LBRACE sn _ hash_attributes sn RBRACE
 330) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 446
  RBRACE        shift, and go to state 444

  hash_attributes  go to state 443
  hash_attribute  go to state 445

state 391

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 450
  RBRACE        shift, and go to state 448

  tp_tool_attributes  go to state 447
  tp_tool_attribute  go to state 449

state 392

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 451


state 393

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  wait_modifier  go to state 452
  timeout_modifier  go to state 453
  after_modifier  go to state 454
  swallow_newlines  go to state 455

state 394

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 456


state 395

 313) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 313 (operation)


state 396

 314) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var_or_indirect  go to state 457

state 397

 315) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 315 (operation)


state 398

 316) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 316 (operation)


state 399

 293) definable_range : DIGIT _ RANGE DIGIT
 294) definable_range : DIGIT _

  RANGE         shift, and go to state 458
  $default      reduce using rule 294 (definable_range)


state 400

 305) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 459


state 401

 308) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 460


state 402

 312) localvars : local_types LBRACK RBRACK _

  $default      reduce using rule 312 (localvars)


state 403

  68) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 122

  integer       go to state 461

state 404

  81) args : args COMMA arg _

  $default      reduce using rule 81 (args)


state 405

  78) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 78 (program_call)


state 406

  79) program_call : CALL var_or_indirect LPAREN args RPAREN _

  $default      reduce using rule 79 (program_call)


state 407

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 462


state 408

 103) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 463


state 409

 107) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 107 (elsif_conditions)


state 410

 109) elsif_condition : ELSIF expression _ block
 250) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 286
  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233

  block         go to state 464
  operator      go to state 220

state 411

 105) conditional_block : IF expression THEN block elsif_block _ else_block END
 111) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 362
  ELSIF         shift, and go to state 413
  $default      reduce using rule 150 (else_block)

  else_block    go to state 465
  elsif_block_condition  go to state 466

state 412

 110) elsif_block : elsif_block_condition _

  $default      reduce using rule 110 (elsif_block)


state 413

 113) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 467
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 414

 104) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 104 (conditional)


state 415

 149) else_block : ELSE block _

  $default      reduce using rule 149 (else_block)


state 416

 114) forloop : FOR int_or_var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 115) forloop : FOR int_or_var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 468
  DOWNTO        shift, and go to state 469


state 417

  90) program_vars : program_vars _ COMMA program_var
 128) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 129) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 470
  COMMA         shift, and go to state 418


state 418

  90) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 369

  program_var   go to state 471

state 419

 130) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 131) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 286
  COLON         shift, and go to state 473

  block         go to state 472

state 420

 132) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 474


state 421

 134) case_conditions : case_conditions case_condition _

  $default      reduce using rule 134 (case_conditions)


state 422

 138) case_else : ELSE _ block

  NEWLINE       shift, and go to state 286

  block         go to state 475

state 423

 135) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 286

  block         go to state 476

state 424

 136) case_allowed_condition : number _

  $default      reduce using rule 136 (case_allowed_condition)


state 425

 137) case_allowed_condition : var _

  $default      reduce using rule 137 (case_allowed_condition)


state 426

 151) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 477
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 427

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 478
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 428

 334) hash_value : STRING _

  $default      reduce using rule 334 (hash_value)


state 429

 335) hash_value : WORD _

  $default      reduce using rule 335 (hash_value)


state 430

 336) hash_value : hash _

  $default      reduce using rule 336 (hash_value)


state 431

 337) hash_value : array _

  $default      reduce using rule 337 (hash_value)


state 432

 338) hash_value : optional_sign _ DIGIT
 339) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 480
  DIGIT         shift, and go to state 479


state 433

 340) hash_value : TRUE_FALSE _

  $default      reduce using rule 340 (hash_value)


state 434

 341) optional_sign : sign _

  $default      reduce using rule 341 (optional_sign)


state 435

 343) array : LBRACK sn array_values _ sn RBRACK
 345) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 203
  COMMA         shift, and go to state 482
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 205
  sn            go to state 481

state 436

 344) array_values : array_value _

  $default      reduce using rule 344 (array_values)


state 437

 346) array_value : hash_value _

  $default      reduce using rule 346 (array_value)


state 438

 211) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 309

  array         go to state 483

state 439

 213) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 486

  pose_range_modifiers  go to state 484
  pose_range_modifier  go to state 485

state 440

 236) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 317
  DOT           [reduce using rule 239 (var_system_modifers)]
  $default      reduce using rule 239 (var_system_modifers)

  var_system_modifers  go to state 487
  var_system_modifer  go to state 316

state 441

 277) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 278) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 488


state 442

 327) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 327 (position_data)


state 443

 329) hash : LBRACE sn hash_attributes _ sn RBRACE
 332) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 203
  COMMA         shift, and go to state 490
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 205
  sn            go to state 489

state 444

 330) hash : LBRACE sn RBRACE _

  $default      reduce using rule 330 (hash)


state 445

 331) hash_attributes : hash_attribute _

  $default      reduce using rule 331 (hash_attributes)


state 446

 333) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 491


state 447

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 203
  COMMA         shift, and go to state 493
  $default      reduce using rule 326 (swallow_newlines)

  sn            go to state 492
  swallow_newlines  go to state 205

state 448

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 449

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 450

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 494


state 451

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 452

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 495
  $default      reduce using rule 61 (wait_statement)


state 453

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 454

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 455

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 496
  AFTER         shift, and go to state 497


state 456

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 71 (use_statement)


state 457

 314) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 498


state 458

 293) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 499


state 459

 305) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 305 (reg)


state 460

 308) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 308 (framereg)


state 461

  68) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 500


state 462

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 501


state 463

 103) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 103 (conditional)


state 464

 109) elsif_condition : ELSIF expression block _

  $default      reduce using rule 109 (elsif_condition)


state 465

 105) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 502


state 466

 111) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 111 (elsif_block)


state 467

 113) elsif_block_condition : ELSIF expression _ THEN block
 250) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 221
  NOTEQUAL      shift, and go to state 222
  GTE           shift, and go to state 225
  LTE           shift, and go to state 226
  LT            shift, and go to state 223
  GT            shift, and go to state 224
  PLUS          shift, and go to state 227
  MINUS         shift, and go to state 228
  STAR          shift, and go to state 230
  SLASH         shift, and go to state 231
  DIV           shift, and go to state 232
  AND           shift, and go to state 234
  OR            shift, and go to state 229
  MOD           shift, and go to state 233
  THEN          shift, and go to state 503

  operator      go to state 220

state 468

 114) forloop : FOR int_or_var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91

  int_or_var    go to state 504
  integer       go to state 170
  var           go to state 171
  indirect_thing  go to state 172
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 469

 115) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91

  int_or_var    go to state 505
  integer       go to state 170
  var           go to state 171
  indirect_thing  go to state 172
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 470

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 129) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 286
  COLON         shift, and go to state 507

  block         go to state 506

state 471

  90) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 90 (program_vars)


state 472

 130) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 508


state 473

 131) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 509


state 474

 132) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 132 (case_statement)


state 475

 138) case_else : ELSE block _

  $default      reduce using rule 138 (case_else)


state 476

 135) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 135 (case_condition)


state 477

 151) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 510


state 478

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 511


state 479

 338) hash_value : optional_sign DIGIT _

  $default      reduce using rule 338 (hash_value)


state 480

 339) hash_value : optional_sign REAL _

  $default      reduce using rule 339 (hash_value)


state 481

 343) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 512


state 482

 345) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 205
  sn            go to state 513

state 483

 211) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 211 (position_assignment)


state 484

 213) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 224) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 486
  $default      reduce using rule 213 (position_assignment)

  pose_range_modifier  go to state 514

state 485

 223) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 223 (pose_range_modifiers)


state 486

 225) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 515

state 487

 236) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 238) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 317
  DOT           [reduce using rule 236 (var_system)]
  $default      reduce using rule 236 (var_system)

  var_system_modifer  go to state 383

state 488

 277) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 278) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 152
  $default      reduce using rule 277 (indirect_thing)

  var_method_modifier  go to state 151
  var_method_modifiers  go to state 516

state 489

 329) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 517


state 490

 332) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 205
  sn            go to state 518

state 491

 333) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 428
  WORD          shift, and go to state 429
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 433
  LBRACK        shift, and go to state 309
  LBRACE        shift, and go to state 322
  $default      reduce using rule 342 (optional_sign)

  hash_value    go to state 519
  hash          go to state 430
  array         go to state 431
  optional_sign  go to state 432
  sign          go to state 434

state 492

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 520


state 493

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  sn            go to state 521
  swallow_newlines  go to state 205

state 494

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 428
  WORD          shift, and go to state 429
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 433
  LBRACK        shift, and go to state 309
  LBRACE        shift, and go to state 322
  $default      reduce using rule 342 (optional_sign)

  hash_value    go to state 522
  hash          go to state 430
  array         go to state 431
  optional_sign  go to state 432
  sign          go to state 434

state 495

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  wait_modifier  go to state 523
  timeout_modifier  go to state 453
  after_modifier  go to state 454
  swallow_newlines  go to state 455

state 496

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 524


state 497

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 525


state 498

 314) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 314 (operation)


state 499

 293) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 293 (definable_range)


state 500

  68) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 68 (group_statement)


state 501

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 526


state 502

 105) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 105 (conditional_block)


state 503

 113) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 286

  block         go to state 527

state 504

 114) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 528


state 505

 115) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 529


state 506

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 530


state 507

 129) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 531


state 508

 130) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 130 (function)


state 509

 131) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 286

  block         go to state 532

state 510

 151) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 535

  motion_modifiers  go to state 533
  motion_modifier  go to state 534

state 511

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 536


state 512

 343) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 343 (array)


state 513

 345) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 428
  WORD          shift, and go to state 429
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 433
  LBRACK        shift, and go to state 309
  LBRACE        shift, and go to state 322
  $default      reduce using rule 342 (optional_sign)

  hash          go to state 430
  array         go to state 431
  optional_sign  go to state 432
  sign          go to state 434
  array_value   go to state 537
  hash_value    go to state 437

state 514

 224) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 224 (pose_range_modifiers)


state 515

 225) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 538


state 516

 222) var_method_modifiers : var_method_modifiers _ var_method_modifier
 278) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 152
  $default      reduce using rule 278 (indirect_thing)

  var_method_modifier  go to state 269

state 517

 329) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 329 (hash)


state 518

 332) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 446

  hash_attribute  go to state 539

state 519

 333) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 333 (hash_attribute)


state 520

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 521

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 450

  tp_tool_attribute  go to state 540

state 522

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 523

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 524

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49

  label         go to state 541

state 525

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 542
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 526

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 98 (io_method)


state 527

 113) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 113 (elsif_block_condition)


state 528

 114) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 286

  block         go to state 543

state 529

 115) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 286

  block         go to state 544

state 530

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 128 (function)


state 531

 129) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 286

  block         go to state 545

state 532

 131) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 546


state 533

 151) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 154) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 535
  $default      reduce using rule 151 (motion_statement)

  motion_modifier  go to state 547

state 534

 153) motion_modifiers : motion_modifier _

  $default      reduce using rule 153 (motion_modifiers)


state 535

 157) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 158) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 159) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 160) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 161) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 162) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 163) motion_modifier : DOT _ swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 164) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 165) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 166) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 548

state 536

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 203
  $default      reduce using rule 326 (swallow_newlines)

  swallow_newlines  go to state 549

state 537

 345) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 345 (array_values)


state 538

 225) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 225 (pose_range_modifier)


state 539

 332) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 332 (hash_attributes)


state 540

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 541

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 550


state 542

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 551


state 543

 114) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 552


state 544

 115) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 553


state 545

 129) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 554


state 546

 131) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 131 (function)


state 547

 154) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 154 (motion_modifiers)


state 548

 157) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 158) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 159) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 160) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 161) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 162) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 163) motion_modifier : DOT swallow_newlines _ DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 164) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 165) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 166) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 560
  DISTANCE_SEGMENT  shift, and go to state 561
  AT            shift, and go to state 555
  ACC           shift, and go to state 556
  TERM          shift, and go to state 558
  OFFSET        shift, and go to state 559
  SKIP          shift, and go to state 562
  COORD         shift, and go to state 565
  MROT          shift, and go to state 566
  PTH           shift, and go to state 567
  WJNT          shift, and go to state 569
  INC           shift, and go to state 568
  BREAK         shift, and go to state 570
  RTCP          shift, and go to state 571
  FPLIN         shift, and go to state 572
  AP_LD         shift, and go to state 577
  RT_LD         shift, and go to state 576
  CD            shift, and go to state 573
  CR            shift, and go to state 557
  INDEV         shift, and go to state 575
  EV            shift, and go to state 574
  PSPD          shift, and go to state 578
  CTV           shift, and go to state 579

  valid_motion_statements  go to state 563
  single_argument_motion_modifiers  go to state 564

state 549

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 580


state 550

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 551

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 581


state 552

 114) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 114 (forloop)


state 553

 115) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 115 (forloop)


state 554

 129) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 129 (function)


state 555

 157) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 582


state 556

 158) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 583


state 557

 159) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 584


state 558

 160) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 585


state 559

 161) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 586


state 560

 162) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 587


state 561

 163) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT _ LPAREN distance COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 588


state 562

 164) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 589


state 563

 165) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 165 (motion_modifier)


state 564

 166) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 590


state 565

 167) valid_motion_statements : COORD _

  $default      reduce using rule 167 (valid_motion_statements)


state 566

 168) valid_motion_statements : MROT _

  $default      reduce using rule 168 (valid_motion_statements)


state 567

 169) valid_motion_statements : PTH _

  $default      reduce using rule 169 (valid_motion_statements)


state 568

 170) valid_motion_statements : INC _

  $default      reduce using rule 170 (valid_motion_statements)


state 569

 171) valid_motion_statements : WJNT _

  $default      reduce using rule 171 (valid_motion_statements)


state 570

 172) valid_motion_statements : BREAK _

  $default      reduce using rule 172 (valid_motion_statements)


state 571

 173) valid_motion_statements : RTCP _

  $default      reduce using rule 173 (valid_motion_statements)


state 572

 174) valid_motion_statements : FPLIN _

  $default      reduce using rule 174 (valid_motion_statements)


state 573

 175) single_argument_motion_modifiers : CD _

  $default      reduce using rule 175 (single_argument_motion_modifiers)


state 574

 176) single_argument_motion_modifiers : EV _

  $default      reduce using rule 176 (single_argument_motion_modifiers)


state 575

 177) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 177 (single_argument_motion_modifiers)


state 576

 178) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 178 (single_argument_motion_modifiers)


state 577

 179) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 179 (single_argument_motion_modifiers)


state 578

 180) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 180 (single_argument_motion_modifiers)


state 579

 181) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 181 (single_argument_motion_modifiers)


state 580

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 591


state 581

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 592


state 582

 157) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 595
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  speed         go to state 593
  number        go to state 118
  var           go to state 119
  indirectable  go to state 594
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 583

 158) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91

  integer       go to state 170
  var           go to state 171
  indirect_thing  go to state 172
  int_or_var    go to state 596
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 584

 159) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 601

  valid_terminations  go to state 597
  motion_arguements  go to state 598
  integer       go to state 599
  var           go to state 600
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 585

 160) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 601

  valid_terminations  go to state 602
  integer       go to state 599
  var           go to state 600
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 586

 161) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 603
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 587

 162) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA seg_actions RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  time          go to state 604
  var           go to state 605
  number        go to state 606
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 588

 163) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN _ distance COMMA seg_actions RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  distance      go to state 607
  var           go to state 608
  number        go to state 609
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 589

 164) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49

  label         go to state 610

state 590

 166) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91

  integer       go to state 170
  var           go to state 171
  indirect_thing  go to state 172
  int_or_var    go to state 611
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 591

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 612
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 592

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 593

 157) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 613


state 594

 199) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 614


state 595

 200) speed : STRING _

  $default      reduce using rule 200 (speed)


state 596

 158) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 615


state 597

 155) motion_arguements : valid_terminations _
 156) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 616
  $default      reduce using rule 155 (motion_arguements)


state 598

 159) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 617


state 599

 182) valid_terminations : integer _

  $default      reduce using rule 182 (valid_terminations)


state 600

 183) valid_terminations : var _

  $default      reduce using rule 183 (valid_terminations)


state 601

 184) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 618


state 602

 160) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 619


state 603

 161) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 620


state 604

 162) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 621


state 605

 195) time : var _

  $default      reduce using rule 195 (time)


state 606

 196) time : number _

  $default      reduce using rule 196 (time)


state 607

 163) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 622


state 608

 197) distance : var _

  $default      reduce using rule 197 (distance)


state 609

 198) distance : number _

  $default      reduce using rule 198 (distance)


state 610

 164) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 624
  $default      reduce using rule 186 (optional_lpos_arg)

  optional_lpos_arg  go to state 623

state 611

 166) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 625


state 612

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 626


state 613

 157) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 157 (motion_modifier)


state 614

 199) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 627


state 615

 158) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 158 (motion_modifier)


state 616

 156) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 601

  valid_terminations  go to state 628
  integer       go to state 599
  var           go to state 600
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 617

 159) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 618

 184) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 184 (valid_terminations)


state 619

 160) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 160 (motion_modifier)


state 620

 161) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 621

 162) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 127
  INDIRECT      shift, and go to state 91
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  SYSTEM        shift, and go to state 89

  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  seg_actions   go to state 629
  program_call  go to state 630
  io_method     go to state 631
  assignment    go to state 632
  var_or_indirect  go to state 633
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 622

 163) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 127
  INDIRECT      shift, and go to state 91
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  SYSTEM        shift, and go to state 89

  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  seg_actions   go to state 634
  program_call  go to state 630
  io_method     go to state 631
  assignment    go to state 632
  var_or_indirect  go to state 633
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 623

 164) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 635


state 624

 185) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 110

  var           go to state 636
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 625

 166) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 166 (motion_modifier)


state 626

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 535

  motion_modifiers  go to state 637
  motion_modifier  go to state 534

state 627

 199) speed : indirectable COMMA STRING _

  $default      reduce using rule 199 (speed)


state 628

 156) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 156 (motion_arguements)


state 629

 162) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 638


state 630

 192) seg_actions : program_call _

  $default      reduce using rule 192 (seg_actions)


state 631

 193) seg_actions : io_method _

  $default      reduce using rule 193 (seg_actions)


state 632

 194) seg_actions : assignment _

  $default      reduce using rule 194 (seg_actions)


state 633

 204) assignment : var_or_indirect _ EQUAL expression
 205) assignment : var_or_indirect _ PLUS EQUAL expression
 206) assignment : var_or_indirect _ MINUS EQUAL expression
 207) assignment : var_or_indirect _ STAR EQUAL expression
 208) assignment : var_or_indirect _ SLASH EQUAL expression

  EQUAL         shift, and go to state 188
  PLUS          shift, and go to state 189
  MINUS         shift, and go to state 190
  STAR          shift, and go to state 191
  SLASH         shift, and go to state 192


state 634

 163) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 639


state 635

 164) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 164 (motion_modifier)


state 636

 185) optional_lpos_arg : COMMA var _

  $default      reduce using rule 185 (optional_lpos_arg)


state 637

 152) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 154) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 535
  $default      reduce using rule 152 (motion_statement)

  motion_modifier  go to state 547

state 638

 162) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN _

  $default      reduce using rule 162 (motion_modifier)


state 639

 163) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN _

  $default      reduce using rule 163 (motion_modifier)

