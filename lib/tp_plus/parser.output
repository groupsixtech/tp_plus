state 3 contains 2 shift/reduce conflicts
state 51 contains 1 shift/reduce conflicts
state 59 contains 1 shift/reduce conflicts
state 61 contains 1 reduce/reduce conflicts
state 75 contains 2 shift/reduce conflicts
state 98 contains 2 shift/reduce conflicts
state 101 contains 1 shift/reduce conflicts
state 127 contains 1 reduce/reduce conflicts
state 154 contains 1 reduce/reduce conflicts
state 172 contains 1 shift/reduce conflicts
state 176 contains 1 shift/reduce conflicts
state 195 contains 1 shift/reduce conflicts
state 283 contains 1 shift/reduce conflicts
state 290 contains 1 shift/reduce conflicts
state 310 contains 1 shift/reduce conflicts
state 327 contains 14 shift/reduce conflicts
state 356 contains 1 shift/reduce conflicts
state 438 contains 1 shift/reduce conflicts
state 485 contains 1 shift/reduce conflicts

rule 138 (case_allowed_statement) never reduced
rule 139 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 group_statement: GROUP LPAREN integer RPAREN
rule 69 use_statement: FANUC_USE indirectable
rule 70 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 71 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 72 collguard_statement: COLL_GUARD optional_arg
rule 73 set_skip_statement: SET_SKIP_CONDITION expression
rule 74 function_call: WORD
rule 75 function_call: namespaces WORD
rule 76 basic_program_call: function_call LPAREN args RPAREN
rule 77 program_call: basic_program_call
rule 78 program_call: RUN function_call LPAREN args RPAREN
rule 79 program_call: CALL var_or_indirect LPAREN args RPAREN
rule 80 args: arg
rule 81 args: args COMMA arg
rule 82 args: 
rule 83 arg: number
rule 84 arg: signed_number
rule 85 arg: var
rule 86 arg: string
rule 87 arg: address
rule 88 program_vars: program_var
rule 89 program_vars: program_vars COMMA program_var
rule 90 program_vars: 
rule 91 program_var: WORD
rule 92 return_statement: RETURN LPAREN expression RPAREN
rule 93 return_statement: RETURN
rule 94 string: STRING
rule 95 io_method: IO_METHOD var_or_indirect
rule 96 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 97 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 98 var_or_indirect: var
rule 99 var_or_indirect: indirect_thing
rule 100 var_or_indirect: var_system
rule 101 jump: JUMP label
rule 102 conditional: IF expression block elsif_conditions else_block END
rule 103 conditional: UNLESS expression block else_block END
rule 104 conditional_block: IF expression THEN block elsif_block else_block END
rule 105 elsif_conditions: elsif_condition
rule 106 elsif_conditions: elsif_conditions elsif_condition
rule 107 elsif_conditions: 
rule 108 elsif_condition: ELSIF expression block
rule 109 elsif_block: elsif_block_condition
rule 110 elsif_block: elsif_block elsif_block_condition
rule 111 elsif_block: 
rule 112 elsif_block_condition: ELSIF expression THEN block
rule 113 forloop: FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 114 forloop: FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 115 while_loop: WHILE expression block END
rule 116 int_or_var: integer
rule 117 int_or_var: var
rule 118 word_list: word_tuple
rule 119 word_list: word_list word_tuple
rule 120 word_tuple: COMMA WORD
rule 121 word_tuple: WORD
rule 122 using_statement: USING word_list
rule 123 compile_statement: COMPILE IMPORT word_list
rule 124 import_statement: IMPORT word_list
rule 125 namespace: NAMESPACE WORD block END
rule 126 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 127 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 128 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 129 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 130 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 131 case_conditions: case_condition
rule 132 case_conditions: case_conditions case_condition
rule 133 case_condition: WHEN case_allowed_condition block
rule 134 case_allowed_condition: number
rule 135 case_allowed_condition: var
rule 136 case_else: ELSE block
rule 137 case_else: 
rule 138 case_allowed_statement: program_call
rule 139 case_allowed_statement: jump
rule 140 inline_conditional: inlineable
rule 141 inline_conditional: inlineable IF expression
rule 142 inline_conditional: inlineable UNLESS expression
rule 143 inlineable: jump
rule 144 inlineable: assignment
rule 145 inlineable: io_method
rule 146 inlineable: program_call
rule 147 else_block: ELSE block
rule 148 else_block: 
rule 149 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 150 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 151 motion_modifiers: motion_modifier
rule 152 motion_modifiers: motion_modifiers motion_modifier
rule 153 motion_arguements: valid_terminations
rule 154 motion_arguements: valid_terminations COMMA valid_terminations
rule 155 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 156 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 157 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 158 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 159 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 160 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
rule 161 motion_modifier: DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
rule 162 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 163 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 164 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 165 valid_motion_statements: COORD
rule 166 valid_motion_statements: MROT
rule 167 valid_motion_statements: PTH
rule 168 valid_motion_statements: INC
rule 169 valid_motion_statements: WJNT
rule 170 valid_motion_statements: BREAK
rule 171 valid_motion_statements: RTCP
rule 172 valid_motion_statements: FPLIN
rule 173 single_argument_motion_modifiers: CD
rule 174 single_argument_motion_modifiers: EV
rule 175 single_argument_motion_modifiers: INDEV
rule 176 single_argument_motion_modifiers: RT_LD
rule 177 single_argument_motion_modifiers: AP_LD
rule 178 single_argument_motion_modifiers: PSPD
rule 179 single_argument_motion_modifiers: CTV
rule 180 valid_terminations: integer
rule 181 valid_terminations: var
rule 182 valid_terminations: MINUS DIGIT
rule 183 optional_lpos_arg: COMMA var
rule 184 optional_lpos_arg: 
rule 185 indirectable: number
rule 186 indirectable: var
rule 187 optional_arg: number
rule 188 optional_arg: var
rule 189 optional_arg: 
rule 190 seg_actions: program_call
rule 191 seg_actions: io_method
rule 192 seg_actions: assignment
rule 193 time: var
rule 194 time: number
rule 195 distance: var
rule 196 distance: number
rule 197 speed: indirectable COMMA STRING
rule 198 speed: STRING
rule 199 label_definition: label
rule 200 definition: LOCALSTACK ASSIGN definable
rule 201 definition: WORD ASSIGN definable
rule 202 assignment: var_or_indirect EQUAL expression
rule 203 assignment: var_or_indirect PLUS EQUAL expression
rule 204 assignment: var_or_indirect MINUS EQUAL expression
rule 205 assignment: var_or_indirect STAR EQUAL expression
rule 206 assignment: var_or_indirect SLASH EQUAL expression
rule 207 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 208 position_assignment: var_or_indirect ARROW array
rule 209 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 210 position_assignment: assignable_range EQUAL assignable_range
rule 211 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 212 assignable_range: var RANGE var
rule 213 assignable_range: var
rule 214 var: var_without_namespaces
rule 215 var: var_with_namespaces
rule 216 var_without_namespaces: WORD
rule 217 var_without_namespaces: WORD var_method_modifiers
rule 218 var_with_namespaces: namespaces var_without_namespaces
rule 219 var_method_modifiers: var_method_modifier
rule 220 var_method_modifiers: var_method_modifiers var_method_modifier
rule 221 pose_range_modifiers: pose_range_modifier
rule 222 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 223 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 224 coord_system: SPHERE
rule 225 coord_system: POLAR
rule 226 coord_system: ORIGIN
rule 227 var_method_modifier: DOT swallow_newlines WORD
rule 228 var_method_modifier: DOT swallow_newlines group_statement
rule 229 var_method_modifier: DOT swallow_newlines POSEATTR
rule 230 var_method_modifier: DOT swallow_newlines OFFSET
rule 231 var_method_modifier: DOT swallow_newlines coord_system
rule 232 var_method_modifier: DOT swallow_newlines FIX
rule 233 var_system: SYSTEM WORD var_system_modifers
rule 234 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 235 var_system_modifers: var_system_modifer
rule 236 var_system_modifers: var_system_modifers var_system_modifer
rule 237 var_system_modifers: 
rule 238 var_system_modifer: DOT var_system
rule 239 namespaces: ns
rule 240 namespaces: namespaces ns
rule 241 ns: WORD COLON COLON
rule 242 expression: unary_expression
rule 243 expression: binary_expression
rule 244 unary_expression: factor
rule 245 unary_expression: address
rule 246 unary_expression: BANG factor
rule 247 unary_expression: basic_program_call
rule 248 binary_expression: expression operator expression
rule 249 operator: EEQUAL
rule 250 operator: NOTEQUAL
rule 251 operator: LT
rule 252 operator: GT
rule 253 operator: GTE
rule 254 operator: LTE
rule 255 operator: PLUS
rule 256 operator: MINUS
rule 257 operator: OR
rule 258 operator: STAR
rule 259 operator: SLASH
rule 260 operator: DIV
rule 261 operator: MOD
rule 262 operator: AND
rule 263 factor: number
rule 264 factor: signed_number
rule 265 factor: operation
rule 266 factor: var
rule 267 factor: signed_var
rule 268 factor: var_system
rule 269 factor: indirect_thing
rule 270 factor: paren_expr
rule 271 factor: booleans
rule 272 booleans: TRUE_FALSE
rule 273 booleans: ON_OFF
rule 274 paren_expr: LPAREN expression RPAREN
rule 275 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 276 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 277 signed_number: sign DIGIT
rule 278 signed_number: sign REAL
rule 279 signed_var: sign var
rule 280 sign: MINUS
rule 281 number: integer
rule 282 number: REAL
rule 283 integer: DIGIT
rule 284 definable: reg
rule 285 definable: number
rule 286 definable: signed_number
rule 287 definable: string
rule 288 definable: framereg
rule 289 definable: booleans
rule 290 definable: localvars
rule 291 definable_range: DIGIT RANGE DIGIT
rule 292 definable_range: DIGIT
rule 293 reg_types: SREG
rule 294 reg_types: UALM
rule 295 reg_types: TIMER
rule 296 reg_types: ARG
rule 297 reg_types: VREG
rule 298 reg_types: POSITION
rule 299 reg_types: NUMREG
rule 300 reg_types: POSREG
rule 301 reg_types: INPUT
rule 302 reg_types: OUTPUT
rule 303 reg: reg_types LBRACK definable_range RBRACK
rule 304 frametype: TOOLREG
rule 305 frametype: FRAMEREG
rule 306 framereg: frametype LBRACK DIGIT RBRACK
rule 307 local_types: LOCALREG
rule 308 local_types: LOCALPOSE
rule 309 local_types: LOCALFLAG
rule 310 localvars: local_types LBRACK RBRACK
rule 311 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 312 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 313 operation: OPERATION LBRACK signed_number RBRACK
rule 314 operation: OPERATION LBRACK number RBRACK
rule 315 address: ADDRESS var
rule 316 comment: COMMENT
rule 317 message: MESSAGE LPAREN STRING RPAREN
rule 318 warning: WARNING LPAREN STRING RPAREN
rule 319 terminator: NEWLINE
rule 320 terminator: comment optional_newline
rule 321 terminator: false
rule 322 terminator: 
rule 323 swallow_newlines: NEWLINE
rule 324 swallow_newlines: 
rule 325 position_data: POSITION_DATA sn hash sn END
rule 326 sn: swallow_newlines
rule 327 hash: LBRACE sn hash_attributes sn RBRACE
rule 328 hash: LBRACE sn RBRACE
rule 329 hash_attributes: hash_attribute
rule 330 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 331 hash_attribute: STRING COLON hash_value
rule 332 hash_value: STRING
rule 333 hash_value: WORD
rule 334 hash_value: hash
rule 335 hash_value: array
rule 336 hash_value: optional_sign DIGIT
rule 337 hash_value: optional_sign REAL
rule 338 hash_value: TRUE_FALSE
rule 339 optional_sign: sign
rule 340 optional_sign: 
rule 341 array: LBRACK sn array_values sn RBRACK
rule 342 array_values: array_value
rule 343 array_values: array_values COMMA sn array_value
rule 344 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (138)
    on right: 
    on left : 
  program (139)
    on right: 
    on left : 1 2
  statements (140)
    on right: 1 4 5
    on left : 3 4
  statement (141)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (142)
    on right: 3 4
    on left : 319 320 321 322
  block (143)
    on right: 102 103 104 108 112 113 114 115 125 126 127 128 129 133 136 147
    on left : 5
  optional_newline (144)
    on right: 320
    on left : 6 7
  comment (145)
    on right: 8 320
    on left : 316
  message (146)
    on right: 9
    on left : 317
  definition (147)
    on right: 10
    on left : 200 201
  namespace (148)
    on right: 11
    on left : 125
  motion_statement (149)
    on right: 12
    on left : 149 150
  position_assignment (150)
    on right: 13
    on left : 207 208 209 210 211
  label_definition (151)
    on right: 14
    on left : 199
  address (152)
    on right: 15 87 245
    on left : 315
  conditional (153)
    on right: 16
    on left : 102 103
  inline_conditional (154)
    on right: 17
    on left : 140 141 142
  conditional_block (155)
    on right: 18
    on left : 104
  forloop (156)
    on right: 19
    on left : 113 114
  while_loop (157)
    on right: 20
    on left : 115
  use_statement (158)
    on right: 21
    on left : 69 70 71
  set_skip_statement (159)
    on right: 22
    on left : 73
  wait_statement (160)
    on right: 23
    on left : 59 60 61 62
  case_statement (161)
    on right: 24
    on left : 130
  fanuc_eval (162)
    on right: 25
    on left : 58
  timer_method (163)
    on right: 26
    on left : 57
  position_data (164)
    on right: 27
    on left : 325
  raise (165)
    on right: 28
    on left : 56
  tp_header_definition (166)
    on right: 29
    on left : 46
  lpos_or_jpos (167)
    on right: 30
    on left : 43 44
  empty_stmt (168)
    on right: 31
    on left : 45
  warning (169)
    on right: 32
    on left : 318
  var_system (170)
    on right: 33 100 238 268
    on left : 233 234
  return_statement (171)
    on right: 36
    on left : 92 93
  collguard_statement (172)
    on right: 37
    on left : 72
  function (173)
    on right: 38
    on left : 126 127 128 129
  tp_application_definition (174)
    on right: 39
    on left : 55
  using_statement (175)
    on right: 40
    on left : 122
  import_statement (176)
    on right: 41
    on left : 124
  compile_statement (177)
    on right: 42
    on left : 123
  var_or_indirect (178)
    on right: 43 44 56 57 79 95 96 97 149 150 159 202 203 204 205 206 208 311 312
    on left : 98 99 100
  tp_header_value (179)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (180)
    on right: 55
    on left : 50 51
  sn (181)
    on right: 50 51 53 55 325 327 328 330 341 343
    on left : 326
  tp_tool_attributes (182)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (183)
    on right: 52 53
    on left : 54
  hash_value (184)
    on right: 54 331 344
    on left : 332 333 334 335 336 337 338
  indirectable (185)
    on right: 59 66 69 70 71 197 275 276
    on left : 185 186
  expression (186)
    on right: 60 61 62 73 92 102 103 104 108 112 115 141 142 202 203 204 205 206 248 274
    on left : 242 243
  wait_modifier (187)
    on right: 61 62
    on left : 63 64
  timeout_modifier (188)
    on right: 63
    on left : 65
  after_modifier (189)
    on right: 64
    on left : 66
  swallow_newlines (190)
    on right: 65 66 130 149 150 155 156 157 158 159 160 161 162 163 164 223 227 228 229 230 231 232 326
    on left : 323 324
  label (191)
    on right: 65 101 162 199
    on left : 67
  group_statement (192)
    on right: 71 228
    on left : 68
  integer (193)
    on right: 68 116 180 234 281
    on left : 283
  optional_arg (194)
    on right: 72
    on left : 187 188 189
  function_call (195)
    on right: 76 78
    on left : 74 75
  namespaces (196)
    on right: 75 218 240
    on left : 239 240
  basic_program_call (197)
    on right: 77 247
    on left : 76
  args (198)
    on right: 76 78 79 81
    on left : 80 81 82
  program_call (199)
    on right: 138 146 190
    on left : 77 78 79
  arg (200)
    on right: 80 81
    on left : 83 84 85 86 87
  number (201)
    on right: 83 97 134 185 187 194 196 263 285 314
    on left : 281 282
  signed_number (202)
    on right: 84 264 286 313
    on left : 277 278
  var (203)
    on right: 85 98 113 114 117 130 135 181 183 186 188 193 195 212 213 266 279 315
    on left : 214 215
  string (204)
    on right: 86 287
    on left : 94
  program_vars (205)
    on right: 89 126 127 128 129
    on left : 88 89 90
  program_var (206)
    on right: 88 89
    on left : 91
  io_method (207)
    on right: 145 191
    on left : 95 96 97
  indirect_thing (208)
    on right: 99 269
    on left : 275 276
  jump (209)
    on right: 139 143
    on left : 101
  elsif_conditions (210)
    on right: 102 106
    on left : 105 106 107
  else_block (211)
    on right: 102 103 104
    on left : 147 148
  elsif_block (212)
    on right: 104 110
    on left : 109 110 111
  elsif_condition (213)
    on right: 105 106
    on left : 108
  elsif_block_condition (214)
    on right: 109 110
    on left : 112
  int_or_var (215)
    on right: 113 114 156 164
    on left : 116 117
  word_list (216)
    on right: 119 122 123 124
    on left : 118 119
  word_tuple (217)
    on right: 118 119
    on left : 120 121
  case_conditions (218)
    on right: 130 132
    on left : 131 132
  case_else (219)
    on right: 130
    on left : 136 137
  case_condition (220)
    on right: 131 132
    on left : 133
  case_allowed_condition (221)
    on right: 133
    on left : 134 135
  case_allowed_statement (222)
    on right: 
    on left : 138 139
  inlineable (223)
    on right: 140 141 142
    on left : 143 144 145 146
  assignment (224)
    on right: 144 192
    on left : 202 203 204 205 206
  motion_modifiers (225)
    on right: 149 150 152
    on left : 151 152
  motion_modifier (226)
    on right: 151 152
    on left : 155 156 157 158 159 160 161 162 163 164
  motion_arguements (227)
    on right: 157
    on left : 153 154
  valid_terminations (228)
    on right: 153 154 158
    on left : 180 181 182
  speed (229)
    on right: 155
    on left : 197 198
  time (230)
    on right: 160
    on left : 193 194
  seg_actions (231)
    on right: 160 161
    on left : 190 191 192
  distance (232)
    on right: 161
    on left : 195 196
  optional_lpos_arg (233)
    on right: 162
    on left : 183 184
  valid_motion_statements (234)
    on right: 163
    on left : 165 166 167 168 169 170 171 172
  single_argument_motion_modifiers (235)
    on right: 164
    on left : 173 174 175 176 177 178 179
  definable (236)
    on right: 200 201
    on left : 284 285 286 287 288 289 290
  var_method_modifiers (237)
    on right: 207 209 217 220 276
    on left : 219 220
  array (238)
    on right: 207 208 209 335
    on left : 341
  assignable_range (239)
    on right: 209 210 211
    on left : 212 213
  pose_range_modifiers (240)
    on right: 211 222
    on left : 221 222
  var_without_namespaces (241)
    on right: 214 218
    on left : 216 217
  var_with_namespaces (242)
    on right: 215
    on left : 218
  var_method_modifier (243)
    on right: 219 220
    on left : 227 228 229 230 231 232
  pose_range_modifier (244)
    on right: 221 222
    on left : 223
  coord_system (245)
    on right: 231
    on left : 224 225 226
  var_system_modifers (246)
    on right: 233 234 236
    on left : 235 236 237
  var_system_modifer (247)
    on right: 235 236
    on left : 238
  ns (248)
    on right: 239 240
    on left : 241
  unary_expression (249)
    on right: 242
    on left : 244 245 246 247
  binary_expression (250)
    on right: 243
    on left : 248
  factor (251)
    on right: 244 246
    on left : 263 264 265 266 267 268 269 270 271
  operator (252)
    on right: 248
    on left : 249 250 251 252 253 254 255 256 257 258 259 260 261 262
  operation (253)
    on right: 265
    on left : 311 312 313 314
  signed_var (254)
    on right: 267
    on left : 279
  paren_expr (255)
    on right: 270
    on left : 274
  booleans (256)
    on right: 271 289
    on left : 272 273
  sign (257)
    on right: 277 278 279 339
    on left : 280
  reg (258)
    on right: 284
    on left : 303
  framereg (259)
    on right: 288
    on left : 306
  localvars (260)
    on right: 290
    on left : 310
  definable_range (261)
    on right: 303
    on left : 291 292
  reg_types (262)
    on right: 303
    on left : 293 294 295 296 297 298 299 300 301 302
  frametype (263)
    on right: 306
    on left : 304 305
  local_types (264)
    on right: 310
    on left : 307 308 309
  hash (265)
    on right: 325 334
    on left : 327 328
  hash_attributes (266)
    on right: 327 330
    on left : 329 330
  hash_attribute (267)
    on right: 329 330
    on left : 331
  optional_sign (268)
    on right: 336 337
    on left : 339 340
  array_values (269)
    on right: 341 343
    on left : 342 343
  array_value (270)
    on right: 342 343
    on left : 344

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 200 201
  AT_SYM (3) 
  COMMENT (4) 316
  MESSAGE (5) 317
  WARNING (6) 318
  JUMP (7) 101
  IO_METHOD (8) 95 96 97
  INPUT (9) 301
  OUTPUT (10) 302
  NUMREG (11) 299
  POSREG (12) 300
  VREG (13) 297
  SREG (14) 293
  TIME_SEGMENT (15) 160
  DISTANCE_SEGMENT (16) 161
  ARG (17) 296
  UALM (18) 294
  TOOLREG (19) 304
  FRAMEREG (20) 305
  MOVE (21) 149 150
  DOT (22) 61 62 149 150 155 156 157 158 159 160 161 162 163 164 223 227 228 229 230 231 232 238
  TO (23) 113 149 150
  DOWNTO (24) 114
  MID (25) 150
  AT (26) 155
  ACC (27) 156
  TERM (28) 158
  OFFSET (29) 159 230
  SKIP (30) 162
  GROUP (31) 68
  COORD (32) 165
  MROT (33) 166
  PTH (34) 167
  WJNT (35) 169
  INC (36) 168
  BREAK (37) 170
  RTCP (38) 171
  FPLIN (39) 172
  AP_LD (40) 177
  RT_LD (41) 176
  CD (42) 173
  CR (43) 157
  INDEV (44) 175
  EV (45) 174
  PSPD (46) 178
  CTV (47) 179
  SEMICOLON (48) 
  NEWLINE (49) 5 6 45 319 323
  STRING (50) 47 58 59 66 94 97 197 198 275 276 317 318 331 332
  REAL (51) 278 282 337
  DIGIT (52) 182 277 283 291 292 306 336
  WORD (53) 54 74 75 91 120 121 125 126 127 128 129 201 216 217 227 233 234 241 333
  EQUAL (54) 46 55 202 203 204 205 206 210 211
  RANGE (55) 212 291
  EEQUAL (56) 249
  NOTEQUAL (57) 250
  GTE (58) 253
  LTE (59) 254
  LT (60) 251
  GT (61) 252
  BANG (62) 246
  PLUS (63) 203 255
  MINUS (64) 182 204 256 280
  STAR (65) 205 258
  SLASH (66) 206 259
  DIV (67) 260
  AND (68) 262
  OR (69) 257
  MOD (70) 261
  IF (71) 102 104 141
  THEN (72) 104 112
  ELSE (73) 136 147
  ELSIF (74) 108 112
  END (75) 102 103 104 113 114 115 125 126 127 128 129 130 325
  UNLESS (76) 103 142
  FOR (77) 113 114
  IN (78) 113 114
  WHILE (79) 115
  WAIT_FOR (80) 59
  WAIT_UNTIL (81) 60 61 62
  TIMEOUT (82) 65
  AFTER (83) 66
  FANUC_USE (84) 69 70 71
  COLL_GUARD (85) 72
  SET_SKIP_CONDITION (86) 73
  NAMESPACE (87) 125
  CASE (88) 130
  WHEN (89) 133
  INDIRECT (90) 275 276
  POSITION (91) 298
  EVAL (92) 58
  TIMER (93) 295
  TIMER_METHOD (94) 57
  RAISE (95) 56
  ABORT (96) 35
  RETURN (97) 92 93
  POSITION_DATA (98) 325
  TRUE_FALSE (99) 48 272 338
  ON_OFF (100) 49 273
  CALL (101) 79
  RUN (102) 78
  PAUSE (103) 34
  TP_HEADER (104) 46
  TP_APPLICATION_TYPE (105) 55
  LPAREN (106) 43 44 59 60 61 62 65 66 68 70 71 76 78 79 92 96 97 113 114 126 127 128 129 149 150 155 156 157 158 159 160 161 162 164 209 211 274 275 276 317 318
  RPAREN (107) 43 44 59 60 61 62 65 66 68 70 71 76 78 79 92 96 97 113 114 126 127 128 129 149 150 155 156 157 158 159 160 161 162 164 209 211 274 275 276 317 318
  COLON (108) 54 127 129 241 331
  COMMA (109) 53 59 66 71 81 89 97 120 154 160 161 183 197 275 276 312 330 343
  LBRACK (110) 234 303 306 310 311 312 313 314 341
  RBRACK (111) 234 303 306 310 311 312 313 314 341
  LBRACE (112) 50 51 327 328
  RBRACE (113) 50 51 327 328
  LABEL (114) 67
  SYSTEM (115) 233 234
  ADDRESS (116) 315
  LPOS (117) 43
  JPOS (118) 44
  false (119) 321
  FUNCTION (120) 126 127 128 129
  OPERATION (121) 311 312 313 314
  USING (122) 122
  IMPORT (123) 123 124
  COMPILE (124) 123
  INLINE (125) 126 127
  ARROW (126) 207 208 209
  DEFAULTPOS (127) 207
  POSEATTR (128) 229
  POSEREVERSE (129) 223
  SPHERE (130) 224
  POLAR (131) 225
  ORIGIN (132) 226
  FIX (133) 232
  LOCALSTACK (134) 200
  LOCALREG (135) 307
  LOCALPOSE (136) 308
  LOCALFLAG (137) 309

--------- State ---------

state 0


  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 1


  $end          shift, and go to state 97


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 1 (program)

  statement     go to state 98
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 93
  COMMENT       [reduce using rule 322 (terminator)]
  NEWLINE       shift, and go to state 100
  NEWLINE       [reduce using rule 322 (terminator)]
  false         shift, and go to state 102
  $default      reduce using rule 322 (terminator)

  terminator    go to state 99
  comment       go to state 101

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 100) var_or_indirect : var_system _

  EQUAL         reduce using rule 100 (var_or_indirect)
  PLUS          reduce using rule 100 (var_or_indirect)
  MINUS         reduce using rule 100 (var_or_indirect)
  STAR          reduce using rule 100 (var_or_indirect)
  SLASH         reduce using rule 100 (var_or_indirect)
  ARROW         reduce using rule 100 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 103


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 104


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 105


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 106


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 107
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 112
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 113


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 114


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 115


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  69) use_statement : FANUC_USE _ indirectable
  70) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  71) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  LPAREN        shift, and go to state 117

  indirectable  go to state 116
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 51

  72) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  WORD          [reduce using rule 189 (optional_arg)]
  $default      reduce using rule 189 (optional_arg)

  optional_arg  go to state 123
  number        go to state 124
  var           go to state 125
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 52

  73) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  expression    go to state 126
  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 53

  74) function_call : WORD _
 201) definition : WORD _ ASSIGN definable
 216) var_without_namespaces : WORD _
 217) var_without_namespaces : WORD _ var_method_modifiers
 241) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 149
  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 74 (function_call)
  $default      reduce using rule 216 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 54

  75) function_call : namespaces _ WORD
 218) var_with_namespaces : namespaces _ var_without_namespaces
 240) namespaces : namespaces _ ns

  WORD          shift, and go to state 154

  var_without_namespaces  go to state 155
  ns            go to state 156

state 55

  76) basic_program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 157


state 56

  77) program_call : basic_program_call _

  $default      reduce using rule 77 (program_call)


state 57

  78) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 158

  namespaces    go to state 159
  function_call  go to state 160
  ns            go to state 90

state 58

  79) program_call : CALL _ var_or_indirect LPAREN args RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 161
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 59

  92) return_statement : RETURN _ LPAREN expression RPAREN
  93) return_statement : RETURN _

  LPAREN        shift, and go to state 162
  LPAREN        [reduce using rule 93 (return_statement)]
  $default      reduce using rule 93 (return_statement)


state 60

  95) io_method : IO_METHOD _ var_or_indirect
  96) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
  97) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  LPAREN        shift, and go to state 164
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 163
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 61

  98) var_or_indirect : var _
 212) assignable_range : var _ RANGE var
 213) assignable_range : var _

  RANGE         shift, and go to state 165
  EQUAL         [reduce using rule 213 (assignable_range)]
  $default      reduce using rule 98 (var_or_indirect)


state 62

  99) var_or_indirect : indirect_thing _

  $default      reduce using rule 99 (var_or_indirect)


state 63

 101) jump : JUMP _ label

  LABEL         shift, and go to state 49

  label         go to state 166

state 64

 102) conditional : IF _ expression block elsif_conditions else_block END
 104) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 167
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 65

 103) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 168
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 66

 113) forloop : FOR _ var IN LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR _ var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  WORD          shift, and go to state 110

  var           go to state 169
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 67

 115) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 170
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 68

 122) using_statement : USING _ word_list

  WORD          shift, and go to state 174
  COMMA         shift, and go to state 173

  word_tuple    go to state 171
  word_list     go to state 172

state 69

 123) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 175


state 70

 124) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 174
  COMMA         shift, and go to state 173

  word_tuple    go to state 171
  word_list     go to state 176

state 71

 125) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 177


state 72

 126) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 127) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 178


state 73

 128) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 129) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 179


state 74

 130) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 110

  var           go to state 180
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 75

 140) inline_conditional : inlineable _
 141) inline_conditional : inlineable _ IF expression
 142) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 181
  IF            [reduce using rule 140 (inline_conditional)]
  UNLESS        shift, and go to state 182
  UNLESS        [reduce using rule 140 (inline_conditional)]
  $default      reduce using rule 140 (inline_conditional)


state 76

 143) inlineable : jump _

  $default      reduce using rule 143 (inlineable)


state 77

 144) inlineable : assignment _

  $default      reduce using rule 144 (inlineable)


state 78

 145) inlineable : io_method _

  $default      reduce using rule 145 (inlineable)


state 79

 146) inlineable : program_call _

  $default      reduce using rule 146 (inlineable)


state 80

 149) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 150) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 183


state 81

 199) label_definition : label _

  $default      reduce using rule 199 (label_definition)


state 82

 200) definition : LOCALSTACK _ ASSIGN definable

  ASSIGN        shift, and go to state 184


state 83

 202) assignment : var_or_indirect _ EQUAL expression
 203) assignment : var_or_indirect _ PLUS EQUAL expression
 204) assignment : var_or_indirect _ MINUS EQUAL expression
 205) assignment : var_or_indirect _ STAR EQUAL expression
 206) assignment : var_or_indirect _ SLASH EQUAL expression
 208) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 185
  PLUS          shift, and go to state 186
  MINUS         shift, and go to state 187
  STAR          shift, and go to state 188
  SLASH         shift, and go to state 189
  ARROW         shift, and go to state 190


state 84

 207) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 152

  var_method_modifiers  go to state 191
  var_method_modifier  go to state 151

state 85

 209) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 110

  assignable_range  go to state 192
  var           go to state 193
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 86

 210) position_assignment : assignable_range _ EQUAL assignable_range
 211) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 194


state 87

 214) var : var_without_namespaces _

  $default      reduce using rule 214 (var)


state 88

 215) var : var_with_namespaces _

  $default      reduce using rule 215 (var)


state 89

 233) var_system : SYSTEM _ WORD var_system_modifers
 234) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 195


state 90

 239) namespaces : ns _

  $default      reduce using rule 239 (namespaces)


state 91

 275) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 276) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 196


state 92

 315) address : ADDRESS _ var

  WORD          shift, and go to state 110

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var           go to state 197

state 93

 316) comment : COMMENT _

  $default      reduce using rule 316 (comment)


state 94

 317) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 198


state 95

 318) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 199


state 96

 325) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  sn            go to state 201
  swallow_newlines  go to state 202

state 97


  $end          shift, and go to state 203


state 98

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 93
  COMMENT       [reduce using rule 322 (terminator)]
  NEWLINE       shift, and go to state 100
  NEWLINE       [reduce using rule 322 (terminator)]
  false         shift, and go to state 102
  $default      reduce using rule 322 (terminator)

  terminator    go to state 204
  comment       go to state 101

state 99

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 100

 319) terminator : NEWLINE _

  $default      reduce using rule 319 (terminator)


state 101

 320) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 205
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 206

state 102

 321) terminator : false _

  $default      reduce using rule 321 (terminator)


state 103

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 207
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 104

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 208
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 105

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 210
  TRUE_FALSE    shift, and go to state 211
  ON_OFF        shift, and go to state 212

  tp_header_value  go to state 209

state 106

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  sn            go to state 213
  swallow_newlines  go to state 202

state 107

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 108

  98) var_or_indirect : var _

  $default      reduce using rule 98 (var_or_indirect)


state 109

 100) var_or_indirect : var_system _

  $default      reduce using rule 100 (var_or_indirect)


state 110

 216) var_without_namespaces : WORD _
 217) var_without_namespaces : WORD _ var_method_modifiers
 241) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  $default      reduce using rule 216 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 111

 218) var_with_namespaces : namespaces _ var_without_namespaces
 240) namespaces : namespaces _ ns

  WORD          shift, and go to state 110

  var_without_namespaces  go to state 155
  ns            go to state 156

state 112

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 113

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 114

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 214
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 115

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  expression    go to state 215
  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 116

  69) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 69 (use_statement)


state 117

  70) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  71) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 216
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 118

 185) indirectable : number _

  $default      reduce using rule 185 (indirectable)


state 119

 186) indirectable : var _

  $default      reduce using rule 186 (indirectable)


state 120

 281) number : integer _

  $default      reduce using rule 281 (number)


state 121

 282) number : REAL _

  $default      reduce using rule 282 (number)


state 122

 283) integer : DIGIT _

  $default      reduce using rule 283 (integer)


state 123

  72) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 72 (collguard_statement)


state 124

 187) optional_arg : number _

  $default      reduce using rule 187 (optional_arg)


state 125

 188) optional_arg : var _

  $default      reduce using rule 188 (optional_arg)


state 126

  73) set_skip_statement : SET_SKIP_CONDITION expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 73 (set_skip_statement)

  operator      go to state 217

state 127

  74) function_call : WORD _
 216) var_without_namespaces : WORD _
 217) var_without_namespaces : WORD _ var_method_modifiers
 241) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 74 (function_call)
  LPAREN        [reduce using rule 216 (var_without_namespaces)]
  $default      reduce using rule 216 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 128

 242) expression : unary_expression _

  $default      reduce using rule 242 (expression)


state 129

 243) expression : binary_expression _

  $default      reduce using rule 243 (expression)


state 130

 244) unary_expression : factor _

  $default      reduce using rule 244 (unary_expression)


state 131

 245) unary_expression : address _

  $default      reduce using rule 245 (unary_expression)


state 132

 246) unary_expression : BANG _ factor

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  OPERATION     shift, and go to state 148

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  factor        go to state 232
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 133

 247) unary_expression : basic_program_call _

  $default      reduce using rule 247 (unary_expression)


state 134

 263) factor : number _

  $default      reduce using rule 263 (factor)


state 135

 264) factor : signed_number _

  $default      reduce using rule 264 (factor)


state 136

 265) factor : operation _

  $default      reduce using rule 265 (factor)


state 137

 266) factor : var _

  $default      reduce using rule 266 (factor)


state 138

 267) factor : signed_var _

  $default      reduce using rule 267 (factor)


state 139

 268) factor : var_system _

  $default      reduce using rule 268 (factor)


state 140

 269) factor : indirect_thing _

  $default      reduce using rule 269 (factor)


state 141

 270) factor : paren_expr _

  $default      reduce using rule 270 (factor)


state 142

 271) factor : booleans _

  $default      reduce using rule 271 (factor)


state 143

 272) booleans : TRUE_FALSE _

  $default      reduce using rule 272 (booleans)


state 144

 273) booleans : ON_OFF _

  $default      reduce using rule 273 (booleans)


state 145

 274) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  expression    go to state 233
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 146

 277) signed_number : sign _ DIGIT
 278) signed_number : sign _ REAL
 279) signed_var : sign _ var

  REAL          shift, and go to state 235
  DIGIT         shift, and go to state 234
  WORD          shift, and go to state 110

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var           go to state 236

state 147

 280) sign : MINUS _

  $default      reduce using rule 280 (sign)


state 148

 311) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 312) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 313) operation : OPERATION _ LBRACK signed_number RBRACK
 314) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 237


state 149

 201) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 256
  OUTPUT        shift, and go to state 257
  NUMREG        shift, and go to state 254
  POSREG        shift, and go to state 255
  VREG          shift, and go to state 252
  SREG          shift, and go to state 248
  ARG           shift, and go to state 251
  UALM          shift, and go to state 249
  TOOLREG       shift, and go to state 259
  FRAMEREG      shift, and go to state 260
  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  MINUS         shift, and go to state 147
  POSITION      shift, and go to state 253
  TIMER         shift, and go to state 250
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LOCALREG      shift, and go to state 262
  LOCALPOSE     shift, and go to state 263
  LOCALFLAG     shift, and go to state 264

  definable     go to state 239
  sign          go to state 240
  integer       go to state 120
  reg           go to state 241
  number        go to state 242
  signed_number  go to state 243
  string        go to state 244
  framereg      go to state 245
  booleans      go to state 246
  localvars     go to state 247
  reg_types     go to state 258
  frametype     go to state 261
  local_types   go to state 265

state 150

 217) var_without_namespaces : WORD var_method_modifiers _
 220) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  $default      reduce using rule 217 (var_without_namespaces)

  var_method_modifier  go to state 266

state 151

 219) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 219 (var_method_modifiers)


state 152

 227) var_method_modifier : DOT _ swallow_newlines WORD
 228) var_method_modifier : DOT _ swallow_newlines group_statement
 229) var_method_modifier : DOT _ swallow_newlines POSEATTR
 230) var_method_modifier : DOT _ swallow_newlines OFFSET
 231) var_method_modifier : DOT _ swallow_newlines coord_system
 232) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 267

state 153

 241) ns : WORD COLON _ COLON

  COLON         shift, and go to state 268


state 154

  75) function_call : namespaces WORD _
 216) var_without_namespaces : WORD _
 217) var_without_namespaces : WORD _ var_method_modifiers
 241) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 75 (function_call)
  LPAREN        [reduce using rule 216 (var_without_namespaces)]
  $default      reduce using rule 216 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 155

 218) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 218 (var_with_namespaces)


state 156

 240) namespaces : namespaces ns _

  $default      reduce using rule 240 (namespaces)


state 157

  76) basic_program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  ADDRESS       shift, and go to state 92
  $default      reduce using rule 82 (args)

  args          go to state 269
  arg           go to state 270
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 240
  integer       go to state 120

state 158

  74) function_call : WORD _
 241) ns : WORD _ COLON COLON

  COLON         shift, and go to state 153
  $default      reduce using rule 74 (function_call)


state 159

  75) function_call : namespaces _ WORD
 240) namespaces : namespaces _ ns

  WORD          shift, and go to state 276

  ns            go to state 156

state 160

  78) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 277


state 161

  79) program_call : CALL var_or_indirect _ LPAREN args RPAREN

  LPAREN        shift, and go to state 278


state 162

  92) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 279
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 163

  95) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 95 (io_method)


state 164

  96) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
  97) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 280
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 165

 212) assignable_range : var RANGE _ var

  WORD          shift, and go to state 110

  var           go to state 281
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 166

 101) jump : JUMP label _

  $default      reduce using rule 101 (jump)


state 167

 102) conditional : IF expression _ block elsif_conditions else_block END
 104) conditional_block : IF expression _ THEN block elsif_block else_block END
 248) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 282
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  THEN          shift, and go to state 284

  block         go to state 283
  operator      go to state 217

state 168

 103) conditional : UNLESS expression _ block else_block END
 248) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 282
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230

  block         go to state 285
  operator      go to state 217

state 169

 113) forloop : FOR var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 286


state 170

 115) while_loop : WHILE expression _ block END
 248) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 282
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230

  block         go to state 287
  operator      go to state 217

state 171

 118) word_list : word_tuple _

  $default      reduce using rule 118 (word_list)


state 172

 119) word_list : word_list _ word_tuple
 122) using_statement : USING word_list _

  WORD          shift, and go to state 174
  WORD          [reduce using rule 122 (using_statement)]
  COMMA         shift, and go to state 173
  $default      reduce using rule 122 (using_statement)

  word_tuple    go to state 288

state 173

 120) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 289


state 174

 121) word_tuple : WORD _

  $default      reduce using rule 121 (word_tuple)


state 175

 123) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 174
  COMMA         shift, and go to state 173

  word_tuple    go to state 171
  word_list     go to state 290

state 176

 119) word_list : word_list _ word_tuple
 124) import_statement : IMPORT word_list _

  WORD          shift, and go to state 174
  WORD          [reduce using rule 124 (import_statement)]
  COMMA         shift, and go to state 173
  $default      reduce using rule 124 (import_statement)

  word_tuple    go to state 288

state 177

 125) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 282

  block         go to state 291

state 178

 126) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 127) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 292


state 179

 128) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 129) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 293


state 180

 130) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 294

state 181

 141) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 295
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 182

 142) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 296
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 183

 149) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 150) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 297

state 184

 200) definition : LOCALSTACK ASSIGN _ definable

  INPUT         shift, and go to state 256
  OUTPUT        shift, and go to state 257
  NUMREG        shift, and go to state 254
  POSREG        shift, and go to state 255
  VREG          shift, and go to state 252
  SREG          shift, and go to state 248
  ARG           shift, and go to state 251
  UALM          shift, and go to state 249
  TOOLREG       shift, and go to state 259
  FRAMEREG      shift, and go to state 260
  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  MINUS         shift, and go to state 147
  POSITION      shift, and go to state 253
  TIMER         shift, and go to state 250
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LOCALREG      shift, and go to state 262
  LOCALPOSE     shift, and go to state 263
  LOCALFLAG     shift, and go to state 264

  definable     go to state 298
  sign          go to state 240
  integer       go to state 120
  reg           go to state 241
  number        go to state 242
  signed_number  go to state 243
  string        go to state 244
  framereg      go to state 245
  booleans      go to state 246
  localvars     go to state 247
  reg_types     go to state 258
  frametype     go to state 261
  local_types   go to state 265

state 185

 202) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 299
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 186

 203) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 300


state 187

 204) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 301


state 188

 205) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 302


state 189

 206) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 303


state 190

 208) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 305

  array         go to state 304

state 191

 207) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 220) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  ARROW         shift, and go to state 306

  var_method_modifier  go to state 266

state 192

 209) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 307


state 193

 212) assignable_range : var _ RANGE var
 213) assignable_range : var _

  RANGE         shift, and go to state 165
  $default      reduce using rule 213 (assignable_range)


state 194

 210) position_assignment : assignable_range EQUAL _ assignable_range
 211) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 110
  LPAREN        shift, and go to state 309

  assignable_range  go to state 308
  var           go to state 193
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 195

 233) var_system : SYSTEM WORD _ var_system_modifers
 234) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 313
  DOT           [reduce using rule 237 (var_system_modifers)]
  LBRACK        shift, and go to state 311
  $default      reduce using rule 237 (var_system_modifers)

  var_system_modifers  go to state 310
  var_system_modifer  go to state 312

state 196

 275) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 276) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 314


state 197

 315) address : ADDRESS var _

  $default      reduce using rule 315 (address)


state 198

 317) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 315


state 199

 318) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 316


state 200

 323) swallow_newlines : NEWLINE _

  $default      reduce using rule 323 (swallow_newlines)


state 201

 325) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 318

  hash          go to state 317

state 202

 326) sn : swallow_newlines _

  $default      reduce using rule 326 (sn)


state 203


  $default      accept


state 204

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 205

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 206

 320) terminator : comment optional_newline _

  $default      reduce using rule 320 (terminator)


state 207

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 319


state 208

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 320


state 209

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 210

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 211

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 212

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 213

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 321

  tp_tool_methods  go to state 322

state 214

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 323


state 215

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  RPAREN        shift, and go to state 324

  operator      go to state 217

state 216

  70) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  71) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 325
  COMMA         shift, and go to state 326


state 217

 248) binary_expression : expression operator _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  expression    go to state 327
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 218

 249) operator : EEQUAL _

  $default      reduce using rule 249 (operator)


state 219

 250) operator : NOTEQUAL _

  $default      reduce using rule 250 (operator)


state 220

 251) operator : LT _

  $default      reduce using rule 251 (operator)


state 221

 252) operator : GT _

  $default      reduce using rule 252 (operator)


state 222

 253) operator : GTE _

  $default      reduce using rule 253 (operator)


state 223

 254) operator : LTE _

  $default      reduce using rule 254 (operator)


state 224

 255) operator : PLUS _

  $default      reduce using rule 255 (operator)


state 225

 256) operator : MINUS _

  $default      reduce using rule 256 (operator)


state 226

 257) operator : OR _

  $default      reduce using rule 257 (operator)


state 227

 258) operator : STAR _

  $default      reduce using rule 258 (operator)


state 228

 259) operator : SLASH _

  $default      reduce using rule 259 (operator)


state 229

 260) operator : DIV _

  $default      reduce using rule 260 (operator)


state 230

 261) operator : MOD _

  $default      reduce using rule 261 (operator)


state 231

 262) operator : AND _

  $default      reduce using rule 262 (operator)


state 232

 246) unary_expression : BANG factor _

  $default      reduce using rule 246 (unary_expression)


state 233

 248) binary_expression : expression _ operator expression
 274) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  RPAREN        shift, and go to state 328

  operator      go to state 217

state 234

 277) signed_number : sign DIGIT _

  $default      reduce using rule 277 (signed_number)


state 235

 278) signed_number : sign REAL _

  $default      reduce using rule 278 (signed_number)


state 236

 279) signed_var : sign var _

  $default      reduce using rule 279 (signed_var)


state 237

 311) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 312) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 313) operation : OPERATION LBRACK _ signed_number RBRACK
 314) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 240
  integer       go to state 120
  var_or_indirect  go to state 329
  signed_number  go to state 330
  number        go to state 331

state 238

  94) string : STRING _

  $default      reduce using rule 94 (string)


state 239

 201) definition : WORD ASSIGN definable _

  $default      reduce using rule 201 (definition)


state 240

 277) signed_number : sign _ DIGIT
 278) signed_number : sign _ REAL

  REAL          shift, and go to state 235
  DIGIT         shift, and go to state 234


state 241

 284) definable : reg _

  $default      reduce using rule 284 (definable)


state 242

 285) definable : number _

  $default      reduce using rule 285 (definable)


state 243

 286) definable : signed_number _

  $default      reduce using rule 286 (definable)


state 244

 287) definable : string _

  $default      reduce using rule 287 (definable)


state 245

 288) definable : framereg _

  $default      reduce using rule 288 (definable)


state 246

 289) definable : booleans _

  $default      reduce using rule 289 (definable)


state 247

 290) definable : localvars _

  $default      reduce using rule 290 (definable)


state 248

 293) reg_types : SREG _

  $default      reduce using rule 293 (reg_types)


state 249

 294) reg_types : UALM _

  $default      reduce using rule 294 (reg_types)


state 250

 295) reg_types : TIMER _

  $default      reduce using rule 295 (reg_types)


state 251

 296) reg_types : ARG _

  $default      reduce using rule 296 (reg_types)


state 252

 297) reg_types : VREG _

  $default      reduce using rule 297 (reg_types)


state 253

 298) reg_types : POSITION _

  $default      reduce using rule 298 (reg_types)


state 254

 299) reg_types : NUMREG _

  $default      reduce using rule 299 (reg_types)


state 255

 300) reg_types : POSREG _

  $default      reduce using rule 300 (reg_types)


state 256

 301) reg_types : INPUT _

  $default      reduce using rule 301 (reg_types)


state 257

 302) reg_types : OUTPUT _

  $default      reduce using rule 302 (reg_types)


state 258

 303) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 332


state 259

 304) frametype : TOOLREG _

  $default      reduce using rule 304 (frametype)


state 260

 305) frametype : FRAMEREG _

  $default      reduce using rule 305 (frametype)


state 261

 306) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 333


state 262

 307) local_types : LOCALREG _

  $default      reduce using rule 307 (local_types)


state 263

 308) local_types : LOCALPOSE _

  $default      reduce using rule 308 (local_types)


state 264

 309) local_types : LOCALFLAG _

  $default      reduce using rule 309 (local_types)


state 265

 310) localvars : local_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 334


state 266

 220) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 220 (var_method_modifiers)


state 267

 227) var_method_modifier : DOT swallow_newlines _ WORD
 228) var_method_modifier : DOT swallow_newlines _ group_statement
 229) var_method_modifier : DOT swallow_newlines _ POSEATTR
 230) var_method_modifier : DOT swallow_newlines _ OFFSET
 231) var_method_modifier : DOT swallow_newlines _ coord_system
 232) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 342
  GROUP         shift, and go to state 335
  WORD          shift, and go to state 339
  POSEATTR      shift, and go to state 341
  SPHERE        shift, and go to state 336
  POLAR         shift, and go to state 337
  ORIGIN        shift, and go to state 338
  FIX           shift, and go to state 344

  group_statement  go to state 340
  coord_system  go to state 343

state 268

 241) ns : WORD COLON COLON _

  $default      reduce using rule 241 (ns)


state 269

  76) basic_program_call : function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 345
  COMMA         shift, and go to state 346


state 270

  80) args : arg _

  $default      reduce using rule 80 (args)


state 271

  83) arg : number _

  $default      reduce using rule 83 (arg)


state 272

  84) arg : signed_number _

  $default      reduce using rule 84 (arg)


state 273

  85) arg : var _

  $default      reduce using rule 85 (arg)


state 274

  86) arg : string _

  $default      reduce using rule 86 (arg)


state 275

  87) arg : address _

  $default      reduce using rule 87 (arg)


state 276

  75) function_call : namespaces WORD _
 241) ns : WORD _ COLON COLON

  COLON         shift, and go to state 153
  $default      reduce using rule 75 (function_call)


state 277

  78) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  ADDRESS       shift, and go to state 92
  $default      reduce using rule 82 (args)

  args          go to state 347
  arg           go to state 270
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 240
  integer       go to state 120

state 278

  79) program_call : CALL var_or_indirect LPAREN _ args RPAREN

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  ADDRESS       shift, and go to state 92
  $default      reduce using rule 82 (args)

  args          go to state 348
  arg           go to state 270
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 240
  integer       go to state 120

state 279

  92) return_statement : RETURN LPAREN expression _ RPAREN
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  RPAREN        shift, and go to state 349

  operator      go to state 217

state 280

  96) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
  97) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 350
  COMMA         shift, and go to state 351


state 281

 212) assignable_range : var RANGE var _

  $default      reduce using rule 212 (assignable_range)


state 282

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82

  statement     go to state 3
  statements    go to state 352
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 283

 102) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 355
  ELSIF         [reduce using rule 107 (elsif_conditions)]
  $default      reduce using rule 107 (elsif_conditions)

  elsif_conditions  go to state 353
  elsif_condition  go to state 354

state 284

 104) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 282

  block         go to state 356

state 285

 103) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 358
  $default      reduce using rule 148 (else_block)

  else_block    go to state 357

state 286

 113) forloop : FOR var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 359


state 287

 115) while_loop : WHILE expression block _ END

  END           shift, and go to state 360


state 288

 119) word_list : word_list word_tuple _

  $default      reduce using rule 119 (word_list)


state 289

 120) word_tuple : COMMA WORD _

  $default      reduce using rule 120 (word_tuple)


state 290

 119) word_list : word_list _ word_tuple
 123) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 174
  WORD          [reduce using rule 123 (compile_statement)]
  COMMA         shift, and go to state 173
  $default      reduce using rule 123 (compile_statement)

  word_tuple    go to state 288

state 291

 125) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 361


state 292

 126) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 127) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 362


state 293

 128) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 129) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 365
  $default      reduce using rule 90 (program_vars)

  program_var   go to state 363
  program_vars  go to state 364

state 294

 130) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 368

  case_conditions  go to state 366
  case_condition  go to state 367

state 295

 141) inline_conditional : inlineable IF expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 141 (inline_conditional)

  operator      go to state 217

state 296

 142) inline_conditional : inlineable UNLESS expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 142 (inline_conditional)

  operator      go to state 217

state 297

 149) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 150) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 369
  MID           shift, and go to state 370


state 298

 200) definition : LOCALSTACK ASSIGN definable _

  $default      reduce using rule 200 (definition)


state 299

 202) assignment : var_or_indirect EQUAL expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 202 (assignment)

  operator      go to state 217

state 300

 203) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 371
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 301

 204) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 372
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 302

 205) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 373
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 303

 206) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 374
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 304

 208) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 208 (position_assignment)


state 305

 341) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 375

state 306

 207) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 305

  array         go to state 376

state 307

 209) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 152

  var_method_modifiers  go to state 377
  var_method_modifier  go to state 151

state 308

 210) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 210 (position_assignment)


state 309

 211) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 110

  assignable_range  go to state 378
  var           go to state 193
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 310

 233) var_system : SYSTEM WORD var_system_modifers _
 236) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 313
  DOT           [reduce using rule 233 (var_system)]
  $default      reduce using rule 233 (var_system)

  var_system_modifer  go to state 379

state 311

 234) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 122

  integer       go to state 380

state 312

 235) var_system_modifers : var_system_modifer _

  $default      reduce using rule 235 (var_system_modifers)


state 313

 238) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 89

  var_system    go to state 381

state 314

 275) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 276) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 382


state 315

 317) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 383


state 316

 318) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 384


state 317

 325) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  sn            go to state 385
  swallow_newlines  go to state 202

state 318

 327) hash : LBRACE _ sn hash_attributes sn RBRACE
 328) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 386

state 319

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 320

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 321

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  sn            go to state 387
  swallow_newlines  go to state 202

state 322

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 323

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 388


state 324

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 389
  $default      reduce using rule 60 (wait_statement)


state 325

  70) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 70 (use_statement)


state 326

  71) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 335

  group_statement  go to state 390

state 327

 248) binary_expression : expression _ operator expression
 248) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 218
  EEQUAL        [reduce using rule 248 (binary_expression)]
  NOTEQUAL      shift, and go to state 219
  NOTEQUAL      [reduce using rule 248 (binary_expression)]
  GTE           shift, and go to state 222
  GTE           [reduce using rule 248 (binary_expression)]
  LTE           shift, and go to state 223
  LTE           [reduce using rule 248 (binary_expression)]
  LT            shift, and go to state 220
  LT            [reduce using rule 248 (binary_expression)]
  GT            shift, and go to state 221
  GT            [reduce using rule 248 (binary_expression)]
  PLUS          shift, and go to state 224
  PLUS          [reduce using rule 248 (binary_expression)]
  MINUS         shift, and go to state 225
  MINUS         [reduce using rule 248 (binary_expression)]
  STAR          shift, and go to state 227
  STAR          [reduce using rule 248 (binary_expression)]
  SLASH         shift, and go to state 228
  SLASH         [reduce using rule 248 (binary_expression)]
  DIV           shift, and go to state 229
  DIV           [reduce using rule 248 (binary_expression)]
  AND           shift, and go to state 231
  AND           [reduce using rule 248 (binary_expression)]
  OR            shift, and go to state 226
  OR            [reduce using rule 248 (binary_expression)]
  MOD           shift, and go to state 230
  MOD           [reduce using rule 248 (binary_expression)]
  $default      reduce using rule 248 (binary_expression)

  operator      go to state 217

state 328

 274) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 274 (paren_expr)


state 329

 311) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 312) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 392
  RBRACK        shift, and go to state 391


state 330

 313) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 393


state 331

 314) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 394


state 332

 303) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 395

  definable_range  go to state 396

state 333

 306) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 397


state 334

 310) localvars : local_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 398


state 335

  68) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 399


state 336

 224) coord_system : SPHERE _

  $default      reduce using rule 224 (coord_system)


state 337

 225) coord_system : POLAR _

  $default      reduce using rule 225 (coord_system)


state 338

 226) coord_system : ORIGIN _

  $default      reduce using rule 226 (coord_system)


state 339

 227) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 227 (var_method_modifier)


state 340

 228) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 228 (var_method_modifier)


state 341

 229) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 229 (var_method_modifier)


state 342

 230) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 230 (var_method_modifier)


state 343

 231) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 231 (var_method_modifier)


state 344

 232) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 232 (var_method_modifier)


state 345

  76) basic_program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 76 (basic_program_call)


state 346

  81) args : args COMMA _ arg

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  ADDRESS       shift, and go to state 92

  arg           go to state 400
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 240
  integer       go to state 120

state 347

  78) program_call : RUN function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 401
  COMMA         shift, and go to state 346


state 348

  79) program_call : CALL var_or_indirect LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 402
  COMMA         shift, and go to state 346


state 349

  92) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 92 (return_statement)


state 350

  96) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 96 (io_method)


state 351

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122

  number        go to state 403
  integer       go to state 120

state 352

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 5 (block)

  statement     go to state 98
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 353

 102) conditional : IF expression block elsif_conditions _ else_block END
 106) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 358
  ELSIF         shift, and go to state 355
  $default      reduce using rule 148 (else_block)

  else_block    go to state 404
  elsif_condition  go to state 405

state 354

 105) elsif_conditions : elsif_condition _

  $default      reduce using rule 105 (elsif_conditions)


state 355

 108) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 406
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 356

 104) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 409
  ELSIF         [reduce using rule 111 (elsif_block)]
  $default      reduce using rule 111 (elsif_block)

  elsif_block   go to state 407
  elsif_block_condition  go to state 408

state 357

 103) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 410


state 358

 147) else_block : ELSE _ block

  NEWLINE       shift, and go to state 282

  block         go to state 411

state 359

 113) forloop : FOR var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 114) forloop : FOR var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  int_or_var    go to state 412
  integer       go to state 413
  var           go to state 414
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 360

 115) while_loop : WHILE expression block END _

  $default      reduce using rule 115 (while_loop)


state 361

 125) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 125 (namespace)


state 362

 126) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 127) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 365
  $default      reduce using rule 90 (program_vars)

  program_var   go to state 363
  program_vars  go to state 415

state 363

  88) program_vars : program_var _

  $default      reduce using rule 88 (program_vars)


state 364

  89) program_vars : program_vars _ COMMA program_var
 128) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 129) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 417
  COMMA         shift, and go to state 416


state 365

  91) program_var : WORD _

  $default      reduce using rule 91 (program_var)


state 366

 130) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 132) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 420
  WHEN          shift, and go to state 368
  $default      reduce using rule 137 (case_else)

  case_else     go to state 418
  case_condition  go to state 419

state 367

 131) case_conditions : case_condition _

  $default      reduce using rule 131 (case_conditions)


state 368

 133) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  case_allowed_condition  go to state 421
  number        go to state 422
  var           go to state 423
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 369

 149) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 424


state 370

 150) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 425


state 371

 203) assignment : var_or_indirect PLUS EQUAL expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 203 (assignment)

  operator      go to state 217

state 372

 204) assignment : var_or_indirect MINUS EQUAL expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 204 (assignment)

  operator      go to state 217

state 373

 205) assignment : var_or_indirect STAR EQUAL expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 205 (assignment)

  operator      go to state 217

state 374

 206) assignment : var_or_indirect SLASH EQUAL expression _
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 206 (assignment)

  operator      go to state 217

state 375

 341) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 426
  WORD          shift, and go to state 427
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 431
  LBRACK        shift, and go to state 305
  LBRACE        shift, and go to state 318
  $default      reduce using rule 340 (optional_sign)

  hash          go to state 428
  array         go to state 429
  optional_sign  go to state 430
  sign          go to state 432
  array_values  go to state 433
  array_value   go to state 434
  hash_value    go to state 435

state 376

 207) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 207 (position_assignment)


state 377

 209) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 220) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  ARROW         shift, and go to state 436

  var_method_modifier  go to state 266

state 378

 211) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 437


state 379

 236) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 236 (var_system_modifers)


state 380

 234) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 438


state 381

 238) var_system_modifer : DOT var_system _

  $default      reduce using rule 238 (var_system_modifer)


state 382

 275) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 276) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  indirectable  go to state 439
  integer       go to state 120

state 383

 317) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 317 (message)


state 384

 318) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 318 (warning)


state 385

 325) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 440


state 386

 327) hash : LBRACE sn _ hash_attributes sn RBRACE
 328) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 444
  RBRACE        shift, and go to state 442

  hash_attributes  go to state 441
  hash_attribute  go to state 443

state 387

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 448
  RBRACE        shift, and go to state 446

  tp_tool_attributes  go to state 445
  tp_tool_attribute  go to state 447

state 388

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 449


state 389

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  wait_modifier  go to state 450
  timeout_modifier  go to state 451
  after_modifier  go to state 452
  swallow_newlines  go to state 453

state 390

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 454


state 391

 311) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 311 (operation)


state 392

 312) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var_or_indirect  go to state 455

state 393

 313) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 313 (operation)


state 394

 314) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 314 (operation)


state 395

 291) definable_range : DIGIT _ RANGE DIGIT
 292) definable_range : DIGIT _

  RANGE         shift, and go to state 456
  $default      reduce using rule 292 (definable_range)


state 396

 303) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 457


state 397

 306) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 458


state 398

 310) localvars : local_types LBRACK RBRACK _

  $default      reduce using rule 310 (localvars)


state 399

  68) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 122

  integer       go to state 459

state 400

  81) args : args COMMA arg _

  $default      reduce using rule 81 (args)


state 401

  78) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 78 (program_call)


state 402

  79) program_call : CALL var_or_indirect LPAREN args RPAREN _

  $default      reduce using rule 79 (program_call)


state 403

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 460


state 404

 102) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 461


state 405

 106) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 106 (elsif_conditions)


state 406

 108) elsif_condition : ELSIF expression _ block
 248) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 282
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230

  block         go to state 462
  operator      go to state 217

state 407

 104) conditional_block : IF expression THEN block elsif_block _ else_block END
 110) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 358
  ELSIF         shift, and go to state 409
  $default      reduce using rule 148 (else_block)

  else_block    go to state 463
  elsif_block_condition  go to state 464

state 408

 109) elsif_block : elsif_block_condition _

  $default      reduce using rule 109 (elsif_block)


state 409

 112) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 465
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 410

 103) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 103 (conditional)


state 411

 147) else_block : ELSE block _

  $default      reduce using rule 147 (else_block)


state 412

 113) forloop : FOR var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 114) forloop : FOR var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 466
  DOWNTO        shift, and go to state 467


state 413

 116) int_or_var : integer _

  $default      reduce using rule 116 (int_or_var)


state 414

 117) int_or_var : var _

  $default      reduce using rule 117 (int_or_var)


state 415

  89) program_vars : program_vars _ COMMA program_var
 126) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 127) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 468
  COMMA         shift, and go to state 416


state 416

  89) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 365

  program_var   go to state 469

state 417

 128) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 129) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 282
  COLON         shift, and go to state 471

  block         go to state 470

state 418

 130) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 472


state 419

 132) case_conditions : case_conditions case_condition _

  $default      reduce using rule 132 (case_conditions)


state 420

 136) case_else : ELSE _ block

  NEWLINE       shift, and go to state 282

  block         go to state 473

state 421

 133) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 282

  block         go to state 474

state 422

 134) case_allowed_condition : number _

  $default      reduce using rule 134 (case_allowed_condition)


state 423

 135) case_allowed_condition : var _

  $default      reduce using rule 135 (case_allowed_condition)


state 424

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 475
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 425

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 476
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 426

 332) hash_value : STRING _

  $default      reduce using rule 332 (hash_value)


state 427

 333) hash_value : WORD _

  $default      reduce using rule 333 (hash_value)


state 428

 334) hash_value : hash _

  $default      reduce using rule 334 (hash_value)


state 429

 335) hash_value : array _

  $default      reduce using rule 335 (hash_value)


state 430

 336) hash_value : optional_sign _ DIGIT
 337) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 478
  DIGIT         shift, and go to state 477


state 431

 338) hash_value : TRUE_FALSE _

  $default      reduce using rule 338 (hash_value)


state 432

 339) optional_sign : sign _

  $default      reduce using rule 339 (optional_sign)


state 433

 341) array : LBRACK sn array_values _ sn RBRACK
 343) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 200
  COMMA         shift, and go to state 480
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 479

state 434

 342) array_values : array_value _

  $default      reduce using rule 342 (array_values)


state 435

 344) array_value : hash_value _

  $default      reduce using rule 344 (array_value)


state 436

 209) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 305

  array         go to state 481

state 437

 211) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 484

  pose_range_modifiers  go to state 482
  pose_range_modifier  go to state 483

state 438

 234) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 313
  DOT           [reduce using rule 237 (var_system_modifers)]
  $default      reduce using rule 237 (var_system_modifers)

  var_system_modifers  go to state 485
  var_system_modifer  go to state 312

state 439

 275) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 276) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 486


state 440

 325) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 325 (position_data)


state 441

 327) hash : LBRACE sn hash_attributes _ sn RBRACE
 330) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 200
  COMMA         shift, and go to state 488
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 487

state 442

 328) hash : LBRACE sn RBRACE _

  $default      reduce using rule 328 (hash)


state 443

 329) hash_attributes : hash_attribute _

  $default      reduce using rule 329 (hash_attributes)


state 444

 331) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 489


state 445

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 200
  COMMA         shift, and go to state 491
  $default      reduce using rule 324 (swallow_newlines)

  sn            go to state 490
  swallow_newlines  go to state 202

state 446

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 447

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 448

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 492


state 449

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 450

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 493
  $default      reduce using rule 61 (wait_statement)


state 451

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 452

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 453

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 494
  AFTER         shift, and go to state 495


state 454

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 71 (use_statement)


state 455

 312) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 496


state 456

 291) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 497


state 457

 303) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 303 (reg)


state 458

 306) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 306 (framereg)


state 459

  68) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 498


state 460

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 499


state 461

 102) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 102 (conditional)


state 462

 108) elsif_condition : ELSIF expression block _

  $default      reduce using rule 108 (elsif_condition)


state 463

 104) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 500


state 464

 110) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 110 (elsif_block)


state 465

 112) elsif_block_condition : ELSIF expression _ THEN block
 248) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  THEN          shift, and go to state 501

  operator      go to state 217

state 466

 113) forloop : FOR var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  int_or_var    go to state 502
  integer       go to state 413
  var           go to state 414
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 467

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  int_or_var    go to state 503
  integer       go to state 413
  var           go to state 414
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 468

 126) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 282
  COLON         shift, and go to state 505

  block         go to state 504

state 469

  89) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 89 (program_vars)


state 470

 128) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 506


state 471

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 507


state 472

 130) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 130 (case_statement)


state 473

 136) case_else : ELSE block _

  $default      reduce using rule 136 (case_else)


state 474

 133) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 133 (case_condition)


state 475

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 508


state 476

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 509


state 477

 336) hash_value : optional_sign DIGIT _

  $default      reduce using rule 336 (hash_value)


state 478

 337) hash_value : optional_sign REAL _

  $default      reduce using rule 337 (hash_value)


state 479

 341) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 510


state 480

 343) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 511

state 481

 209) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 209 (position_assignment)


state 482

 211) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 222) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 484
  $default      reduce using rule 211 (position_assignment)

  pose_range_modifier  go to state 512

state 483

 221) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 221 (pose_range_modifiers)


state 484

 223) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 513

state 485

 234) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 236) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 313
  DOT           [reduce using rule 234 (var_system)]
  $default      reduce using rule 234 (var_system)

  var_system_modifer  go to state 379

state 486

 275) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 276) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 152
  $default      reduce using rule 275 (indirect_thing)

  var_method_modifier  go to state 151
  var_method_modifiers  go to state 514

state 487

 327) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 515


state 488

 330) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 516

state 489

 331) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 426
  WORD          shift, and go to state 427
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 431
  LBRACK        shift, and go to state 305
  LBRACE        shift, and go to state 318
  $default      reduce using rule 340 (optional_sign)

  hash_value    go to state 517
  hash          go to state 428
  array         go to state 429
  optional_sign  go to state 430
  sign          go to state 432

state 490

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 518


state 491

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  sn            go to state 519
  swallow_newlines  go to state 202

state 492

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 426
  WORD          shift, and go to state 427
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 431
  LBRACK        shift, and go to state 305
  LBRACE        shift, and go to state 318
  $default      reduce using rule 340 (optional_sign)

  hash_value    go to state 520
  hash          go to state 428
  array         go to state 429
  optional_sign  go to state 430
  sign          go to state 432

state 493

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  wait_modifier  go to state 521
  timeout_modifier  go to state 451
  after_modifier  go to state 452
  swallow_newlines  go to state 453

state 494

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 522


state 495

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 523


state 496

 312) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 312 (operation)


state 497

 291) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 291 (definable_range)


state 498

  68) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 68 (group_statement)


state 499

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 524


state 500

 104) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 104 (conditional_block)


state 501

 112) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 282

  block         go to state 525

state 502

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 526


state 503

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 527


state 504

 126) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 528


state 505

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 529


state 506

 128) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 128 (function)


state 507

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 282

  block         go to state 530

state 508

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 533

  motion_modifiers  go to state 531
  motion_modifier  go to state 532

state 509

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 534


state 510

 341) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 341 (array)


state 511

 343) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 426
  WORD          shift, and go to state 427
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 431
  LBRACK        shift, and go to state 305
  LBRACE        shift, and go to state 318
  $default      reduce using rule 340 (optional_sign)

  hash          go to state 428
  array         go to state 429
  optional_sign  go to state 430
  sign          go to state 432
  array_value   go to state 535
  hash_value    go to state 435

state 512

 222) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 222 (pose_range_modifiers)


state 513

 223) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 536


state 514

 220) var_method_modifiers : var_method_modifiers _ var_method_modifier
 276) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 152
  $default      reduce using rule 276 (indirect_thing)

  var_method_modifier  go to state 266

state 515

 327) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 327 (hash)


state 516

 330) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 444

  hash_attribute  go to state 537

state 517

 331) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 331 (hash_attribute)


state 518

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 519

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 448

  tp_tool_attribute  go to state 538

state 520

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 521

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 522

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49

  label         go to state 539

state 523

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 540
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 524

  97) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 97 (io_method)


state 525

 112) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 112 (elsif_block_condition)


state 526

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 282

  block         go to state 541

state 527

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 282

  block         go to state 542

state 528

 126) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 126 (function)


state 529

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 282

  block         go to state 543

state 530

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 544


state 531

 149) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 152) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 533
  $default      reduce using rule 149 (motion_statement)

  motion_modifier  go to state 545

state 532

 151) motion_modifiers : motion_modifier _

  $default      reduce using rule 151 (motion_modifiers)


state 533

 155) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 156) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 157) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 158) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 159) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 160) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 161) motion_modifier : DOT _ swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 162) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 163) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 164) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 546

state 534

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 324 (swallow_newlines)

  swallow_newlines  go to state 547

state 535

 343) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 343 (array_values)


state 536

 223) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 223 (pose_range_modifier)


state 537

 330) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 330 (hash_attributes)


state 538

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 539

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 548


state 540

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 549


state 541

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 550


state 542

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 551


state 543

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 552


state 544

 129) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 129 (function)


state 545

 152) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 152 (motion_modifiers)


state 546

 155) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 156) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 157) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 158) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 159) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 160) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 161) motion_modifier : DOT swallow_newlines _ DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 162) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 163) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 164) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 558
  DISTANCE_SEGMENT  shift, and go to state 559
  AT            shift, and go to state 553
  ACC           shift, and go to state 554
  TERM          shift, and go to state 556
  OFFSET        shift, and go to state 557
  SKIP          shift, and go to state 560
  COORD         shift, and go to state 563
  MROT          shift, and go to state 564
  PTH           shift, and go to state 565
  WJNT          shift, and go to state 567
  INC           shift, and go to state 566
  BREAK         shift, and go to state 568
  RTCP          shift, and go to state 569
  FPLIN         shift, and go to state 570
  AP_LD         shift, and go to state 575
  RT_LD         shift, and go to state 574
  CD            shift, and go to state 571
  CR            shift, and go to state 555
  INDEV         shift, and go to state 573
  EV            shift, and go to state 572
  PSPD          shift, and go to state 576
  CTV           shift, and go to state 577

  valid_motion_statements  go to state 561
  single_argument_motion_modifiers  go to state 562

state 547

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 578


state 548

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 549

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 579


state 550

 113) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 113 (forloop)


state 551

 114) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 114 (forloop)


state 552

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 127 (function)


state 553

 155) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 580


state 554

 156) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 581


state 555

 157) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 582


state 556

 158) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 583


state 557

 159) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 584


state 558

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 585


state 559

 161) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT _ LPAREN distance COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 586


state 560

 162) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 587


state 561

 163) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 163 (motion_modifier)


state 562

 164) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 588


state 563

 165) valid_motion_statements : COORD _

  $default      reduce using rule 165 (valid_motion_statements)


state 564

 166) valid_motion_statements : MROT _

  $default      reduce using rule 166 (valid_motion_statements)


state 565

 167) valid_motion_statements : PTH _

  $default      reduce using rule 167 (valid_motion_statements)


state 566

 168) valid_motion_statements : INC _

  $default      reduce using rule 168 (valid_motion_statements)


state 567

 169) valid_motion_statements : WJNT _

  $default      reduce using rule 169 (valid_motion_statements)


state 568

 170) valid_motion_statements : BREAK _

  $default      reduce using rule 170 (valid_motion_statements)


state 569

 171) valid_motion_statements : RTCP _

  $default      reduce using rule 171 (valid_motion_statements)


state 570

 172) valid_motion_statements : FPLIN _

  $default      reduce using rule 172 (valid_motion_statements)


state 571

 173) single_argument_motion_modifiers : CD _

  $default      reduce using rule 173 (single_argument_motion_modifiers)


state 572

 174) single_argument_motion_modifiers : EV _

  $default      reduce using rule 174 (single_argument_motion_modifiers)


state 573

 175) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 175 (single_argument_motion_modifiers)


state 574

 176) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 176 (single_argument_motion_modifiers)


state 575

 177) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 177 (single_argument_motion_modifiers)


state 576

 178) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 178 (single_argument_motion_modifiers)


state 577

 179) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 179 (single_argument_motion_modifiers)


state 578

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 589


state 579

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 590


state 580

 155) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 593
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  speed         go to state 591
  number        go to state 118
  var           go to state 119
  indirectable  go to state 592
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 581

 156) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  integer       go to state 413
  var           go to state 414
  int_or_var    go to state 594
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 582

 157) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 599

  valid_terminations  go to state 595
  motion_arguements  go to state 596
  integer       go to state 597
  var           go to state 598
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 583

 158) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 599

  valid_terminations  go to state 600
  integer       go to state 597
  var           go to state 598
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 584

 159) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 601
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 585

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA seg_actions RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  time          go to state 602
  var           go to state 603
  number        go to state 604
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 586

 161) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN _ distance COMMA seg_actions RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  distance      go to state 605
  var           go to state 606
  number        go to state 607
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 587

 162) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49

  label         go to state 608

state 588

 164) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  integer       go to state 413
  var           go to state 414
  int_or_var    go to state 609
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 589

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 610
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 590

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 591

 155) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 611


state 592

 197) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 612


state 593

 198) speed : STRING _

  $default      reduce using rule 198 (speed)


state 594

 156) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 613


state 595

 153) motion_arguements : valid_terminations _
 154) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 614
  $default      reduce using rule 153 (motion_arguements)


state 596

 157) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 615


state 597

 180) valid_terminations : integer _

  $default      reduce using rule 180 (valid_terminations)


state 598

 181) valid_terminations : var _

  $default      reduce using rule 181 (valid_terminations)


state 599

 182) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 616


state 600

 158) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 617


state 601

 159) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 618


state 602

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 619


state 603

 193) time : var _

  $default      reduce using rule 193 (time)


state 604

 194) time : number _

  $default      reduce using rule 194 (time)


state 605

 161) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 620


state 606

 195) distance : var _

  $default      reduce using rule 195 (distance)


state 607

 196) distance : number _

  $default      reduce using rule 196 (distance)


state 608

 162) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 622
  $default      reduce using rule 184 (optional_lpos_arg)

  optional_lpos_arg  go to state 621

state 609

 164) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 623


state 610

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 624


state 611

 155) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 155 (motion_modifier)


state 612

 197) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 625


state 613

 156) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 156 (motion_modifier)


state 614

 154) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 599

  valid_terminations  go to state 626
  integer       go to state 597
  var           go to state 598
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 615

 157) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 157 (motion_modifier)


state 616

 182) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 182 (valid_terminations)


state 617

 158) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 158 (motion_modifier)


state 618

 159) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 619

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 127
  INDIRECT      shift, and go to state 91
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  SYSTEM        shift, and go to state 89

  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  seg_actions   go to state 627
  program_call  go to state 628
  io_method     go to state 629
  assignment    go to state 630
  var_or_indirect  go to state 631
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 620

 161) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 127
  INDIRECT      shift, and go to state 91
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  SYSTEM        shift, and go to state 89

  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  seg_actions   go to state 632
  program_call  go to state 628
  io_method     go to state 629
  assignment    go to state 630
  var_or_indirect  go to state 631
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 621

 162) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 633


state 622

 183) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 110

  var           go to state 634
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 623

 164) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 164 (motion_modifier)


state 624

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 533

  motion_modifiers  go to state 635
  motion_modifier  go to state 532

state 625

 197) speed : indirectable COMMA STRING _

  $default      reduce using rule 197 (speed)


state 626

 154) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 154 (motion_arguements)


state 627

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 636


state 628

 190) seg_actions : program_call _

  $default      reduce using rule 190 (seg_actions)


state 629

 191) seg_actions : io_method _

  $default      reduce using rule 191 (seg_actions)


state 630

 192) seg_actions : assignment _

  $default      reduce using rule 192 (seg_actions)


state 631

 202) assignment : var_or_indirect _ EQUAL expression
 203) assignment : var_or_indirect _ PLUS EQUAL expression
 204) assignment : var_or_indirect _ MINUS EQUAL expression
 205) assignment : var_or_indirect _ STAR EQUAL expression
 206) assignment : var_or_indirect _ SLASH EQUAL expression

  EQUAL         shift, and go to state 185
  PLUS          shift, and go to state 186
  MINUS         shift, and go to state 187
  STAR          shift, and go to state 188
  SLASH         shift, and go to state 189


state 632

 161) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 637


state 633

 162) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 162 (motion_modifier)


state 634

 183) optional_lpos_arg : COMMA var _

  $default      reduce using rule 183 (optional_lpos_arg)


state 635

 150) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 152) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 533
  $default      reduce using rule 150 (motion_statement)

  motion_modifier  go to state 545

state 636

 160) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN _

  $default      reduce using rule 160 (motion_modifier)


state 637

 161) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN _

  $default      reduce using rule 161 (motion_modifier)

