state 3 contains 2 shift/reduce conflicts
state 51 contains 1 shift/reduce conflicts
state 59 contains 1 shift/reduce conflicts
state 61 contains 1 reduce/reduce conflicts
state 75 contains 2 shift/reduce conflicts
state 98 contains 2 shift/reduce conflicts
state 101 contains 1 shift/reduce conflicts
state 127 contains 1 reduce/reduce conflicts
state 154 contains 1 reduce/reduce conflicts
state 172 contains 1 shift/reduce conflicts
state 176 contains 1 shift/reduce conflicts
state 195 contains 1 shift/reduce conflicts
state 271 contains 2 reduce/reduce conflicts
state 272 contains 2 reduce/reduce conflicts
state 273 contains 2 reduce/reduce conflicts
state 275 contains 2 reduce/reduce conflicts
state 284 contains 1 shift/reduce conflicts
state 291 contains 1 shift/reduce conflicts
state 311 contains 1 shift/reduce conflicts
state 328 contains 14 shift/reduce conflicts
state 357 contains 1 shift/reduce conflicts
state 439 contains 1 shift/reduce conflicts
state 486 contains 1 shift/reduce conflicts

rule 139 (case_allowed_statement) never reduced
rule 140 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 group_statement: GROUP LPAREN integer RPAREN
rule 69 use_statement: FANUC_USE indirectable
rule 70 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 71 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 72 collguard_statement: COLL_GUARD optional_arg
rule 73 set_skip_statement: SET_SKIP_CONDITION expression
rule 74 function_call: WORD
rule 75 function_call: namespaces WORD
rule 76 basic_program_call: function_call LPAREN args RPAREN
rule 77 program_call: basic_program_call
rule 78 program_call: RUN function_call LPAREN args RPAREN
rule 79 program_call: CALL var_or_indirect LPAREN args RPAREN
rule 80 args: arg
rule 81 args: args COMMA arg
rule 82 args: 
rule 83 arg: number
rule 84 arg: signed_number
rule 85 arg: var
rule 86 arg: string
rule 87 arg: address
rule 88 arg: expression
rule 89 program_vars: program_var
rule 90 program_vars: program_vars COMMA program_var
rule 91 program_vars: 
rule 92 program_var: WORD
rule 93 return_statement: RETURN LPAREN expression RPAREN
rule 94 return_statement: RETURN
rule 95 string: STRING
rule 96 io_method: IO_METHOD var_or_indirect
rule 97 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 98 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 99 var_or_indirect: var
rule 100 var_or_indirect: indirect_thing
rule 101 var_or_indirect: var_system
rule 102 jump: JUMP label
rule 103 conditional: IF expression block elsif_conditions else_block END
rule 104 conditional: UNLESS expression block else_block END
rule 105 conditional_block: IF expression THEN block elsif_block else_block END
rule 106 elsif_conditions: elsif_condition
rule 107 elsif_conditions: elsif_conditions elsif_condition
rule 108 elsif_conditions: 
rule 109 elsif_condition: ELSIF expression block
rule 110 elsif_block: elsif_block_condition
rule 111 elsif_block: elsif_block elsif_block_condition
rule 112 elsif_block: 
rule 113 elsif_block_condition: ELSIF expression THEN block
rule 114 forloop: FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 115 forloop: FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 116 while_loop: WHILE expression block END
rule 117 int_or_var: integer
rule 118 int_or_var: var
rule 119 word_list: word_tuple
rule 120 word_list: word_list word_tuple
rule 121 word_tuple: COMMA WORD
rule 122 word_tuple: WORD
rule 123 using_statement: USING word_list
rule 124 compile_statement: COMPILE IMPORT word_list
rule 125 import_statement: IMPORT word_list
rule 126 namespace: NAMESPACE WORD block END
rule 127 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 128 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 129 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 130 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 131 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 132 case_conditions: case_condition
rule 133 case_conditions: case_conditions case_condition
rule 134 case_condition: WHEN case_allowed_condition block
rule 135 case_allowed_condition: number
rule 136 case_allowed_condition: var
rule 137 case_else: ELSE block
rule 138 case_else: 
rule 139 case_allowed_statement: program_call
rule 140 case_allowed_statement: jump
rule 141 inline_conditional: inlineable
rule 142 inline_conditional: inlineable IF expression
rule 143 inline_conditional: inlineable UNLESS expression
rule 144 inlineable: jump
rule 145 inlineable: assignment
rule 146 inlineable: io_method
rule 147 inlineable: program_call
rule 148 else_block: ELSE block
rule 149 else_block: 
rule 150 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 151 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 152 motion_modifiers: motion_modifier
rule 153 motion_modifiers: motion_modifiers motion_modifier
rule 154 motion_arguements: valid_terminations
rule 155 motion_arguements: valid_terminations COMMA valid_terminations
rule 156 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 157 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 158 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 159 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 160 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 161 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
rule 162 motion_modifier: DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
rule 163 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 164 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 165 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 166 valid_motion_statements: COORD
rule 167 valid_motion_statements: MROT
rule 168 valid_motion_statements: PTH
rule 169 valid_motion_statements: INC
rule 170 valid_motion_statements: WJNT
rule 171 valid_motion_statements: BREAK
rule 172 valid_motion_statements: RTCP
rule 173 valid_motion_statements: FPLIN
rule 174 single_argument_motion_modifiers: CD
rule 175 single_argument_motion_modifiers: EV
rule 176 single_argument_motion_modifiers: INDEV
rule 177 single_argument_motion_modifiers: RT_LD
rule 178 single_argument_motion_modifiers: AP_LD
rule 179 single_argument_motion_modifiers: PSPD
rule 180 single_argument_motion_modifiers: CTV
rule 181 valid_terminations: integer
rule 182 valid_terminations: var
rule 183 valid_terminations: MINUS DIGIT
rule 184 optional_lpos_arg: COMMA var
rule 185 optional_lpos_arg: 
rule 186 indirectable: number
rule 187 indirectable: var
rule 188 optional_arg: number
rule 189 optional_arg: var
rule 190 optional_arg: 
rule 191 seg_actions: program_call
rule 192 seg_actions: io_method
rule 193 seg_actions: assignment
rule 194 time: var
rule 195 time: number
rule 196 distance: var
rule 197 distance: number
rule 198 speed: indirectable COMMA STRING
rule 199 speed: STRING
rule 200 label_definition: label
rule 201 definition: LOCALSTACK ASSIGN definable
rule 202 definition: WORD ASSIGN definable
rule 203 assignment: var_or_indirect EQUAL expression
rule 204 assignment: var_or_indirect PLUS EQUAL expression
rule 205 assignment: var_or_indirect MINUS EQUAL expression
rule 206 assignment: var_or_indirect STAR EQUAL expression
rule 207 assignment: var_or_indirect SLASH EQUAL expression
rule 208 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 209 position_assignment: var_or_indirect ARROW array
rule 210 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 211 position_assignment: assignable_range EQUAL assignable_range
rule 212 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 213 assignable_range: var RANGE var
rule 214 assignable_range: var
rule 215 var: var_without_namespaces
rule 216 var: var_with_namespaces
rule 217 var_without_namespaces: WORD
rule 218 var_without_namespaces: WORD var_method_modifiers
rule 219 var_with_namespaces: namespaces var_without_namespaces
rule 220 var_method_modifiers: var_method_modifier
rule 221 var_method_modifiers: var_method_modifiers var_method_modifier
rule 222 pose_range_modifiers: pose_range_modifier
rule 223 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 224 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 225 coord_system: SPHERE
rule 226 coord_system: POLAR
rule 227 coord_system: ORIGIN
rule 228 var_method_modifier: DOT swallow_newlines WORD
rule 229 var_method_modifier: DOT swallow_newlines group_statement
rule 230 var_method_modifier: DOT swallow_newlines POSEATTR
rule 231 var_method_modifier: DOT swallow_newlines OFFSET
rule 232 var_method_modifier: DOT swallow_newlines coord_system
rule 233 var_method_modifier: DOT swallow_newlines FIX
rule 234 var_system: SYSTEM WORD var_system_modifers
rule 235 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 236 var_system_modifers: var_system_modifer
rule 237 var_system_modifers: var_system_modifers var_system_modifer
rule 238 var_system_modifers: 
rule 239 var_system_modifer: DOT var_system
rule 240 namespaces: ns
rule 241 namespaces: namespaces ns
rule 242 ns: WORD COLON COLON
rule 243 expression: unary_expression
rule 244 expression: binary_expression
rule 245 unary_expression: factor
rule 246 unary_expression: address
rule 247 unary_expression: BANG factor
rule 248 unary_expression: basic_program_call
rule 249 binary_expression: expression operator expression
rule 250 operator: EEQUAL
rule 251 operator: NOTEQUAL
rule 252 operator: LT
rule 253 operator: GT
rule 254 operator: GTE
rule 255 operator: LTE
rule 256 operator: PLUS
rule 257 operator: MINUS
rule 258 operator: OR
rule 259 operator: STAR
rule 260 operator: SLASH
rule 261 operator: DIV
rule 262 operator: MOD
rule 263 operator: AND
rule 264 factor: number
rule 265 factor: signed_number
rule 266 factor: operation
rule 267 factor: var
rule 268 factor: signed_var
rule 269 factor: var_system
rule 270 factor: indirect_thing
rule 271 factor: paren_expr
rule 272 factor: booleans
rule 273 booleans: TRUE_FALSE
rule 274 booleans: ON_OFF
rule 275 paren_expr: LPAREN expression RPAREN
rule 276 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 277 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 278 signed_number: sign DIGIT
rule 279 signed_number: sign REAL
rule 280 signed_var: sign var
rule 281 sign: MINUS
rule 282 number: integer
rule 283 number: REAL
rule 284 integer: DIGIT
rule 285 definable: reg
rule 286 definable: number
rule 287 definable: signed_number
rule 288 definable: string
rule 289 definable: framereg
rule 290 definable: booleans
rule 291 definable: localvars
rule 292 definable_range: DIGIT RANGE DIGIT
rule 293 definable_range: DIGIT
rule 294 reg_types: SREG
rule 295 reg_types: UALM
rule 296 reg_types: TIMER
rule 297 reg_types: ARG
rule 298 reg_types: VREG
rule 299 reg_types: POSITION
rule 300 reg_types: NUMREG
rule 301 reg_types: POSREG
rule 302 reg_types: INPUT
rule 303 reg_types: OUTPUT
rule 304 reg: reg_types LBRACK definable_range RBRACK
rule 305 frametype: TOOLREG
rule 306 frametype: FRAMEREG
rule 307 framereg: frametype LBRACK DIGIT RBRACK
rule 308 local_types: LOCALREG
rule 309 local_types: LOCALPOSE
rule 310 local_types: LOCALFLAG
rule 311 localvars: local_types LBRACK RBRACK
rule 312 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 313 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 314 operation: OPERATION LBRACK signed_number RBRACK
rule 315 operation: OPERATION LBRACK number RBRACK
rule 316 address: ADDRESS var
rule 317 comment: COMMENT
rule 318 message: MESSAGE LPAREN STRING RPAREN
rule 319 warning: WARNING LPAREN STRING RPAREN
rule 320 terminator: NEWLINE
rule 321 terminator: comment optional_newline
rule 322 terminator: false
rule 323 terminator: 
rule 324 swallow_newlines: NEWLINE
rule 325 swallow_newlines: 
rule 326 position_data: POSITION_DATA sn hash sn END
rule 327 sn: swallow_newlines
rule 328 hash: LBRACE sn hash_attributes sn RBRACE
rule 329 hash: LBRACE sn RBRACE
rule 330 hash_attributes: hash_attribute
rule 331 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 332 hash_attribute: STRING COLON hash_value
rule 333 hash_value: STRING
rule 334 hash_value: WORD
rule 335 hash_value: hash
rule 336 hash_value: array
rule 337 hash_value: optional_sign DIGIT
rule 338 hash_value: optional_sign REAL
rule 339 hash_value: TRUE_FALSE
rule 340 optional_sign: sign
rule 341 optional_sign: 
rule 342 array: LBRACK sn array_values sn RBRACK
rule 343 array_values: array_value
rule 344 array_values: array_values COMMA sn array_value
rule 345 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (138)
    on right: 
    on left : 
  program (139)
    on right: 
    on left : 1 2
  statements (140)
    on right: 1 4 5
    on left : 3 4
  statement (141)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (142)
    on right: 3 4
    on left : 320 321 322 323
  block (143)
    on right: 103 104 105 109 113 114 115 116 126 127 128 129 130 134 137 148
    on left : 5
  optional_newline (144)
    on right: 321
    on left : 6 7
  comment (145)
    on right: 8 321
    on left : 317
  message (146)
    on right: 9
    on left : 318
  definition (147)
    on right: 10
    on left : 201 202
  namespace (148)
    on right: 11
    on left : 126
  motion_statement (149)
    on right: 12
    on left : 150 151
  position_assignment (150)
    on right: 13
    on left : 208 209 210 211 212
  label_definition (151)
    on right: 14
    on left : 200
  address (152)
    on right: 15 87 246
    on left : 316
  conditional (153)
    on right: 16
    on left : 103 104
  inline_conditional (154)
    on right: 17
    on left : 141 142 143
  conditional_block (155)
    on right: 18
    on left : 105
  forloop (156)
    on right: 19
    on left : 114 115
  while_loop (157)
    on right: 20
    on left : 116
  use_statement (158)
    on right: 21
    on left : 69 70 71
  set_skip_statement (159)
    on right: 22
    on left : 73
  wait_statement (160)
    on right: 23
    on left : 59 60 61 62
  case_statement (161)
    on right: 24
    on left : 131
  fanuc_eval (162)
    on right: 25
    on left : 58
  timer_method (163)
    on right: 26
    on left : 57
  position_data (164)
    on right: 27
    on left : 326
  raise (165)
    on right: 28
    on left : 56
  tp_header_definition (166)
    on right: 29
    on left : 46
  lpos_or_jpos (167)
    on right: 30
    on left : 43 44
  empty_stmt (168)
    on right: 31
    on left : 45
  warning (169)
    on right: 32
    on left : 319
  var_system (170)
    on right: 33 101 239 269
    on left : 234 235
  return_statement (171)
    on right: 36
    on left : 93 94
  collguard_statement (172)
    on right: 37
    on left : 72
  function (173)
    on right: 38
    on left : 127 128 129 130
  tp_application_definition (174)
    on right: 39
    on left : 55
  using_statement (175)
    on right: 40
    on left : 123
  import_statement (176)
    on right: 41
    on left : 125
  compile_statement (177)
    on right: 42
    on left : 124
  var_or_indirect (178)
    on right: 43 44 56 57 79 96 97 98 150 151 160 203 204 205 206 207 209 312 313
    on left : 99 100 101
  tp_header_value (179)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (180)
    on right: 55
    on left : 50 51
  sn (181)
    on right: 50 51 53 55 326 328 329 331 342 344
    on left : 327
  tp_tool_attributes (182)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (183)
    on right: 52 53
    on left : 54
  hash_value (184)
    on right: 54 332 345
    on left : 333 334 335 336 337 338 339
  indirectable (185)
    on right: 59 66 69 70 71 198 276 277
    on left : 186 187
  expression (186)
    on right: 60 61 62 73 88 93 103 104 105 109 113 116 142 143 203 204 205 206 207 249 275
    on left : 243 244
  wait_modifier (187)
    on right: 61 62
    on left : 63 64
  timeout_modifier (188)
    on right: 63
    on left : 65
  after_modifier (189)
    on right: 64
    on left : 66
  swallow_newlines (190)
    on right: 65 66 131 150 151 156 157 158 159 160 161 162 163 164 165 224 228 229 230 231 232 233 327
    on left : 324 325
  label (191)
    on right: 65 102 163 200
    on left : 67
  group_statement (192)
    on right: 71 229
    on left : 68
  integer (193)
    on right: 68 117 181 235 282
    on left : 284
  optional_arg (194)
    on right: 72
    on left : 188 189 190
  function_call (195)
    on right: 76 78
    on left : 74 75
  namespaces (196)
    on right: 75 219 241
    on left : 240 241
  basic_program_call (197)
    on right: 77 248
    on left : 76
  args (198)
    on right: 76 78 79 81
    on left : 80 81 82
  program_call (199)
    on right: 139 147 191
    on left : 77 78 79
  arg (200)
    on right: 80 81
    on left : 83 84 85 86 87 88
  number (201)
    on right: 83 98 135 186 188 195 197 264 286 315
    on left : 282 283
  signed_number (202)
    on right: 84 265 287 314
    on left : 278 279
  var (203)
    on right: 85 99 114 115 118 131 136 182 184 187 189 194 196 213 214 267 280 316
    on left : 215 216
  string (204)
    on right: 86 288
    on left : 95
  program_vars (205)
    on right: 90 127 128 129 130
    on left : 89 90 91
  program_var (206)
    on right: 89 90
    on left : 92
  io_method (207)
    on right: 146 192
    on left : 96 97 98
  indirect_thing (208)
    on right: 100 270
    on left : 276 277
  jump (209)
    on right: 140 144
    on left : 102
  elsif_conditions (210)
    on right: 103 107
    on left : 106 107 108
  else_block (211)
    on right: 103 104 105
    on left : 148 149
  elsif_block (212)
    on right: 105 111
    on left : 110 111 112
  elsif_condition (213)
    on right: 106 107
    on left : 109
  elsif_block_condition (214)
    on right: 110 111
    on left : 113
  int_or_var (215)
    on right: 114 115 157 165
    on left : 117 118
  word_list (216)
    on right: 120 123 124 125
    on left : 119 120
  word_tuple (217)
    on right: 119 120
    on left : 121 122
  case_conditions (218)
    on right: 131 133
    on left : 132 133
  case_else (219)
    on right: 131
    on left : 137 138
  case_condition (220)
    on right: 132 133
    on left : 134
  case_allowed_condition (221)
    on right: 134
    on left : 135 136
  case_allowed_statement (222)
    on right: 
    on left : 139 140
  inlineable (223)
    on right: 141 142 143
    on left : 144 145 146 147
  assignment (224)
    on right: 145 193
    on left : 203 204 205 206 207
  motion_modifiers (225)
    on right: 150 151 153
    on left : 152 153
  motion_modifier (226)
    on right: 152 153
    on left : 156 157 158 159 160 161 162 163 164 165
  motion_arguements (227)
    on right: 158
    on left : 154 155
  valid_terminations (228)
    on right: 154 155 159
    on left : 181 182 183
  speed (229)
    on right: 156
    on left : 198 199
  time (230)
    on right: 161
    on left : 194 195
  seg_actions (231)
    on right: 161 162
    on left : 191 192 193
  distance (232)
    on right: 162
    on left : 196 197
  optional_lpos_arg (233)
    on right: 163
    on left : 184 185
  valid_motion_statements (234)
    on right: 164
    on left : 166 167 168 169 170 171 172 173
  single_argument_motion_modifiers (235)
    on right: 165
    on left : 174 175 176 177 178 179 180
  definable (236)
    on right: 201 202
    on left : 285 286 287 288 289 290 291
  var_method_modifiers (237)
    on right: 208 210 218 221 277
    on left : 220 221
  array (238)
    on right: 208 209 210 336
    on left : 342
  assignable_range (239)
    on right: 210 211 212
    on left : 213 214
  pose_range_modifiers (240)
    on right: 212 223
    on left : 222 223
  var_without_namespaces (241)
    on right: 215 219
    on left : 217 218
  var_with_namespaces (242)
    on right: 216
    on left : 219
  var_method_modifier (243)
    on right: 220 221
    on left : 228 229 230 231 232 233
  pose_range_modifier (244)
    on right: 222 223
    on left : 224
  coord_system (245)
    on right: 232
    on left : 225 226 227
  var_system_modifers (246)
    on right: 234 235 237
    on left : 236 237 238
  var_system_modifer (247)
    on right: 236 237
    on left : 239
  ns (248)
    on right: 240 241
    on left : 242
  unary_expression (249)
    on right: 243
    on left : 245 246 247 248
  binary_expression (250)
    on right: 244
    on left : 249
  factor (251)
    on right: 245 247
    on left : 264 265 266 267 268 269 270 271 272
  operator (252)
    on right: 249
    on left : 250 251 252 253 254 255 256 257 258 259 260 261 262 263
  operation (253)
    on right: 266
    on left : 312 313 314 315
  signed_var (254)
    on right: 268
    on left : 280
  paren_expr (255)
    on right: 271
    on left : 275
  booleans (256)
    on right: 272 290
    on left : 273 274
  sign (257)
    on right: 278 279 280 340
    on left : 281
  reg (258)
    on right: 285
    on left : 304
  framereg (259)
    on right: 289
    on left : 307
  localvars (260)
    on right: 291
    on left : 311
  definable_range (261)
    on right: 304
    on left : 292 293
  reg_types (262)
    on right: 304
    on left : 294 295 296 297 298 299 300 301 302 303
  frametype (263)
    on right: 307
    on left : 305 306
  local_types (264)
    on right: 311
    on left : 308 309 310
  hash (265)
    on right: 326 335
    on left : 328 329
  hash_attributes (266)
    on right: 328 331
    on left : 330 331
  hash_attribute (267)
    on right: 330 331
    on left : 332
  optional_sign (268)
    on right: 337 338
    on left : 340 341
  array_values (269)
    on right: 342 344
    on left : 343 344
  array_value (270)
    on right: 343 344
    on left : 345

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 201 202
  AT_SYM (3) 
  COMMENT (4) 317
  MESSAGE (5) 318
  WARNING (6) 319
  JUMP (7) 102
  IO_METHOD (8) 96 97 98
  INPUT (9) 302
  OUTPUT (10) 303
  NUMREG (11) 300
  POSREG (12) 301
  VREG (13) 298
  SREG (14) 294
  TIME_SEGMENT (15) 161
  DISTANCE_SEGMENT (16) 162
  ARG (17) 297
  UALM (18) 295
  TOOLREG (19) 305
  FRAMEREG (20) 306
  MOVE (21) 150 151
  DOT (22) 61 62 150 151 156 157 158 159 160 161 162 163 164 165 224 228 229 230 231 232 233 239
  TO (23) 114 150 151
  DOWNTO (24) 115
  MID (25) 151
  AT (26) 156
  ACC (27) 157
  TERM (28) 159
  OFFSET (29) 160 231
  SKIP (30) 163
  GROUP (31) 68
  COORD (32) 166
  MROT (33) 167
  PTH (34) 168
  WJNT (35) 170
  INC (36) 169
  BREAK (37) 171
  RTCP (38) 172
  FPLIN (39) 173
  AP_LD (40) 178
  RT_LD (41) 177
  CD (42) 174
  CR (43) 158
  INDEV (44) 176
  EV (45) 175
  PSPD (46) 179
  CTV (47) 180
  SEMICOLON (48) 
  NEWLINE (49) 5 6 45 320 324
  STRING (50) 47 58 59 66 95 98 198 199 276 277 318 319 332 333
  REAL (51) 279 283 338
  DIGIT (52) 183 278 284 292 293 307 337
  WORD (53) 54 74 75 92 121 122 126 127 128 129 130 202 217 218 228 234 235 242 334
  EQUAL (54) 46 55 203 204 205 206 207 211 212
  RANGE (55) 213 292
  EEQUAL (56) 250
  NOTEQUAL (57) 251
  GTE (58) 254
  LTE (59) 255
  LT (60) 252
  GT (61) 253
  BANG (62) 247
  PLUS (63) 204 256
  MINUS (64) 183 205 257 281
  STAR (65) 206 259
  SLASH (66) 207 260
  DIV (67) 261
  AND (68) 263
  OR (69) 258
  MOD (70) 262
  IF (71) 103 105 142
  THEN (72) 105 113
  ELSE (73) 137 148
  ELSIF (74) 109 113
  END (75) 103 104 105 114 115 116 126 127 128 129 130 131 326
  UNLESS (76) 104 143
  FOR (77) 114 115
  IN (78) 114 115
  WHILE (79) 116
  WAIT_FOR (80) 59
  WAIT_UNTIL (81) 60 61 62
  TIMEOUT (82) 65
  AFTER (83) 66
  FANUC_USE (84) 69 70 71
  COLL_GUARD (85) 72
  SET_SKIP_CONDITION (86) 73
  NAMESPACE (87) 126
  CASE (88) 131
  WHEN (89) 134
  INDIRECT (90) 276 277
  POSITION (91) 299
  EVAL (92) 58
  TIMER (93) 296
  TIMER_METHOD (94) 57
  RAISE (95) 56
  ABORT (96) 35
  RETURN (97) 93 94
  POSITION_DATA (98) 326
  TRUE_FALSE (99) 48 273 339
  ON_OFF (100) 49 274
  CALL (101) 79
  RUN (102) 78
  PAUSE (103) 34
  TP_HEADER (104) 46
  TP_APPLICATION_TYPE (105) 55
  LPAREN (106) 43 44 59 60 61 62 65 66 68 70 71 76 78 79 93 97 98 114 115 127 128 129 130 150 151 156 157 158 159 160 161 162 163 165 210 212 275 276 277 318 319
  RPAREN (107) 43 44 59 60 61 62 65 66 68 70 71 76 78 79 93 97 98 114 115 127 128 129 130 150 151 156 157 158 159 160 161 162 163 165 210 212 275 276 277 318 319
  COLON (108) 54 128 130 242 332
  COMMA (109) 53 59 66 71 81 90 98 121 155 161 162 184 198 276 277 313 331 344
  LBRACK (110) 235 304 307 311 312 313 314 315 342
  RBRACK (111) 235 304 307 311 312 313 314 315 342
  LBRACE (112) 50 51 328 329
  RBRACE (113) 50 51 328 329
  LABEL (114) 67
  SYSTEM (115) 234 235
  ADDRESS (116) 316
  LPOS (117) 43
  JPOS (118) 44
  false (119) 322
  FUNCTION (120) 127 128 129 130
  OPERATION (121) 312 313 314 315
  USING (122) 123
  IMPORT (123) 124 125
  COMPILE (124) 124
  INLINE (125) 127 128
  ARROW (126) 208 209 210
  DEFAULTPOS (127) 208
  POSEATTR (128) 230
  POSEREVERSE (129) 224
  SPHERE (130) 225
  POLAR (131) 226
  ORIGIN (132) 227
  FIX (133) 233
  LOCALSTACK (134) 201
  LOCALREG (135) 308
  LOCALPOSE (136) 309
  LOCALFLAG (137) 310

--------- State ---------

state 0


  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 1


  $end          shift, and go to state 97


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 1 (program)

  statement     go to state 98
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 93
  COMMENT       [reduce using rule 323 (terminator)]
  NEWLINE       shift, and go to state 100
  NEWLINE       [reduce using rule 323 (terminator)]
  false         shift, and go to state 102
  $default      reduce using rule 323 (terminator)

  terminator    go to state 99
  comment       go to state 101

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 101) var_or_indirect : var_system _

  EQUAL         reduce using rule 101 (var_or_indirect)
  PLUS          reduce using rule 101 (var_or_indirect)
  MINUS         reduce using rule 101 (var_or_indirect)
  STAR          reduce using rule 101 (var_or_indirect)
  SLASH         reduce using rule 101 (var_or_indirect)
  ARROW         reduce using rule 101 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 103


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 104


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 105


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 106


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 107
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 112
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 113


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 114


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 115


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  69) use_statement : FANUC_USE _ indirectable
  70) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  71) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  LPAREN        shift, and go to state 117

  indirectable  go to state 116
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 51

  72) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  WORD          [reduce using rule 190 (optional_arg)]
  $default      reduce using rule 190 (optional_arg)

  optional_arg  go to state 123
  number        go to state 124
  var           go to state 125
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 52

  73) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  expression    go to state 126
  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 53

  74) function_call : WORD _
 202) definition : WORD _ ASSIGN definable
 217) var_without_namespaces : WORD _
 218) var_without_namespaces : WORD _ var_method_modifiers
 242) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 149
  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 74 (function_call)
  $default      reduce using rule 217 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 54

  75) function_call : namespaces _ WORD
 219) var_with_namespaces : namespaces _ var_without_namespaces
 241) namespaces : namespaces _ ns

  WORD          shift, and go to state 154

  var_without_namespaces  go to state 155
  ns            go to state 156

state 55

  76) basic_program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 157


state 56

  77) program_call : basic_program_call _

  $default      reduce using rule 77 (program_call)


state 57

  78) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 158

  namespaces    go to state 159
  function_call  go to state 160
  ns            go to state 90

state 58

  79) program_call : CALL _ var_or_indirect LPAREN args RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 161
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 59

  93) return_statement : RETURN _ LPAREN expression RPAREN
  94) return_statement : RETURN _

  LPAREN        shift, and go to state 162
  LPAREN        [reduce using rule 94 (return_statement)]
  $default      reduce using rule 94 (return_statement)


state 60

  96) io_method : IO_METHOD _ var_or_indirect
  97) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
  98) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  LPAREN        shift, and go to state 164
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 163
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 61

  99) var_or_indirect : var _
 213) assignable_range : var _ RANGE var
 214) assignable_range : var _

  RANGE         shift, and go to state 165
  EQUAL         [reduce using rule 214 (assignable_range)]
  $default      reduce using rule 99 (var_or_indirect)


state 62

 100) var_or_indirect : indirect_thing _

  $default      reduce using rule 100 (var_or_indirect)


state 63

 102) jump : JUMP _ label

  LABEL         shift, and go to state 49

  label         go to state 166

state 64

 103) conditional : IF _ expression block elsif_conditions else_block END
 105) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 167
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 65

 104) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 168
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 66

 114) forloop : FOR _ var IN LPAREN int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR _ var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  WORD          shift, and go to state 110

  var           go to state 169
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 67

 116) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 170
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 68

 123) using_statement : USING _ word_list

  WORD          shift, and go to state 174
  COMMA         shift, and go to state 173

  word_tuple    go to state 171
  word_list     go to state 172

state 69

 124) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 175


state 70

 125) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 174
  COMMA         shift, and go to state 173

  word_tuple    go to state 171
  word_list     go to state 176

state 71

 126) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 177


state 72

 127) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 128) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 178


state 73

 129) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 130) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 179


state 74

 131) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 110

  var           go to state 180
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 75

 141) inline_conditional : inlineable _
 142) inline_conditional : inlineable _ IF expression
 143) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 181
  IF            [reduce using rule 141 (inline_conditional)]
  UNLESS        shift, and go to state 182
  UNLESS        [reduce using rule 141 (inline_conditional)]
  $default      reduce using rule 141 (inline_conditional)


state 76

 144) inlineable : jump _

  $default      reduce using rule 144 (inlineable)


state 77

 145) inlineable : assignment _

  $default      reduce using rule 145 (inlineable)


state 78

 146) inlineable : io_method _

  $default      reduce using rule 146 (inlineable)


state 79

 147) inlineable : program_call _

  $default      reduce using rule 147 (inlineable)


state 80

 150) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 151) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 183


state 81

 200) label_definition : label _

  $default      reduce using rule 200 (label_definition)


state 82

 201) definition : LOCALSTACK _ ASSIGN definable

  ASSIGN        shift, and go to state 184


state 83

 203) assignment : var_or_indirect _ EQUAL expression
 204) assignment : var_or_indirect _ PLUS EQUAL expression
 205) assignment : var_or_indirect _ MINUS EQUAL expression
 206) assignment : var_or_indirect _ STAR EQUAL expression
 207) assignment : var_or_indirect _ SLASH EQUAL expression
 209) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 185
  PLUS          shift, and go to state 186
  MINUS         shift, and go to state 187
  STAR          shift, and go to state 188
  SLASH         shift, and go to state 189
  ARROW         shift, and go to state 190


state 84

 208) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 152

  var_method_modifiers  go to state 191
  var_method_modifier  go to state 151

state 85

 210) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 110

  assignable_range  go to state 192
  var           go to state 193
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 86

 211) position_assignment : assignable_range _ EQUAL assignable_range
 212) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 194


state 87

 215) var : var_without_namespaces _

  $default      reduce using rule 215 (var)


state 88

 216) var : var_with_namespaces _

  $default      reduce using rule 216 (var)


state 89

 234) var_system : SYSTEM _ WORD var_system_modifers
 235) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 195


state 90

 240) namespaces : ns _

  $default      reduce using rule 240 (namespaces)


state 91

 276) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 277) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 196


state 92

 316) address : ADDRESS _ var

  WORD          shift, and go to state 110

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var           go to state 197

state 93

 317) comment : COMMENT _

  $default      reduce using rule 317 (comment)


state 94

 318) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 198


state 95

 319) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 199


state 96

 326) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  sn            go to state 201
  swallow_newlines  go to state 202

state 97


  $end          shift, and go to state 203


state 98

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 93
  COMMENT       [reduce using rule 323 (terminator)]
  NEWLINE       shift, and go to state 100
  NEWLINE       [reduce using rule 323 (terminator)]
  false         shift, and go to state 102
  $default      reduce using rule 323 (terminator)

  terminator    go to state 204
  comment       go to state 101

state 99

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 100

 320) terminator : NEWLINE _

  $default      reduce using rule 320 (terminator)


state 101

 321) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 205
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 206

state 102

 322) terminator : false _

  $default      reduce using rule 322 (terminator)


state 103

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 207
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 104

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 208
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 105

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 210
  TRUE_FALSE    shift, and go to state 211
  ON_OFF        shift, and go to state 212

  tp_header_value  go to state 209

state 106

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  sn            go to state 213
  swallow_newlines  go to state 202

state 107

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 108

  99) var_or_indirect : var _

  $default      reduce using rule 99 (var_or_indirect)


state 109

 101) var_or_indirect : var_system _

  $default      reduce using rule 101 (var_or_indirect)


state 110

 217) var_without_namespaces : WORD _
 218) var_without_namespaces : WORD _ var_method_modifiers
 242) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  $default      reduce using rule 217 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 111

 219) var_with_namespaces : namespaces _ var_without_namespaces
 241) namespaces : namespaces _ ns

  WORD          shift, and go to state 110

  var_without_namespaces  go to state 155
  ns            go to state 156

state 112

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 113

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 114

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 214
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 115

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  expression    go to state 215
  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 116

  69) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 69 (use_statement)


state 117

  70) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  71) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 216
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 118

 186) indirectable : number _

  $default      reduce using rule 186 (indirectable)


state 119

 187) indirectable : var _

  $default      reduce using rule 187 (indirectable)


state 120

 282) number : integer _

  $default      reduce using rule 282 (number)


state 121

 283) number : REAL _

  $default      reduce using rule 283 (number)


state 122

 284) integer : DIGIT _

  $default      reduce using rule 284 (integer)


state 123

  72) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 72 (collguard_statement)


state 124

 188) optional_arg : number _

  $default      reduce using rule 188 (optional_arg)


state 125

 189) optional_arg : var _

  $default      reduce using rule 189 (optional_arg)


state 126

  73) set_skip_statement : SET_SKIP_CONDITION expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 73 (set_skip_statement)

  operator      go to state 217

state 127

  74) function_call : WORD _
 217) var_without_namespaces : WORD _
 218) var_without_namespaces : WORD _ var_method_modifiers
 242) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 74 (function_call)
  LPAREN        [reduce using rule 217 (var_without_namespaces)]
  $default      reduce using rule 217 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 128

 243) expression : unary_expression _

  $default      reduce using rule 243 (expression)


state 129

 244) expression : binary_expression _

  $default      reduce using rule 244 (expression)


state 130

 245) unary_expression : factor _

  $default      reduce using rule 245 (unary_expression)


state 131

 246) unary_expression : address _

  $default      reduce using rule 246 (unary_expression)


state 132

 247) unary_expression : BANG _ factor

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  OPERATION     shift, and go to state 148

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  factor        go to state 232
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 133

 248) unary_expression : basic_program_call _

  $default      reduce using rule 248 (unary_expression)


state 134

 264) factor : number _

  $default      reduce using rule 264 (factor)


state 135

 265) factor : signed_number _

  $default      reduce using rule 265 (factor)


state 136

 266) factor : operation _

  $default      reduce using rule 266 (factor)


state 137

 267) factor : var _

  $default      reduce using rule 267 (factor)


state 138

 268) factor : signed_var _

  $default      reduce using rule 268 (factor)


state 139

 269) factor : var_system _

  $default      reduce using rule 269 (factor)


state 140

 270) factor : indirect_thing _

  $default      reduce using rule 270 (factor)


state 141

 271) factor : paren_expr _

  $default      reduce using rule 271 (factor)


state 142

 272) factor : booleans _

  $default      reduce using rule 272 (factor)


state 143

 273) booleans : TRUE_FALSE _

  $default      reduce using rule 273 (booleans)


state 144

 274) booleans : ON_OFF _

  $default      reduce using rule 274 (booleans)


state 145

 275) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  expression    go to state 233
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 146

 278) signed_number : sign _ DIGIT
 279) signed_number : sign _ REAL
 280) signed_var : sign _ var

  REAL          shift, and go to state 235
  DIGIT         shift, and go to state 234
  WORD          shift, and go to state 110

  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var           go to state 236

state 147

 281) sign : MINUS _

  $default      reduce using rule 281 (sign)


state 148

 312) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 313) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 314) operation : OPERATION _ LBRACK signed_number RBRACK
 315) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 237


state 149

 202) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 256
  OUTPUT        shift, and go to state 257
  NUMREG        shift, and go to state 254
  POSREG        shift, and go to state 255
  VREG          shift, and go to state 252
  SREG          shift, and go to state 248
  ARG           shift, and go to state 251
  UALM          shift, and go to state 249
  TOOLREG       shift, and go to state 259
  FRAMEREG      shift, and go to state 260
  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  MINUS         shift, and go to state 147
  POSITION      shift, and go to state 253
  TIMER         shift, and go to state 250
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LOCALREG      shift, and go to state 262
  LOCALPOSE     shift, and go to state 263
  LOCALFLAG     shift, and go to state 264

  definable     go to state 239
  sign          go to state 240
  integer       go to state 120
  reg           go to state 241
  number        go to state 242
  signed_number  go to state 243
  string        go to state 244
  framereg      go to state 245
  booleans      go to state 246
  localvars     go to state 247
  reg_types     go to state 258
  frametype     go to state 261
  local_types   go to state 265

state 150

 218) var_without_namespaces : WORD var_method_modifiers _
 221) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  $default      reduce using rule 218 (var_without_namespaces)

  var_method_modifier  go to state 266

state 151

 220) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 220 (var_method_modifiers)


state 152

 228) var_method_modifier : DOT _ swallow_newlines WORD
 229) var_method_modifier : DOT _ swallow_newlines group_statement
 230) var_method_modifier : DOT _ swallow_newlines POSEATTR
 231) var_method_modifier : DOT _ swallow_newlines OFFSET
 232) var_method_modifier : DOT _ swallow_newlines coord_system
 233) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 267

state 153

 242) ns : WORD COLON _ COLON

  COLON         shift, and go to state 268


state 154

  75) function_call : namespaces WORD _
 217) var_without_namespaces : WORD _
 218) var_without_namespaces : WORD _ var_method_modifiers
 242) ns : WORD _ COLON COLON

  DOT           shift, and go to state 152
  COLON         shift, and go to state 153
  LPAREN        reduce using rule 75 (function_call)
  LPAREN        [reduce using rule 217 (var_without_namespaces)]
  $default      reduce using rule 217 (var_without_namespaces)

  var_method_modifiers  go to state 150
  var_method_modifier  go to state 151

state 155

 219) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 219 (var_with_namespaces)


state 156

 241) namespaces : namespaces ns _

  $default      reduce using rule 241 (namespaces)


state 157

  76) basic_program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148
  $default      reduce using rule 82 (args)

  namespaces    go to state 54
  function_call  go to state 55
  args          go to state 269
  arg           go to state 270
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  expression    go to state 276
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 158

  74) function_call : WORD _
 242) ns : WORD _ COLON COLON

  COLON         shift, and go to state 153
  $default      reduce using rule 74 (function_call)


state 159

  75) function_call : namespaces _ WORD
 241) namespaces : namespaces _ ns

  WORD          shift, and go to state 277

  ns            go to state 156

state 160

  78) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 278


state 161

  79) program_call : CALL var_or_indirect _ LPAREN args RPAREN

  LPAREN        shift, and go to state 279


state 162

  93) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 280
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 163

  96) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 96 (io_method)


state 164

  97) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
  98) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var_or_indirect  go to state 281
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 165

 213) assignable_range : var RANGE _ var

  WORD          shift, and go to state 110

  var           go to state 282
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 166

 102) jump : JUMP label _

  $default      reduce using rule 102 (jump)


state 167

 103) conditional : IF expression _ block elsif_conditions else_block END
 105) conditional_block : IF expression _ THEN block elsif_block else_block END
 249) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 283
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  THEN          shift, and go to state 285

  block         go to state 284
  operator      go to state 217

state 168

 104) conditional : UNLESS expression _ block else_block END
 249) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 283
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230

  block         go to state 286
  operator      go to state 217

state 169

 114) forloop : FOR var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 287


state 170

 116) while_loop : WHILE expression _ block END
 249) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 283
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230

  block         go to state 288
  operator      go to state 217

state 171

 119) word_list : word_tuple _

  $default      reduce using rule 119 (word_list)


state 172

 120) word_list : word_list _ word_tuple
 123) using_statement : USING word_list _

  WORD          shift, and go to state 174
  WORD          [reduce using rule 123 (using_statement)]
  COMMA         shift, and go to state 173
  $default      reduce using rule 123 (using_statement)

  word_tuple    go to state 289

state 173

 121) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 290


state 174

 122) word_tuple : WORD _

  $default      reduce using rule 122 (word_tuple)


state 175

 124) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 174
  COMMA         shift, and go to state 173

  word_tuple    go to state 171
  word_list     go to state 291

state 176

 120) word_list : word_list _ word_tuple
 125) import_statement : IMPORT word_list _

  WORD          shift, and go to state 174
  WORD          [reduce using rule 125 (import_statement)]
  COMMA         shift, and go to state 173
  $default      reduce using rule 125 (import_statement)

  word_tuple    go to state 289

state 177

 126) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 283

  block         go to state 292

state 178

 127) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 128) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 293


state 179

 129) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 130) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 294


state 180

 131) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 295

state 181

 142) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 296
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 182

 143) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 297
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 183

 150) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 151) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 298

state 184

 201) definition : LOCALSTACK ASSIGN _ definable

  INPUT         shift, and go to state 256
  OUTPUT        shift, and go to state 257
  NUMREG        shift, and go to state 254
  POSREG        shift, and go to state 255
  VREG          shift, and go to state 252
  SREG          shift, and go to state 248
  ARG           shift, and go to state 251
  UALM          shift, and go to state 249
  TOOLREG       shift, and go to state 259
  FRAMEREG      shift, and go to state 260
  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  MINUS         shift, and go to state 147
  POSITION      shift, and go to state 253
  TIMER         shift, and go to state 250
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LOCALREG      shift, and go to state 262
  LOCALPOSE     shift, and go to state 263
  LOCALFLAG     shift, and go to state 264

  definable     go to state 299
  sign          go to state 240
  integer       go to state 120
  reg           go to state 241
  number        go to state 242
  signed_number  go to state 243
  string        go to state 244
  framereg      go to state 245
  booleans      go to state 246
  localvars     go to state 247
  reg_types     go to state 258
  frametype     go to state 261
  local_types   go to state 265

state 185

 203) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 300
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 186

 204) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 301


state 187

 205) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 302


state 188

 206) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 303


state 189

 207) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 304


state 190

 209) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 306

  array         go to state 305

state 191

 208) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 221) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  ARROW         shift, and go to state 307

  var_method_modifier  go to state 266

state 192

 210) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 308


state 193

 213) assignable_range : var _ RANGE var
 214) assignable_range : var _

  RANGE         shift, and go to state 165
  $default      reduce using rule 214 (assignable_range)


state 194

 211) position_assignment : assignable_range EQUAL _ assignable_range
 212) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 110
  LPAREN        shift, and go to state 310

  assignable_range  go to state 309
  var           go to state 193
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 195

 234) var_system : SYSTEM WORD _ var_system_modifers
 235) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 314
  DOT           [reduce using rule 238 (var_system_modifers)]
  LBRACK        shift, and go to state 312
  $default      reduce using rule 238 (var_system_modifers)

  var_system_modifers  go to state 311
  var_system_modifer  go to state 313

state 196

 276) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 277) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 315


state 197

 316) address : ADDRESS var _

  $default      reduce using rule 316 (address)


state 198

 318) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 316


state 199

 319) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 317


state 200

 324) swallow_newlines : NEWLINE _

  $default      reduce using rule 324 (swallow_newlines)


state 201

 326) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 319

  hash          go to state 318

state 202

 327) sn : swallow_newlines _

  $default      reduce using rule 327 (sn)


state 203


  $default      accept


state 204

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 205

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 206

 321) terminator : comment optional_newline _

  $default      reduce using rule 321 (terminator)


state 207

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 320


state 208

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 321


state 209

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 210

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 211

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 212

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 213

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 322

  tp_tool_methods  go to state 323

state 214

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 324


state 215

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  RPAREN        shift, and go to state 325

  operator      go to state 217

state 216

  70) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  71) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 326
  COMMA         shift, and go to state 327


state 217

 249) binary_expression : expression operator _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  expression    go to state 328
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 218

 250) operator : EEQUAL _

  $default      reduce using rule 250 (operator)


state 219

 251) operator : NOTEQUAL _

  $default      reduce using rule 251 (operator)


state 220

 252) operator : LT _

  $default      reduce using rule 252 (operator)


state 221

 253) operator : GT _

  $default      reduce using rule 253 (operator)


state 222

 254) operator : GTE _

  $default      reduce using rule 254 (operator)


state 223

 255) operator : LTE _

  $default      reduce using rule 255 (operator)


state 224

 256) operator : PLUS _

  $default      reduce using rule 256 (operator)


state 225

 257) operator : MINUS _

  $default      reduce using rule 257 (operator)


state 226

 258) operator : OR _

  $default      reduce using rule 258 (operator)


state 227

 259) operator : STAR _

  $default      reduce using rule 259 (operator)


state 228

 260) operator : SLASH _

  $default      reduce using rule 260 (operator)


state 229

 261) operator : DIV _

  $default      reduce using rule 261 (operator)


state 230

 262) operator : MOD _

  $default      reduce using rule 262 (operator)


state 231

 263) operator : AND _

  $default      reduce using rule 263 (operator)


state 232

 247) unary_expression : BANG factor _

  $default      reduce using rule 247 (unary_expression)


state 233

 249) binary_expression : expression _ operator expression
 275) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  RPAREN        shift, and go to state 329

  operator      go to state 217

state 234

 278) signed_number : sign DIGIT _

  $default      reduce using rule 278 (signed_number)


state 235

 279) signed_number : sign REAL _

  $default      reduce using rule 279 (signed_number)


state 236

 280) signed_var : sign var _

  $default      reduce using rule 280 (signed_var)


state 237

 312) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 313) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 314) operation : OPERATION LBRACK _ signed_number RBRACK
 315) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  sign          go to state 240
  integer       go to state 120
  var_or_indirect  go to state 330
  signed_number  go to state 331
  number        go to state 332

state 238

  95) string : STRING _

  $default      reduce using rule 95 (string)


state 239

 202) definition : WORD ASSIGN definable _

  $default      reduce using rule 202 (definition)


state 240

 278) signed_number : sign _ DIGIT
 279) signed_number : sign _ REAL

  REAL          shift, and go to state 235
  DIGIT         shift, and go to state 234


state 241

 285) definable : reg _

  $default      reduce using rule 285 (definable)


state 242

 286) definable : number _

  $default      reduce using rule 286 (definable)


state 243

 287) definable : signed_number _

  $default      reduce using rule 287 (definable)


state 244

 288) definable : string _

  $default      reduce using rule 288 (definable)


state 245

 289) definable : framereg _

  $default      reduce using rule 289 (definable)


state 246

 290) definable : booleans _

  $default      reduce using rule 290 (definable)


state 247

 291) definable : localvars _

  $default      reduce using rule 291 (definable)


state 248

 294) reg_types : SREG _

  $default      reduce using rule 294 (reg_types)


state 249

 295) reg_types : UALM _

  $default      reduce using rule 295 (reg_types)


state 250

 296) reg_types : TIMER _

  $default      reduce using rule 296 (reg_types)


state 251

 297) reg_types : ARG _

  $default      reduce using rule 297 (reg_types)


state 252

 298) reg_types : VREG _

  $default      reduce using rule 298 (reg_types)


state 253

 299) reg_types : POSITION _

  $default      reduce using rule 299 (reg_types)


state 254

 300) reg_types : NUMREG _

  $default      reduce using rule 300 (reg_types)


state 255

 301) reg_types : POSREG _

  $default      reduce using rule 301 (reg_types)


state 256

 302) reg_types : INPUT _

  $default      reduce using rule 302 (reg_types)


state 257

 303) reg_types : OUTPUT _

  $default      reduce using rule 303 (reg_types)


state 258

 304) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 333


state 259

 305) frametype : TOOLREG _

  $default      reduce using rule 305 (frametype)


state 260

 306) frametype : FRAMEREG _

  $default      reduce using rule 306 (frametype)


state 261

 307) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 334


state 262

 308) local_types : LOCALREG _

  $default      reduce using rule 308 (local_types)


state 263

 309) local_types : LOCALPOSE _

  $default      reduce using rule 309 (local_types)


state 264

 310) local_types : LOCALFLAG _

  $default      reduce using rule 310 (local_types)


state 265

 311) localvars : local_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 335


state 266

 221) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 221 (var_method_modifiers)


state 267

 228) var_method_modifier : DOT swallow_newlines _ WORD
 229) var_method_modifier : DOT swallow_newlines _ group_statement
 230) var_method_modifier : DOT swallow_newlines _ POSEATTR
 231) var_method_modifier : DOT swallow_newlines _ OFFSET
 232) var_method_modifier : DOT swallow_newlines _ coord_system
 233) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 343
  GROUP         shift, and go to state 336
  WORD          shift, and go to state 340
  POSEATTR      shift, and go to state 342
  SPHERE        shift, and go to state 337
  POLAR         shift, and go to state 338
  ORIGIN        shift, and go to state 339
  FIX           shift, and go to state 345

  group_statement  go to state 341
  coord_system  go to state 344

state 268

 242) ns : WORD COLON COLON _

  $default      reduce using rule 242 (ns)


state 269

  76) basic_program_call : function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 346
  COMMA         shift, and go to state 347


state 270

  80) args : arg _

  $default      reduce using rule 80 (args)


state 271

  83) arg : number _
 264) factor : number _

  RPAREN        reduce using rule 83 (arg)
  RPAREN        [reduce using rule 264 (factor)]
  COMMA         reduce using rule 83 (arg)
  COMMA         [reduce using rule 264 (factor)]
  $default      reduce using rule 264 (factor)


state 272

  84) arg : signed_number _
 265) factor : signed_number _

  RPAREN        reduce using rule 84 (arg)
  RPAREN        [reduce using rule 265 (factor)]
  COMMA         reduce using rule 84 (arg)
  COMMA         [reduce using rule 265 (factor)]
  $default      reduce using rule 265 (factor)


state 273

  85) arg : var _
 267) factor : var _

  RPAREN        reduce using rule 85 (arg)
  RPAREN        [reduce using rule 267 (factor)]
  COMMA         reduce using rule 85 (arg)
  COMMA         [reduce using rule 267 (factor)]
  $default      reduce using rule 267 (factor)


state 274

  86) arg : string _

  $default      reduce using rule 86 (arg)


state 275

  87) arg : address _
 246) unary_expression : address _

  RPAREN        reduce using rule 87 (arg)
  RPAREN        [reduce using rule 246 (unary_expression)]
  COMMA         reduce using rule 87 (arg)
  COMMA         [reduce using rule 246 (unary_expression)]
  $default      reduce using rule 246 (unary_expression)


state 276

  88) arg : expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 88 (arg)

  operator      go to state 217

state 277

  75) function_call : namespaces WORD _
 242) ns : WORD _ COLON COLON

  COLON         shift, and go to state 153
  $default      reduce using rule 75 (function_call)


state 278

  78) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148
  $default      reduce using rule 82 (args)

  namespaces    go to state 54
  function_call  go to state 55
  args          go to state 348
  arg           go to state 270
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  expression    go to state 276
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 279

  79) program_call : CALL var_or_indirect LPAREN _ args RPAREN

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148
  $default      reduce using rule 82 (args)

  namespaces    go to state 54
  function_call  go to state 55
  args          go to state 349
  arg           go to state 270
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  expression    go to state 276
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 280

  93) return_statement : RETURN LPAREN expression _ RPAREN
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  RPAREN        shift, and go to state 350

  operator      go to state 217

state 281

  97) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
  98) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 351
  COMMA         shift, and go to state 352


state 282

 213) assignable_range : var RANGE var _

  $default      reduce using rule 213 (assignable_range)


state 283

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82

  statement     go to state 3
  statements    go to state 353
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 284

 103) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 356
  ELSIF         [reduce using rule 108 (elsif_conditions)]
  $default      reduce using rule 108 (elsif_conditions)

  elsif_conditions  go to state 354
  elsif_condition  go to state 355

state 285

 105) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 283

  block         go to state 357

state 286

 104) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 359
  $default      reduce using rule 149 (else_block)

  else_block    go to state 358

state 287

 114) forloop : FOR var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 360


state 288

 116) while_loop : WHILE expression block _ END

  END           shift, and go to state 361


state 289

 120) word_list : word_list word_tuple _

  $default      reduce using rule 120 (word_list)


state 290

 121) word_tuple : COMMA WORD _

  $default      reduce using rule 121 (word_tuple)


state 291

 120) word_list : word_list _ word_tuple
 124) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 174
  WORD          [reduce using rule 124 (compile_statement)]
  COMMA         shift, and go to state 173
  $default      reduce using rule 124 (compile_statement)

  word_tuple    go to state 289

state 292

 126) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 362


state 293

 127) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 128) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 363


state 294

 129) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 130) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 366
  $default      reduce using rule 91 (program_vars)

  program_var   go to state 364
  program_vars  go to state 365

state 295

 131) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 369

  case_conditions  go to state 367
  case_condition  go to state 368

state 296

 142) inline_conditional : inlineable IF expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 142 (inline_conditional)

  operator      go to state 217

state 297

 143) inline_conditional : inlineable UNLESS expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 143 (inline_conditional)

  operator      go to state 217

state 298

 150) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 151) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 370
  MID           shift, and go to state 371


state 299

 201) definition : LOCALSTACK ASSIGN definable _

  $default      reduce using rule 201 (definition)


state 300

 203) assignment : var_or_indirect EQUAL expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 203 (assignment)

  operator      go to state 217

state 301

 204) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 372
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 302

 205) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 373
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 303

 206) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 374
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 304

 207) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 375
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 305

 209) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 209 (position_assignment)


state 306

 342) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 376

state 307

 208) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 306

  array         go to state 377

state 308

 210) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 152

  var_method_modifiers  go to state 378
  var_method_modifier  go to state 151

state 309

 211) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 211 (position_assignment)


state 310

 212) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 110

  assignable_range  go to state 379
  var           go to state 193
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 311

 234) var_system : SYSTEM WORD var_system_modifers _
 237) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 314
  DOT           [reduce using rule 234 (var_system)]
  $default      reduce using rule 234 (var_system)

  var_system_modifer  go to state 380

state 312

 235) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 122

  integer       go to state 381

state 313

 236) var_system_modifers : var_system_modifer _

  $default      reduce using rule 236 (var_system_modifers)


state 314

 239) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 89

  var_system    go to state 382

state 315

 276) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 277) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 383


state 316

 318) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 384


state 317

 319) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 385


state 318

 326) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  sn            go to state 386
  swallow_newlines  go to state 202

state 319

 328) hash : LBRACE _ sn hash_attributes sn RBRACE
 329) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 387

state 320

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 321

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 322

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  sn            go to state 388
  swallow_newlines  go to state 202

state 323

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 324

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 389


state 325

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 390
  $default      reduce using rule 60 (wait_statement)


state 326

  70) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 70 (use_statement)


state 327

  71) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 336

  group_statement  go to state 391

state 328

 249) binary_expression : expression _ operator expression
 249) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 218
  EEQUAL        [reduce using rule 249 (binary_expression)]
  NOTEQUAL      shift, and go to state 219
  NOTEQUAL      [reduce using rule 249 (binary_expression)]
  GTE           shift, and go to state 222
  GTE           [reduce using rule 249 (binary_expression)]
  LTE           shift, and go to state 223
  LTE           [reduce using rule 249 (binary_expression)]
  LT            shift, and go to state 220
  LT            [reduce using rule 249 (binary_expression)]
  GT            shift, and go to state 221
  GT            [reduce using rule 249 (binary_expression)]
  PLUS          shift, and go to state 224
  PLUS          [reduce using rule 249 (binary_expression)]
  MINUS         shift, and go to state 225
  MINUS         [reduce using rule 249 (binary_expression)]
  STAR          shift, and go to state 227
  STAR          [reduce using rule 249 (binary_expression)]
  SLASH         shift, and go to state 228
  SLASH         [reduce using rule 249 (binary_expression)]
  DIV           shift, and go to state 229
  DIV           [reduce using rule 249 (binary_expression)]
  AND           shift, and go to state 231
  AND           [reduce using rule 249 (binary_expression)]
  OR            shift, and go to state 226
  OR            [reduce using rule 249 (binary_expression)]
  MOD           shift, and go to state 230
  MOD           [reduce using rule 249 (binary_expression)]
  $default      reduce using rule 249 (binary_expression)

  operator      go to state 217

state 329

 275) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 275 (paren_expr)


state 330

 312) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 313) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 393
  RBRACK        shift, and go to state 392


state 331

 314) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 394


state 332

 315) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 395


state 333

 304) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 396

  definable_range  go to state 397

state 334

 307) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 398


state 335

 311) localvars : local_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 399


state 336

  68) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 400


state 337

 225) coord_system : SPHERE _

  $default      reduce using rule 225 (coord_system)


state 338

 226) coord_system : POLAR _

  $default      reduce using rule 226 (coord_system)


state 339

 227) coord_system : ORIGIN _

  $default      reduce using rule 227 (coord_system)


state 340

 228) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 228 (var_method_modifier)


state 341

 229) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 229 (var_method_modifier)


state 342

 230) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 230 (var_method_modifier)


state 343

 231) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 231 (var_method_modifier)


state 344

 232) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 232 (var_method_modifier)


state 345

 233) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 233 (var_method_modifier)


state 346

  76) basic_program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 76 (basic_program_call)


state 347

  81) args : args COMMA _ arg

  STRING        shift, and go to state 238
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  arg           go to state 401
  number        go to state 271
  signed_number  go to state 272
  var           go to state 273
  string        go to state 274
  address       go to state 275
  expression    go to state 276
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  basic_program_call  go to state 133
  operation     go to state 136
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 348

  78) program_call : RUN function_call LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 402
  COMMA         shift, and go to state 347


state 349

  79) program_call : CALL var_or_indirect LPAREN args _ RPAREN
  81) args : args _ COMMA arg

  RPAREN        shift, and go to state 403
  COMMA         shift, and go to state 347


state 350

  93) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 93 (return_statement)


state 351

  97) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 97 (io_method)


state 352

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122

  number        go to state 404
  integer       go to state 120

state 353

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 93
  MESSAGE       shift, and go to state 94
  WARNING       shift, and go to state 95
  JUMP          shift, and go to state 63
  IO_METHOD     shift, and go to state 60
  MOVE          shift, and go to state 80
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 53
  IF            shift, and go to state 64
  UNLESS        shift, and go to state 65
  FOR           shift, and go to state 66
  WHILE         shift, and go to state 67
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 50
  COLL_GUARD    shift, and go to state 51
  SET_SKIP_CONDITION  shift, and go to state 52
  NAMESPACE     shift, and go to state 71
  CASE          shift, and go to state 74
  INDIRECT      shift, and go to state 91
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 59
  POSITION_DATA  shift, and go to state 96
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 85
  LABEL         shift, and go to state 49
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 73
  USING         shift, and go to state 68
  IMPORT        shift, and go to state 70
  COMPILE       shift, and go to state 69
  INLINE        shift, and go to state 72
  DEFAULTPOS    shift, and go to state 84
  LOCALSTACK    shift, and go to state 82
  $default      reduce using rule 5 (block)

  statement     go to state 98
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 61
  indirect_thing  go to state 62
  inlineable    go to state 75
  jump          go to state 76
  assignment    go to state 77
  io_method     go to state 78
  program_call  go to state 79
  label         go to state 81
  var_or_indirect  go to state 83
  assignable_range  go to state 86
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 354

 103) conditional : IF expression block elsif_conditions _ else_block END
 107) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 359
  ELSIF         shift, and go to state 356
  $default      reduce using rule 149 (else_block)

  else_block    go to state 405
  elsif_condition  go to state 406

state 355

 106) elsif_conditions : elsif_condition _

  $default      reduce using rule 106 (elsif_conditions)


state 356

 109) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 407
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 357

 105) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 410
  ELSIF         [reduce using rule 112 (elsif_block)]
  $default      reduce using rule 112 (elsif_block)

  elsif_block   go to state 408
  elsif_block_condition  go to state 409

state 358

 104) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 411


state 359

 148) else_block : ELSE _ block

  NEWLINE       shift, and go to state 283

  block         go to state 412

state 360

 114) forloop : FOR var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 115) forloop : FOR var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  int_or_var    go to state 413
  integer       go to state 414
  var           go to state 415
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 361

 116) while_loop : WHILE expression block END _

  $default      reduce using rule 116 (while_loop)


state 362

 126) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 126 (namespace)


state 363

 127) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 128) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 366
  $default      reduce using rule 91 (program_vars)

  program_var   go to state 364
  program_vars  go to state 416

state 364

  89) program_vars : program_var _

  $default      reduce using rule 89 (program_vars)


state 365

  90) program_vars : program_vars _ COMMA program_var
 129) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 130) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 418
  COMMA         shift, and go to state 417


state 366

  92) program_var : WORD _

  $default      reduce using rule 92 (program_var)


state 367

 131) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 133) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 421
  WHEN          shift, and go to state 369
  $default      reduce using rule 138 (case_else)

  case_else     go to state 419
  case_condition  go to state 420

state 368

 132) case_conditions : case_condition _

  $default      reduce using rule 132 (case_conditions)


state 369

 134) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  case_allowed_condition  go to state 422
  number        go to state 423
  var           go to state 424
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 370

 150) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 425


state 371

 151) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 426


state 372

 204) assignment : var_or_indirect PLUS EQUAL expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 204 (assignment)

  operator      go to state 217

state 373

 205) assignment : var_or_indirect MINUS EQUAL expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 205 (assignment)

  operator      go to state 217

state 374

 206) assignment : var_or_indirect STAR EQUAL expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 206 (assignment)

  operator      go to state 217

state 375

 207) assignment : var_or_indirect SLASH EQUAL expression _
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  $default      reduce using rule 207 (assignment)

  operator      go to state 217

state 376

 342) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 427
  WORD          shift, and go to state 428
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 432
  LBRACK        shift, and go to state 306
  LBRACE        shift, and go to state 319
  $default      reduce using rule 341 (optional_sign)

  hash          go to state 429
  array         go to state 430
  optional_sign  go to state 431
  sign          go to state 433
  array_values  go to state 434
  array_value   go to state 435
  hash_value    go to state 436

state 377

 208) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 208 (position_assignment)


state 378

 210) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 221) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 152
  ARROW         shift, and go to state 437

  var_method_modifier  go to state 266

state 379

 212) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 438


state 380

 237) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 237 (var_system_modifers)


state 381

 235) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 439


state 382

 239) var_system_modifer : DOT var_system _

  $default      reduce using rule 239 (var_system_modifer)


state 383

 276) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 277) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  indirectable  go to state 440
  integer       go to state 120

state 384

 318) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 318 (message)


state 385

 319) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 319 (warning)


state 386

 326) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 441


state 387

 328) hash : LBRACE sn _ hash_attributes sn RBRACE
 329) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 445
  RBRACE        shift, and go to state 443

  hash_attributes  go to state 442
  hash_attribute  go to state 444

state 388

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 449
  RBRACE        shift, and go to state 447

  tp_tool_attributes  go to state 446
  tp_tool_attribute  go to state 448

state 389

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 450


state 390

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  wait_modifier  go to state 451
  timeout_modifier  go to state 452
  after_modifier  go to state 453
  swallow_newlines  go to state 454

state 391

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 455


state 392

 312) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 312 (operation)


state 393

 313) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  var_or_indirect  go to state 456

state 394

 314) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 314 (operation)


state 395

 315) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 315 (operation)


state 396

 292) definable_range : DIGIT _ RANGE DIGIT
 293) definable_range : DIGIT _

  RANGE         shift, and go to state 457
  $default      reduce using rule 293 (definable_range)


state 397

 304) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 458


state 398

 307) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 459


state 399

 311) localvars : local_types LBRACK RBRACK _

  $default      reduce using rule 311 (localvars)


state 400

  68) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 122

  integer       go to state 460

state 401

  81) args : args COMMA arg _

  $default      reduce using rule 81 (args)


state 402

  78) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 78 (program_call)


state 403

  79) program_call : CALL var_or_indirect LPAREN args RPAREN _

  $default      reduce using rule 79 (program_call)


state 404

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 461


state 405

 103) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 462


state 406

 107) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 107 (elsif_conditions)


state 407

 109) elsif_condition : ELSIF expression _ block
 249) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 283
  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230

  block         go to state 463
  operator      go to state 217

state 408

 105) conditional_block : IF expression THEN block elsif_block _ else_block END
 111) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 359
  ELSIF         shift, and go to state 410
  $default      reduce using rule 149 (else_block)

  else_block    go to state 464
  elsif_block_condition  go to state 465

state 409

 110) elsif_block : elsif_block_condition _

  $default      reduce using rule 110 (elsif_block)


state 410

 113) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 127
  BANG          shift, and go to state 132
  MINUS         shift, and go to state 147
  INDIRECT      shift, and go to state 91
  TRUE_FALSE    shift, and go to state 143
  ON_OFF        shift, and go to state 144
  LPAREN        shift, and go to state 145
  SYSTEM        shift, and go to state 89
  ADDRESS       shift, and go to state 92
  OPERATION     shift, and go to state 148

  namespaces    go to state 54
  function_call  go to state 55
  expression    go to state 466
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90
  unary_expression  go to state 128
  binary_expression  go to state 129
  factor        go to state 130
  address       go to state 131
  basic_program_call  go to state 133
  number        go to state 134
  signed_number  go to state 135
  operation     go to state 136
  var           go to state 137
  signed_var    go to state 138
  var_system    go to state 139
  indirect_thing  go to state 140
  paren_expr    go to state 141
  booleans      go to state 142
  sign          go to state 146
  integer       go to state 120

state 411

 104) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 104 (conditional)


state 412

 148) else_block : ELSE block _

  $default      reduce using rule 148 (else_block)


state 413

 114) forloop : FOR var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 115) forloop : FOR var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 467
  DOWNTO        shift, and go to state 468


state 414

 117) int_or_var : integer _

  $default      reduce using rule 117 (int_or_var)


state 415

 118) int_or_var : var _

  $default      reduce using rule 118 (int_or_var)


state 416

  90) program_vars : program_vars _ COMMA program_var
 127) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 128) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 469
  COMMA         shift, and go to state 417


state 417

  90) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 366

  program_var   go to state 470

state 418

 129) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 130) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 283
  COLON         shift, and go to state 472

  block         go to state 471

state 419

 131) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 473


state 420

 133) case_conditions : case_conditions case_condition _

  $default      reduce using rule 133 (case_conditions)


state 421

 137) case_else : ELSE _ block

  NEWLINE       shift, and go to state 283

  block         go to state 474

state 422

 134) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 283

  block         go to state 475

state 423

 135) case_allowed_condition : number _

  $default      reduce using rule 135 (case_allowed_condition)


state 424

 136) case_allowed_condition : var _

  $default      reduce using rule 136 (case_allowed_condition)


state 425

 150) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 476
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 426

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 477
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 427

 333) hash_value : STRING _

  $default      reduce using rule 333 (hash_value)


state 428

 334) hash_value : WORD _

  $default      reduce using rule 334 (hash_value)


state 429

 335) hash_value : hash _

  $default      reduce using rule 335 (hash_value)


state 430

 336) hash_value : array _

  $default      reduce using rule 336 (hash_value)


state 431

 337) hash_value : optional_sign _ DIGIT
 338) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 479
  DIGIT         shift, and go to state 478


state 432

 339) hash_value : TRUE_FALSE _

  $default      reduce using rule 339 (hash_value)


state 433

 340) optional_sign : sign _

  $default      reduce using rule 340 (optional_sign)


state 434

 342) array : LBRACK sn array_values _ sn RBRACK
 344) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 200
  COMMA         shift, and go to state 481
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 480

state 435

 343) array_values : array_value _

  $default      reduce using rule 343 (array_values)


state 436

 345) array_value : hash_value _

  $default      reduce using rule 345 (array_value)


state 437

 210) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 306

  array         go to state 482

state 438

 212) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 485

  pose_range_modifiers  go to state 483
  pose_range_modifier  go to state 484

state 439

 235) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 314
  DOT           [reduce using rule 238 (var_system_modifers)]
  $default      reduce using rule 238 (var_system_modifers)

  var_system_modifers  go to state 486
  var_system_modifer  go to state 313

state 440

 276) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 277) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 487


state 441

 326) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 326 (position_data)


state 442

 328) hash : LBRACE sn hash_attributes _ sn RBRACE
 331) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 200
  COMMA         shift, and go to state 489
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 488

state 443

 329) hash : LBRACE sn RBRACE _

  $default      reduce using rule 329 (hash)


state 444

 330) hash_attributes : hash_attribute _

  $default      reduce using rule 330 (hash_attributes)


state 445

 332) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 490


state 446

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 200
  COMMA         shift, and go to state 492
  $default      reduce using rule 325 (swallow_newlines)

  sn            go to state 491
  swallow_newlines  go to state 202

state 447

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 448

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 449

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 493


state 450

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 451

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 494
  $default      reduce using rule 61 (wait_statement)


state 452

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 453

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 454

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 495
  AFTER         shift, and go to state 496


state 455

  71) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 71 (use_statement)


state 456

 313) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 497


state 457

 292) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 498


state 458

 304) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 304 (reg)


state 459

 307) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 307 (framereg)


state 460

  68) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 499


state 461

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 500


state 462

 103) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 103 (conditional)


state 463

 109) elsif_condition : ELSIF expression block _

  $default      reduce using rule 109 (elsif_condition)


state 464

 105) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 501


state 465

 111) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 111 (elsif_block)


state 466

 113) elsif_block_condition : ELSIF expression _ THEN block
 249) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 218
  NOTEQUAL      shift, and go to state 219
  GTE           shift, and go to state 222
  LTE           shift, and go to state 223
  LT            shift, and go to state 220
  GT            shift, and go to state 221
  PLUS          shift, and go to state 224
  MINUS         shift, and go to state 225
  STAR          shift, and go to state 227
  SLASH         shift, and go to state 228
  DIV           shift, and go to state 229
  AND           shift, and go to state 231
  OR            shift, and go to state 226
  MOD           shift, and go to state 230
  THEN          shift, and go to state 502

  operator      go to state 217

state 467

 114) forloop : FOR var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  int_or_var    go to state 503
  integer       go to state 414
  var           go to state 415
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 468

 115) forloop : FOR var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  int_or_var    go to state 504
  integer       go to state 414
  var           go to state 415
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 469

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 283
  COLON         shift, and go to state 506

  block         go to state 505

state 470

  90) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 90 (program_vars)


state 471

 129) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 507


state 472

 130) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 508


state 473

 131) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 131 (case_statement)


state 474

 137) case_else : ELSE block _

  $default      reduce using rule 137 (case_else)


state 475

 134) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 134 (case_condition)


state 476

 150) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 509


state 477

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 510


state 478

 337) hash_value : optional_sign DIGIT _

  $default      reduce using rule 337 (hash_value)


state 479

 338) hash_value : optional_sign REAL _

  $default      reduce using rule 338 (hash_value)


state 480

 342) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 511


state 481

 344) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 512

state 482

 210) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 210 (position_assignment)


state 483

 212) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 223) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 485
  $default      reduce using rule 212 (position_assignment)

  pose_range_modifier  go to state 513

state 484

 222) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 222 (pose_range_modifiers)


state 485

 224) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 514

state 486

 235) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 237) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 314
  DOT           [reduce using rule 235 (var_system)]
  $default      reduce using rule 235 (var_system)

  var_system_modifer  go to state 380

state 487

 276) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 277) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 152
  $default      reduce using rule 276 (indirect_thing)

  var_method_modifier  go to state 151
  var_method_modifiers  go to state 515

state 488

 328) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 516


state 489

 331) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 202
  sn            go to state 517

state 490

 332) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 427
  WORD          shift, and go to state 428
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 432
  LBRACK        shift, and go to state 306
  LBRACE        shift, and go to state 319
  $default      reduce using rule 341 (optional_sign)

  hash_value    go to state 518
  hash          go to state 429
  array         go to state 430
  optional_sign  go to state 431
  sign          go to state 433

state 491

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 519


state 492

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  sn            go to state 520
  swallow_newlines  go to state 202

state 493

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 427
  WORD          shift, and go to state 428
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 432
  LBRACK        shift, and go to state 306
  LBRACE        shift, and go to state 319
  $default      reduce using rule 341 (optional_sign)

  hash_value    go to state 521
  hash          go to state 429
  array         go to state 430
  optional_sign  go to state 431
  sign          go to state 433

state 494

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  wait_modifier  go to state 522
  timeout_modifier  go to state 452
  after_modifier  go to state 453
  swallow_newlines  go to state 454

state 495

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 523


state 496

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 524


state 497

 313) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 313 (operation)


state 498

 292) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 292 (definable_range)


state 499

  68) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 68 (group_statement)


state 500

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 525


state 501

 105) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 105 (conditional_block)


state 502

 113) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 283

  block         go to state 526

state 503

 114) forloop : FOR var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 527


state 504

 115) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 528


state 505

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 529


state 506

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 530


state 507

 129) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 129 (function)


state 508

 130) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 283

  block         go to state 531

state 509

 150) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 534

  motion_modifiers  go to state 532
  motion_modifier  go to state 533

state 510

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 535


state 511

 342) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 342 (array)


state 512

 344) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 427
  WORD          shift, and go to state 428
  MINUS         shift, and go to state 147
  TRUE_FALSE    shift, and go to state 432
  LBRACK        shift, and go to state 306
  LBRACE        shift, and go to state 319
  $default      reduce using rule 341 (optional_sign)

  hash          go to state 429
  array         go to state 430
  optional_sign  go to state 431
  sign          go to state 433
  array_value   go to state 536
  hash_value    go to state 436

state 513

 223) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 223 (pose_range_modifiers)


state 514

 224) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 537


state 515

 221) var_method_modifiers : var_method_modifiers _ var_method_modifier
 277) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 152
  $default      reduce using rule 277 (indirect_thing)

  var_method_modifier  go to state 266

state 516

 328) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 328 (hash)


state 517

 331) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 445

  hash_attribute  go to state 538

state 518

 332) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 332 (hash_attribute)


state 519

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 520

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 449

  tp_tool_attribute  go to state 539

state 521

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 522

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 523

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49

  label         go to state 540

state 524

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  indirectable  go to state 541
  number        go to state 118
  var           go to state 119
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 525

  98) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 98 (io_method)


state 526

 113) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 113 (elsif_block_condition)


state 527

 114) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 283

  block         go to state 542

state 528

 115) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 283

  block         go to state 543

state 529

 127) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 127 (function)


state 530

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 283

  block         go to state 544

state 531

 130) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 545


state 532

 150) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 153) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 534
  $default      reduce using rule 150 (motion_statement)

  motion_modifier  go to state 546

state 533

 152) motion_modifiers : motion_modifier _

  $default      reduce using rule 152 (motion_modifiers)


state 534

 156) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 157) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 158) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 159) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 160) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 161) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 162) motion_modifier : DOT _ swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 163) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 164) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 165) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 547

state 535

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 200
  $default      reduce using rule 325 (swallow_newlines)

  swallow_newlines  go to state 548

state 536

 344) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 344 (array_values)


state 537

 224) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 224 (pose_range_modifier)


state 538

 331) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 331 (hash_attributes)


state 539

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 540

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 549


state 541

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 550


state 542

 114) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 551


state 543

 115) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 552


state 544

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 553


state 545

 130) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 130 (function)


state 546

 153) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 153 (motion_modifiers)


state 547

 156) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 157) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 158) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 159) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 160) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 161) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 162) motion_modifier : DOT swallow_newlines _ DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 163) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 164) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 165) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 559
  DISTANCE_SEGMENT  shift, and go to state 560
  AT            shift, and go to state 554
  ACC           shift, and go to state 555
  TERM          shift, and go to state 557
  OFFSET        shift, and go to state 558
  SKIP          shift, and go to state 561
  COORD         shift, and go to state 564
  MROT          shift, and go to state 565
  PTH           shift, and go to state 566
  WJNT          shift, and go to state 568
  INC           shift, and go to state 567
  BREAK         shift, and go to state 569
  RTCP          shift, and go to state 570
  FPLIN         shift, and go to state 571
  AP_LD         shift, and go to state 576
  RT_LD         shift, and go to state 575
  CD            shift, and go to state 572
  CR            shift, and go to state 556
  INDEV         shift, and go to state 574
  EV            shift, and go to state 573
  PSPD          shift, and go to state 577
  CTV           shift, and go to state 578

  valid_motion_statements  go to state 562
  single_argument_motion_modifiers  go to state 563

state 548

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 579


state 549

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 550

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 580


state 551

 114) forloop : FOR var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 114 (forloop)


state 552

 115) forloop : FOR var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 115 (forloop)


state 553

 128) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 128 (function)


state 554

 156) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 581


state 555

 157) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 582


state 556

 158) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 583


state 557

 159) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 584


state 558

 160) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 585


state 559

 161) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 586


state 560

 162) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT _ LPAREN distance COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 587


state 561

 163) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 588


state 562

 164) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 164 (motion_modifier)


state 563

 165) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 589


state 564

 166) valid_motion_statements : COORD _

  $default      reduce using rule 166 (valid_motion_statements)


state 565

 167) valid_motion_statements : MROT _

  $default      reduce using rule 167 (valid_motion_statements)


state 566

 168) valid_motion_statements : PTH _

  $default      reduce using rule 168 (valid_motion_statements)


state 567

 169) valid_motion_statements : INC _

  $default      reduce using rule 169 (valid_motion_statements)


state 568

 170) valid_motion_statements : WJNT _

  $default      reduce using rule 170 (valid_motion_statements)


state 569

 171) valid_motion_statements : BREAK _

  $default      reduce using rule 171 (valid_motion_statements)


state 570

 172) valid_motion_statements : RTCP _

  $default      reduce using rule 172 (valid_motion_statements)


state 571

 173) valid_motion_statements : FPLIN _

  $default      reduce using rule 173 (valid_motion_statements)


state 572

 174) single_argument_motion_modifiers : CD _

  $default      reduce using rule 174 (single_argument_motion_modifiers)


state 573

 175) single_argument_motion_modifiers : EV _

  $default      reduce using rule 175 (single_argument_motion_modifiers)


state 574

 176) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 176 (single_argument_motion_modifiers)


state 575

 177) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 177 (single_argument_motion_modifiers)


state 576

 178) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 178 (single_argument_motion_modifiers)


state 577

 179) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 179 (single_argument_motion_modifiers)


state 578

 180) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 180 (single_argument_motion_modifiers)


state 579

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 590


state 580

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 591


state 581

 156) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 594
  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  speed         go to state 592
  number        go to state 118
  var           go to state 119
  indirectable  go to state 593
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 582

 157) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  integer       go to state 414
  var           go to state 415
  int_or_var    go to state 595
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 583

 158) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 600

  valid_terminations  go to state 596
  motion_arguements  go to state 597
  integer       go to state 598
  var           go to state 599
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 584

 159) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 600

  valid_terminations  go to state 601
  integer       go to state 598
  var           go to state 599
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 585

 160) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 602
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 586

 161) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA seg_actions RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  time          go to state 603
  var           go to state 604
  number        go to state 605
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 587

 162) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN _ distance COMMA seg_actions RPAREN

  REAL          shift, and go to state 121
  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  distance      go to state 606
  var           go to state 607
  number        go to state 608
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90
  integer       go to state 120

state 588

 163) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49

  label         go to state 609

state 589

 165) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110

  integer       go to state 414
  var           go to state 415
  int_or_var    go to state 610
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 590

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 110
  INDIRECT      shift, and go to state 91
  SYSTEM        shift, and go to state 89

  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  var_or_indirect  go to state 611
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 591

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 592

 156) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 612


state 593

 198) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 613


state 594

 199) speed : STRING _

  $default      reduce using rule 199 (speed)


state 595

 157) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 614


state 596

 154) motion_arguements : valid_terminations _
 155) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 615
  $default      reduce using rule 154 (motion_arguements)


state 597

 158) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 616


state 598

 181) valid_terminations : integer _

  $default      reduce using rule 181 (valid_terminations)


state 599

 182) valid_terminations : var _

  $default      reduce using rule 182 (valid_terminations)


state 600

 183) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 617


state 601

 159) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 618


state 602

 160) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 619


state 603

 161) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 620


state 604

 194) time : var _

  $default      reduce using rule 194 (time)


state 605

 195) time : number _

  $default      reduce using rule 195 (time)


state 606

 162) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 621


state 607

 196) distance : var _

  $default      reduce using rule 196 (distance)


state 608

 197) distance : number _

  $default      reduce using rule 197 (distance)


state 609

 163) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 623
  $default      reduce using rule 185 (optional_lpos_arg)

  optional_lpos_arg  go to state 622

state 610

 165) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 624


state 611

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 625


state 612

 156) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 156 (motion_modifier)


state 613

 198) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 626


state 614

 157) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 157 (motion_modifier)


state 615

 155) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 122
  WORD          shift, and go to state 110
  MINUS         shift, and go to state 600

  valid_terminations  go to state 627
  integer       go to state 598
  var           go to state 599
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 616

 158) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 158 (motion_modifier)


state 617

 183) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 183 (valid_terminations)


state 618

 159) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 619

 160) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 160 (motion_modifier)


state 620

 161) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 127
  INDIRECT      shift, and go to state 91
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  SYSTEM        shift, and go to state 89

  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  seg_actions   go to state 628
  program_call  go to state 629
  io_method     go to state 630
  assignment    go to state 631
  var_or_indirect  go to state 632
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 621

 162) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 60
  WORD          shift, and go to state 127
  INDIRECT      shift, and go to state 91
  CALL          shift, and go to state 58
  RUN           shift, and go to state 57
  SYSTEM        shift, and go to state 89

  namespaces    go to state 54
  function_call  go to state 55
  basic_program_call  go to state 56
  var           go to state 108
  indirect_thing  go to state 62
  var_system    go to state 109
  seg_actions   go to state 633
  program_call  go to state 629
  io_method     go to state 630
  assignment    go to state 631
  var_or_indirect  go to state 632
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  ns            go to state 90

state 622

 163) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 634


state 623

 184) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 110

  var           go to state 635
  var_without_namespaces  go to state 87
  var_with_namespaces  go to state 88
  namespaces    go to state 111
  ns            go to state 90

state 624

 165) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 165 (motion_modifier)


state 625

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 534

  motion_modifiers  go to state 636
  motion_modifier  go to state 533

state 626

 198) speed : indirectable COMMA STRING _

  $default      reduce using rule 198 (speed)


state 627

 155) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 155 (motion_arguements)


state 628

 161) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 637


state 629

 191) seg_actions : program_call _

  $default      reduce using rule 191 (seg_actions)


state 630

 192) seg_actions : io_method _

  $default      reduce using rule 192 (seg_actions)


state 631

 193) seg_actions : assignment _

  $default      reduce using rule 193 (seg_actions)


state 632

 203) assignment : var_or_indirect _ EQUAL expression
 204) assignment : var_or_indirect _ PLUS EQUAL expression
 205) assignment : var_or_indirect _ MINUS EQUAL expression
 206) assignment : var_or_indirect _ STAR EQUAL expression
 207) assignment : var_or_indirect _ SLASH EQUAL expression

  EQUAL         shift, and go to state 185
  PLUS          shift, and go to state 186
  MINUS         shift, and go to state 187
  STAR          shift, and go to state 188
  SLASH         shift, and go to state 189


state 633

 162) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 638


state 634

 163) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 163 (motion_modifier)


state 635

 184) optional_lpos_arg : COMMA var _

  $default      reduce using rule 184 (optional_lpos_arg)


state 636

 151) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 153) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 534
  $default      reduce using rule 151 (motion_statement)

  motion_modifier  go to state 546

state 637

 161) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 638

 162) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN _

  $default      reduce using rule 162 (motion_modifier)

