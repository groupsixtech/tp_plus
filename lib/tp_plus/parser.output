state 3 contains 2 shift/reduce conflicts
state 53 contains 1 shift/reduce conflicts
state 61 contains 1 shift/reduce conflicts
state 63 contains 1 reduce/reduce conflicts
state 77 contains 2 shift/reduce conflicts
state 100 contains 2 shift/reduce conflicts
state 103 contains 1 shift/reduce conflicts
state 130 contains 1 reduce/reduce conflicts
state 157 contains 1 reduce/reduce conflicts
state 178 contains 1 shift/reduce conflicts
state 182 contains 1 shift/reduce conflicts
state 201 contains 1 shift/reduce conflicts
state 280 contains 2 reduce/reduce conflicts
state 281 contains 2 reduce/reduce conflicts
state 282 contains 2 reduce/reduce conflicts
state 284 contains 2 reduce/reduce conflicts
state 293 contains 1 shift/reduce conflicts
state 300 contains 1 shift/reduce conflicts
state 320 contains 1 shift/reduce conflicts
state 338 contains 14 shift/reduce conflicts
state 367 contains 1 shift/reduce conflicts
state 445 contains 1 shift/reduce conflicts
state 492 contains 1 shift/reduce conflicts

rule 142 (case_allowed_statement) never reduced
rule 143 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 label: LABEL_SET LPAREN case_allowed_condition RPAREN
rule 69 label: LABEL_POP
rule 70 group_statement: GROUP LPAREN integer RPAREN
rule 71 use_statement: FANUC_USE indirectable
rule 72 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 73 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 74 collguard_statement: COLL_GUARD optional_arg
rule 75 set_skip_statement: SET_SKIP_CONDITION expression
rule 76 function_call: WORD
rule 77 function_call: namespaces WORD
rule 78 basic_program_call: function_call LPAREN args RPAREN
rule 79 program_call: basic_program_call
rule 80 program_call: RUN function_call LPAREN args RPAREN
rule 81 program_call: CALL var_or_indirect LPAREN args RPAREN
rule 82 args: arg
rule 83 args: args COMMA arg
rule 84 args: 
rule 85 arg: number
rule 86 arg: signed_number
rule 87 arg: var
rule 88 arg: string
rule 89 arg: address
rule 90 arg: expression
rule 91 program_vars: program_var
rule 92 program_vars: program_vars COMMA program_var
rule 93 program_vars: 
rule 94 program_var: WORD
rule 95 return_statement: RETURN LPAREN expression RPAREN
rule 96 return_statement: RETURN
rule 97 string: STRING
rule 98 io_method: IO_METHOD var_or_indirect
rule 99 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 100 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 101 var_or_indirect: var
rule 102 var_or_indirect: indirect_thing
rule 103 var_or_indirect: var_system
rule 104 jump: JUMP label
rule 105 conditional: IF expression block elsif_conditions else_block END
rule 106 conditional: UNLESS expression block else_block END
rule 107 conditional_block: IF expression THEN block elsif_block else_block END
rule 108 elsif_conditions: elsif_condition
rule 109 elsif_conditions: elsif_conditions elsif_condition
rule 110 elsif_conditions: 
rule 111 elsif_condition: ELSIF expression block
rule 112 elsif_block: elsif_block_condition
rule 113 elsif_block: elsif_block elsif_block_condition
rule 114 elsif_block: 
rule 115 elsif_block_condition: ELSIF expression THEN block
rule 116 forloop: FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 117 forloop: FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 118 while_loop: WHILE expression block END
rule 119 int_or_var: integer
rule 120 int_or_var: var
rule 121 int_or_var: indirect_thing
rule 122 word_list: word_tuple
rule 123 word_list: word_list word_tuple
rule 124 word_tuple: COMMA WORD
rule 125 word_tuple: WORD
rule 126 using_statement: USING word_list
rule 127 compile_statement: COMPILE IMPORT word_list
rule 128 import_statement: IMPORT word_list
rule 129 namespace: NAMESPACE WORD block END
rule 130 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 131 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 132 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 133 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 134 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 135 case_conditions: case_condition
rule 136 case_conditions: case_conditions case_condition
rule 137 case_condition: WHEN case_allowed_condition block
rule 138 case_allowed_condition: number
rule 139 case_allowed_condition: var
rule 140 case_else: ELSE block
rule 141 case_else: 
rule 142 case_allowed_statement: program_call
rule 143 case_allowed_statement: jump
rule 144 inline_conditional: inlineable
rule 145 inline_conditional: inlineable IF expression
rule 146 inline_conditional: inlineable UNLESS expression
rule 147 inlineable: jump
rule 148 inlineable: assignment
rule 149 inlineable: io_method
rule 150 inlineable: program_call
rule 151 else_block: ELSE block
rule 152 else_block: 
rule 153 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 154 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 155 motion_modifiers: motion_modifier
rule 156 motion_modifiers: motion_modifiers motion_modifier
rule 157 motion_arguements: valid_terminations
rule 158 motion_arguements: valid_terminations COMMA valid_terminations
rule 159 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 160 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 161 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 162 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 163 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 164 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
rule 165 motion_modifier: DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
rule 166 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 167 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 168 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 169 valid_motion_statements: COORD
rule 170 valid_motion_statements: MROT
rule 171 valid_motion_statements: PTH
rule 172 valid_motion_statements: INC
rule 173 valid_motion_statements: WJNT
rule 174 valid_motion_statements: BREAK
rule 175 valid_motion_statements: RTCP
rule 176 valid_motion_statements: FPLIN
rule 177 single_argument_motion_modifiers: CD
rule 178 single_argument_motion_modifiers: EV
rule 179 single_argument_motion_modifiers: INDEV
rule 180 single_argument_motion_modifiers: RT_LD
rule 181 single_argument_motion_modifiers: AP_LD
rule 182 single_argument_motion_modifiers: PSPD
rule 183 single_argument_motion_modifiers: CTV
rule 184 valid_terminations: integer
rule 185 valid_terminations: var
rule 186 valid_terminations: MINUS DIGIT
rule 187 optional_lpos_arg: COMMA var
rule 188 optional_lpos_arg: 
rule 189 indirectable: number
rule 190 indirectable: var
rule 191 optional_arg: number
rule 192 optional_arg: var
rule 193 optional_arg: 
rule 194 seg_actions: program_call
rule 195 seg_actions: io_method
rule 196 seg_actions: assignment
rule 197 time: var
rule 198 time: number
rule 199 distance: var
rule 200 distance: number
rule 201 speed: indirectable COMMA STRING
rule 202 speed: STRING
rule 203 label_definition: label
rule 204 definition: LOCALSTACK ASSIGN definable
rule 205 definition: WORD ASSIGN definable
rule 206 assignment: var_or_indirect EQUAL expression
rule 207 assignment: var_or_indirect PLUS EQUAL expression
rule 208 assignment: var_or_indirect MINUS EQUAL expression
rule 209 assignment: var_or_indirect STAR EQUAL expression
rule 210 assignment: var_or_indirect SLASH EQUAL expression
rule 211 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 212 position_assignment: var_or_indirect ARROW array
rule 213 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 214 position_assignment: assignable_range EQUAL assignable_range
rule 215 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 216 assignable_range: var RANGE var
rule 217 assignable_range: var
rule 218 var: var_without_namespaces
rule 219 var: var_with_namespaces
rule 220 var_without_namespaces: WORD
rule 221 var_without_namespaces: WORD var_method_modifiers
rule 222 var_with_namespaces: namespaces var_without_namespaces
rule 223 var_method_modifiers: var_method_modifier
rule 224 var_method_modifiers: var_method_modifiers var_method_modifier
rule 225 pose_range_modifiers: pose_range_modifier
rule 226 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 227 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 228 coord_system: SPHERE
rule 229 coord_system: POLAR
rule 230 coord_system: ORIGIN
rule 231 var_method_modifier: DOT swallow_newlines WORD
rule 232 var_method_modifier: DOT swallow_newlines group_statement
rule 233 var_method_modifier: DOT swallow_newlines POSEATTR
rule 234 var_method_modifier: DOT swallow_newlines OFFSET
rule 235 var_method_modifier: DOT swallow_newlines coord_system
rule 236 var_method_modifier: DOT swallow_newlines FIX
rule 237 var_system: SYSTEM WORD var_system_modifers
rule 238 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 239 var_system_modifers: var_system_modifer
rule 240 var_system_modifers: var_system_modifers var_system_modifer
rule 241 var_system_modifers: 
rule 242 var_system_modifer: DOT var_system
rule 243 namespaces: ns
rule 244 namespaces: namespaces ns
rule 245 ns: WORD COLON COLON
rule 246 expression: unary_expression
rule 247 expression: binary_expression
rule 248 unary_expression: factor
rule 249 unary_expression: address
rule 250 unary_expression: BANG factor
rule 251 unary_expression: basic_program_call
rule 252 binary_expression: expression operator expression
rule 253 operator: EEQUAL
rule 254 operator: NOTEQUAL
rule 255 operator: LT
rule 256 operator: GT
rule 257 operator: GTE
rule 258 operator: LTE
rule 259 operator: PLUS
rule 260 operator: MINUS
rule 261 operator: OR
rule 262 operator: STAR
rule 263 operator: SLASH
rule 264 operator: DIV
rule 265 operator: MOD
rule 266 operator: AND
rule 267 factor: number
rule 268 factor: signed_number
rule 269 factor: operation
rule 270 factor: var
rule 271 factor: signed_var
rule 272 factor: var_system
rule 273 factor: indirect_thing
rule 274 factor: paren_expr
rule 275 factor: booleans
rule 276 booleans: TRUE_FALSE
rule 277 booleans: ON_OFF
rule 278 paren_expr: LPAREN expression RPAREN
rule 279 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 280 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 281 signed_number: sign DIGIT
rule 282 signed_number: sign REAL
rule 283 signed_var: sign var
rule 284 sign: MINUS
rule 285 number: integer
rule 286 number: REAL
rule 287 integer: DIGIT
rule 288 definable: reg
rule 289 definable: number
rule 290 definable: signed_number
rule 291 definable: string
rule 292 definable: framereg
rule 293 definable: booleans
rule 294 definable: localvars
rule 295 definable_range: DIGIT RANGE DIGIT
rule 296 definable_range: DIGIT
rule 297 reg_types: SREG
rule 298 reg_types: UALM
rule 299 reg_types: TIMER
rule 300 reg_types: ARG
rule 301 reg_types: VREG
rule 302 reg_types: POSITION
rule 303 reg_types: NUMREG
rule 304 reg_types: POSREG
rule 305 reg_types: INPUT
rule 306 reg_types: OUTPUT
rule 307 reg: reg_types LBRACK definable_range RBRACK
rule 308 frametype: TOOLREG
rule 309 frametype: FRAMEREG
rule 310 framereg: frametype LBRACK DIGIT RBRACK
rule 311 local_types: LOCALREG
rule 312 local_types: LOCALPOSE
rule 313 local_types: LOCALFLAG
rule 314 localvars: local_types LBRACK RBRACK
rule 315 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 316 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 317 operation: OPERATION LBRACK signed_number RBRACK
rule 318 operation: OPERATION LBRACK number RBRACK
rule 319 address: ADDRESS var
rule 320 comment: COMMENT
rule 321 message: MESSAGE LPAREN STRING RPAREN
rule 322 warning: WARNING LPAREN STRING RPAREN
rule 323 terminator: NEWLINE
rule 324 terminator: comment optional_newline
rule 325 terminator: false
rule 326 terminator: 
rule 327 swallow_newlines: NEWLINE
rule 328 swallow_newlines: 
rule 329 position_data: POSITION_DATA sn hash sn END
rule 330 sn: swallow_newlines
rule 331 hash: LBRACE sn hash_attributes sn RBRACE
rule 332 hash: LBRACE sn RBRACE
rule 333 hash_attributes: hash_attribute
rule 334 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 335 hash_attribute: STRING COLON hash_value
rule 336 hash_value: STRING
rule 337 hash_value: WORD
rule 338 hash_value: hash
rule 339 hash_value: array
rule 340 hash_value: optional_sign DIGIT
rule 341 hash_value: optional_sign REAL
rule 342 hash_value: TRUE_FALSE
rule 343 optional_sign: sign
rule 344 optional_sign: 
rule 345 array: LBRACK sn array_values sn RBRACK
rule 346 array_values: array_value
rule 347 array_values: array_values COMMA sn array_value
rule 348 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (140)
    on right: 
    on left : 
  program (141)
    on right: 
    on left : 1 2
  statements (142)
    on right: 1 4 5
    on left : 3 4
  statement (143)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (144)
    on right: 3 4
    on left : 323 324 325 326
  block (145)
    on right: 105 106 107 111 115 116 117 118 129 130 131 132 133 137 140 151
    on left : 5
  optional_newline (146)
    on right: 324
    on left : 6 7
  comment (147)
    on right: 8 324
    on left : 320
  message (148)
    on right: 9
    on left : 321
  definition (149)
    on right: 10
    on left : 204 205
  namespace (150)
    on right: 11
    on left : 129
  motion_statement (151)
    on right: 12
    on left : 153 154
  position_assignment (152)
    on right: 13
    on left : 211 212 213 214 215
  label_definition (153)
    on right: 14
    on left : 203
  address (154)
    on right: 15 89 249
    on left : 319
  conditional (155)
    on right: 16
    on left : 105 106
  inline_conditional (156)
    on right: 17
    on left : 144 145 146
  conditional_block (157)
    on right: 18
    on left : 107
  forloop (158)
    on right: 19
    on left : 116 117
  while_loop (159)
    on right: 20
    on left : 118
  use_statement (160)
    on right: 21
    on left : 71 72 73
  set_skip_statement (161)
    on right: 22
    on left : 75
  wait_statement (162)
    on right: 23
    on left : 59 60 61 62
  case_statement (163)
    on right: 24
    on left : 134
  fanuc_eval (164)
    on right: 25
    on left : 58
  timer_method (165)
    on right: 26
    on left : 57
  position_data (166)
    on right: 27
    on left : 329
  raise (167)
    on right: 28
    on left : 56
  tp_header_definition (168)
    on right: 29
    on left : 46
  lpos_or_jpos (169)
    on right: 30
    on left : 43 44
  empty_stmt (170)
    on right: 31
    on left : 45
  warning (171)
    on right: 32
    on left : 322
  var_system (172)
    on right: 33 103 242 272
    on left : 237 238
  return_statement (173)
    on right: 36
    on left : 95 96
  collguard_statement (174)
    on right: 37
    on left : 74
  function (175)
    on right: 38
    on left : 130 131 132 133
  tp_application_definition (176)
    on right: 39
    on left : 55
  using_statement (177)
    on right: 40
    on left : 126
  import_statement (178)
    on right: 41
    on left : 128
  compile_statement (179)
    on right: 42
    on left : 127
  var_or_indirect (180)
    on right: 43 44 56 57 81 98 99 100 153 154 163 206 207 208 209 210 212 315 316
    on left : 101 102 103
  tp_header_value (181)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (182)
    on right: 55
    on left : 50 51
  sn (183)
    on right: 50 51 53 55 329 331 332 334 345 347
    on left : 330
  tp_tool_attributes (184)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (185)
    on right: 52 53
    on left : 54
  hash_value (186)
    on right: 54 335 348
    on left : 336 337 338 339 340 341 342
  indirectable (187)
    on right: 59 66 71 72 73 201 279 280
    on left : 189 190
  expression (188)
    on right: 60 61 62 75 90 95 105 106 107 111 115 118 145 146 206 207 208 209 210 252 278
    on left : 246 247
  wait_modifier (189)
    on right: 61 62
    on left : 63 64
  timeout_modifier (190)
    on right: 63
    on left : 65
  after_modifier (191)
    on right: 64
    on left : 66
  swallow_newlines (192)
    on right: 65 66 134 153 154 159 160 161 162 163 164 165 166 167 168 227 231 232 233 234 235 236 330
    on left : 327 328
  label (193)
    on right: 65 104 166 203
    on left : 67 68 69
  case_allowed_condition (194)
    on right: 68 137
    on left : 138 139
  group_statement (195)
    on right: 73 232
    on left : 70
  integer (196)
    on right: 70 119 184 238 285
    on left : 287
  optional_arg (197)
    on right: 74
    on left : 191 192 193
  function_call (198)
    on right: 78 80
    on left : 76 77
  namespaces (199)
    on right: 77 222 244
    on left : 243 244
  basic_program_call (200)
    on right: 79 251
    on left : 78
  args (201)
    on right: 78 80 81 83
    on left : 82 83 84
  program_call (202)
    on right: 142 150 194
    on left : 79 80 81
  arg (203)
    on right: 82 83
    on left : 85 86 87 88 89 90
  number (204)
    on right: 85 100 138 189 191 198 200 267 289 318
    on left : 285 286
  signed_number (205)
    on right: 86 268 290 317
    on left : 281 282
  var (206)
    on right: 87 101 120 134 139 185 187 190 192 197 199 216 217 270 283 319
    on left : 218 219
  string (207)
    on right: 88 291
    on left : 97
  program_vars (208)
    on right: 92 130 131 132 133
    on left : 91 92 93
  program_var (209)
    on right: 91 92
    on left : 94
  io_method (210)
    on right: 149 195
    on left : 98 99 100
  indirect_thing (211)
    on right: 102 121 273
    on left : 279 280
  jump (212)
    on right: 143 147
    on left : 104
  elsif_conditions (213)
    on right: 105 109
    on left : 108 109 110
  else_block (214)
    on right: 105 106 107
    on left : 151 152
  elsif_block (215)
    on right: 107 113
    on left : 112 113 114
  elsif_condition (216)
    on right: 108 109
    on left : 111
  elsif_block_condition (217)
    on right: 112 113
    on left : 115
  int_or_var (218)
    on right: 116 117 160 168
    on left : 119 120 121
  word_list (219)
    on right: 123 126 127 128
    on left : 122 123
  word_tuple (220)
    on right: 122 123
    on left : 124 125
  case_conditions (221)
    on right: 134 136
    on left : 135 136
  case_else (222)
    on right: 134
    on left : 140 141
  case_condition (223)
    on right: 135 136
    on left : 137
  case_allowed_statement (224)
    on right: 
    on left : 142 143
  inlineable (225)
    on right: 144 145 146
    on left : 147 148 149 150
  assignment (226)
    on right: 148 196
    on left : 206 207 208 209 210
  motion_modifiers (227)
    on right: 153 154 156
    on left : 155 156
  motion_modifier (228)
    on right: 155 156
    on left : 159 160 161 162 163 164 165 166 167 168
  motion_arguements (229)
    on right: 161
    on left : 157 158
  valid_terminations (230)
    on right: 157 158 162
    on left : 184 185 186
  speed (231)
    on right: 159
    on left : 201 202
  time (232)
    on right: 164
    on left : 197 198
  seg_actions (233)
    on right: 164 165
    on left : 194 195 196
  distance (234)
    on right: 165
    on left : 199 200
  optional_lpos_arg (235)
    on right: 166
    on left : 187 188
  valid_motion_statements (236)
    on right: 167
    on left : 169 170 171 172 173 174 175 176
  single_argument_motion_modifiers (237)
    on right: 168
    on left : 177 178 179 180 181 182 183
  definable (238)
    on right: 204 205
    on left : 288 289 290 291 292 293 294
  var_method_modifiers (239)
    on right: 211 213 221 224 280
    on left : 223 224
  array (240)
    on right: 211 212 213 339
    on left : 345
  assignable_range (241)
    on right: 213 214 215
    on left : 216 217
  pose_range_modifiers (242)
    on right: 215 226
    on left : 225 226
  var_without_namespaces (243)
    on right: 218 222
    on left : 220 221
  var_with_namespaces (244)
    on right: 219
    on left : 222
  var_method_modifier (245)
    on right: 223 224
    on left : 231 232 233 234 235 236
  pose_range_modifier (246)
    on right: 225 226
    on left : 227
  coord_system (247)
    on right: 235
    on left : 228 229 230
  var_system_modifers (248)
    on right: 237 238 240
    on left : 239 240 241
  var_system_modifer (249)
    on right: 239 240
    on left : 242
  ns (250)
    on right: 243 244
    on left : 245
  unary_expression (251)
    on right: 246
    on left : 248 249 250 251
  binary_expression (252)
    on right: 247
    on left : 252
  factor (253)
    on right: 248 250
    on left : 267 268 269 270 271 272 273 274 275
  operator (254)
    on right: 252
    on left : 253 254 255 256 257 258 259 260 261 262 263 264 265 266
  operation (255)
    on right: 269
    on left : 315 316 317 318
  signed_var (256)
    on right: 271
    on left : 283
  paren_expr (257)
    on right: 274
    on left : 278
  booleans (258)
    on right: 275 293
    on left : 276 277
  sign (259)
    on right: 281 282 283 343
    on left : 284
  reg (260)
    on right: 288
    on left : 307
  framereg (261)
    on right: 292
    on left : 310
  localvars (262)
    on right: 294
    on left : 314
  definable_range (263)
    on right: 307
    on left : 295 296
  reg_types (264)
    on right: 307
    on left : 297 298 299 300 301 302 303 304 305 306
  frametype (265)
    on right: 310
    on left : 308 309
  local_types (266)
    on right: 314
    on left : 311 312 313
  hash (267)
    on right: 329 338
    on left : 331 332
  hash_attributes (268)
    on right: 331 334
    on left : 333 334
  hash_attribute (269)
    on right: 333 334
    on left : 335
  optional_sign (270)
    on right: 340 341
    on left : 343 344
  array_values (271)
    on right: 345 347
    on left : 346 347
  array_value (272)
    on right: 346 347
    on left : 348

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 204 205
  AT_SYM (3) 
  COMMENT (4) 320
  MESSAGE (5) 321
  WARNING (6) 322
  JUMP (7) 104
  IO_METHOD (8) 98 99 100
  INPUT (9) 305
  OUTPUT (10) 306
  NUMREG (11) 303
  POSREG (12) 304
  VREG (13) 301
  SREG (14) 297
  TIME_SEGMENT (15) 164
  DISTANCE_SEGMENT (16) 165
  ARG (17) 300
  UALM (18) 298
  TOOLREG (19) 308
  FRAMEREG (20) 309
  MOVE (21) 153 154
  DOT (22) 61 62 153 154 159 160 161 162 163 164 165 166 167 168 227 231 232 233 234 235 236 242
  TO (23) 116 153 154
  DOWNTO (24) 117
  MID (25) 154
  AT (26) 159
  ACC (27) 160
  TERM (28) 162
  OFFSET (29) 163 234
  SKIP (30) 166
  GROUP (31) 70
  COORD (32) 169
  MROT (33) 170
  PTH (34) 171
  WJNT (35) 173
  INC (36) 172
  BREAK (37) 174
  RTCP (38) 175
  FPLIN (39) 176
  AP_LD (40) 181
  RT_LD (41) 180
  CD (42) 177
  CR (43) 161
  INDEV (44) 179
  EV (45) 178
  PSPD (46) 182
  CTV (47) 183
  SEMICOLON (48) 
  NEWLINE (49) 5 6 45 323 327
  STRING (50) 47 58 59 66 97 100 201 202 279 280 321 322 335 336
  REAL (51) 282 286 341
  DIGIT (52) 186 281 287 295 296 310 340
  WORD (53) 54 76 77 94 124 125 129 130 131 132 133 205 220 221 231 237 238 245 337
  EQUAL (54) 46 55 206 207 208 209 210 214 215
  RANGE (55) 216 295
  EEQUAL (56) 253
  NOTEQUAL (57) 254
  GTE (58) 257
  LTE (59) 258
  LT (60) 255
  GT (61) 256
  BANG (62) 250
  PLUS (63) 207 259
  MINUS (64) 186 208 260 284
  STAR (65) 209 262
  SLASH (66) 210 263
  DIV (67) 264
  AND (68) 266
  OR (69) 261
  MOD (70) 265
  IF (71) 105 107 145
  THEN (72) 107 115
  ELSE (73) 140 151
  ELSIF (74) 111 115
  END (75) 105 106 107 116 117 118 129 130 131 132 133 134 329
  UNLESS (76) 106 146
  FOR (77) 116 117
  IN (78) 116 117
  WHILE (79) 118
  WAIT_FOR (80) 59
  WAIT_UNTIL (81) 60 61 62
  TIMEOUT (82) 65
  AFTER (83) 66
  FANUC_USE (84) 71 72 73
  COLL_GUARD (85) 74
  SET_SKIP_CONDITION (86) 75
  NAMESPACE (87) 129
  CASE (88) 134
  WHEN (89) 137
  INDIRECT (90) 279 280
  POSITION (91) 302
  EVAL (92) 58
  TIMER (93) 299
  TIMER_METHOD (94) 57
  RAISE (95) 56
  ABORT (96) 35
  RETURN (97) 95 96
  POSITION_DATA (98) 329
  TRUE_FALSE (99) 48 276 342
  ON_OFF (100) 49 277
  CALL (101) 81
  RUN (102) 80
  PAUSE (103) 34
  TP_HEADER (104) 46
  TP_APPLICATION_TYPE (105) 55
  LPAREN (106) 43 44 59 60 61 62 65 66 68 70 72 73 78 80 81 95 99 100 116 117 130 131 132 133 153 154 159 160 161 162 163 164 165 166 168 213 215 278 279 280 321 322
  RPAREN (107) 43 44 59 60 61 62 65 66 68 70 72 73 78 80 81 95 99 100 116 117 130 131 132 133 153 154 159 160 161 162 163 164 165 166 168 213 215 278 279 280 321 322
  COLON (108) 54 131 133 245 335
  COMMA (109) 53 59 66 73 83 92 100 124 158 164 165 187 201 279 280 316 334 347
  LBRACK (110) 238 307 310 314 315 316 317 318 345
  RBRACK (111) 238 307 310 314 315 316 317 318 345
  LBRACE (112) 50 51 331 332
  RBRACE (113) 50 51 331 332
  LABEL (114) 67
  LABEL_SET (115) 68
  LABEL_POP (116) 69
  SYSTEM (117) 237 238
  ADDRESS (118) 319
  LPOS (119) 43
  JPOS (120) 44
  false (121) 325
  FUNCTION (122) 130 131 132 133
  OPERATION (123) 315 316 317 318
  USING (124) 126
  IMPORT (125) 127 128
  COMPILE (126) 127
  INLINE (127) 130 131
  ARROW (128) 211 212 213
  DEFAULTPOS (129) 211
  POSEATTR (130) 233
  POSEREVERSE (131) 227
  SPHERE (132) 228
  POLAR (133) 229
  ORIGIN (134) 230
  FIX (135) 236
  LOCALSTACK (136) 204
  LOCALREG (137) 311
  LOCALPOSE (138) 312
  LOCALFLAG (139) 313

--------- State ---------

state 0


  COMMENT       shift, and go to state 95
  MESSAGE       shift, and go to state 96
  WARNING       shift, and go to state 97
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 93
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 98
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 87
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 86
  LOCALSTACK    shift, and go to state 84
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  var_or_indirect  go to state 85
  assignable_range  go to state 88
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92

state 1


  $end          shift, and go to state 99


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 95
  MESSAGE       shift, and go to state 96
  WARNING       shift, and go to state 97
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 93
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 98
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 87
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 86
  LOCALSTACK    shift, and go to state 84
  $default      reduce using rule 1 (program)

  statement     go to state 100
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  var_or_indirect  go to state 85
  assignable_range  go to state 88
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 95
  COMMENT       [reduce using rule 326 (terminator)]
  NEWLINE       shift, and go to state 102
  NEWLINE       [reduce using rule 326 (terminator)]
  false         shift, and go to state 104
  $default      reduce using rule 326 (terminator)

  terminator    go to state 101
  comment       go to state 103

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 103) var_or_indirect : var_system _

  EQUAL         reduce using rule 103 (var_or_indirect)
  PLUS          reduce using rule 103 (var_or_indirect)
  MINUS         reduce using rule 103 (var_or_indirect)
  STAR          reduce using rule 103 (var_or_indirect)
  SLASH         reduce using rule 103 (var_or_indirect)
  ARROW         reduce using rule 103 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 105


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 106


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 107


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 108


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 109
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 114
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 115


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 116


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 117


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  68) label : LABEL_SET _ LPAREN case_allowed_condition RPAREN

  LPAREN        shift, and go to state 118


state 51

  69) label : LABEL_POP _

  $default      reduce using rule 69 (label)


state 52

  71) use_statement : FANUC_USE _ indirectable
  72) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  73) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  LPAREN        shift, and go to state 120

  indirectable  go to state 119
  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 53

  74) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  WORD          [reduce using rule 193 (optional_arg)]
  $default      reduce using rule 193 (optional_arg)

  optional_arg  go to state 126
  number        go to state 127
  var           go to state 128
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 54

  75) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  expression    go to state 129
  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 55

  76) function_call : WORD _
 205) definition : WORD _ ASSIGN definable
 220) var_without_namespaces : WORD _
 221) var_without_namespaces : WORD _ var_method_modifiers
 245) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 152
  DOT           shift, and go to state 155
  COLON         shift, and go to state 156
  LPAREN        reduce using rule 76 (function_call)
  $default      reduce using rule 220 (var_without_namespaces)

  var_method_modifiers  go to state 153
  var_method_modifier  go to state 154

state 56

  77) function_call : namespaces _ WORD
 222) var_with_namespaces : namespaces _ var_without_namespaces
 244) namespaces : namespaces _ ns

  WORD          shift, and go to state 157

  var_without_namespaces  go to state 158
  ns            go to state 159

state 57

  78) basic_program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 160


state 58

  79) program_call : basic_program_call _

  $default      reduce using rule 79 (program_call)


state 59

  80) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 161

  namespaces    go to state 162
  function_call  go to state 163
  ns            go to state 92

state 60

  81) program_call : CALL _ var_or_indirect LPAREN args RPAREN

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 164
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 61

  95) return_statement : RETURN _ LPAREN expression RPAREN
  96) return_statement : RETURN _

  LPAREN        shift, and go to state 165
  LPAREN        [reduce using rule 96 (return_statement)]
  $default      reduce using rule 96 (return_statement)


state 62

  98) io_method : IO_METHOD _ var_or_indirect
  99) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
 100) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  LPAREN        shift, and go to state 167
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 166
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 63

 101) var_or_indirect : var _
 216) assignable_range : var _ RANGE var
 217) assignable_range : var _

  RANGE         shift, and go to state 168
  EQUAL         [reduce using rule 217 (assignable_range)]
  $default      reduce using rule 101 (var_or_indirect)


state 64

 102) var_or_indirect : indirect_thing _

  $default      reduce using rule 102 (var_or_indirect)


state 65

 104) jump : JUMP _ label

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 169

state 66

 105) conditional : IF _ expression block elsif_conditions else_block END
 107) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 170
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 67

 106) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 171
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 68

 116) forloop : FOR _ int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR _ int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93

  int_or_var    go to state 172
  integer       go to state 173
  var           go to state 174
  indirect_thing  go to state 175
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 69

 118) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 176
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 70

 126) using_statement : USING _ word_list

  WORD          shift, and go to state 180
  COMMA         shift, and go to state 179

  word_tuple    go to state 177
  word_list     go to state 178

state 71

 127) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 181


state 72

 128) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 180
  COMMA         shift, and go to state 179

  word_tuple    go to state 177
  word_list     go to state 182

state 73

 129) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 183


state 74

 130) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 131) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 184


state 75

 132) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 133) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 185


state 76

 134) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 112

  var           go to state 186
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 77

 144) inline_conditional : inlineable _
 145) inline_conditional : inlineable _ IF expression
 146) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 187
  IF            [reduce using rule 144 (inline_conditional)]
  UNLESS        shift, and go to state 188
  UNLESS        [reduce using rule 144 (inline_conditional)]
  $default      reduce using rule 144 (inline_conditional)


state 78

 147) inlineable : jump _

  $default      reduce using rule 147 (inlineable)


state 79

 148) inlineable : assignment _

  $default      reduce using rule 148 (inlineable)


state 80

 149) inlineable : io_method _

  $default      reduce using rule 149 (inlineable)


state 81

 150) inlineable : program_call _

  $default      reduce using rule 150 (inlineable)


state 82

 153) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 154) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 189


state 83

 203) label_definition : label _

  $default      reduce using rule 203 (label_definition)


state 84

 204) definition : LOCALSTACK _ ASSIGN definable

  ASSIGN        shift, and go to state 190


state 85

 206) assignment : var_or_indirect _ EQUAL expression
 207) assignment : var_or_indirect _ PLUS EQUAL expression
 208) assignment : var_or_indirect _ MINUS EQUAL expression
 209) assignment : var_or_indirect _ STAR EQUAL expression
 210) assignment : var_or_indirect _ SLASH EQUAL expression
 212) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 191
  PLUS          shift, and go to state 192
  MINUS         shift, and go to state 193
  STAR          shift, and go to state 194
  SLASH         shift, and go to state 195
  ARROW         shift, and go to state 196


state 86

 211) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 155

  var_method_modifiers  go to state 197
  var_method_modifier  go to state 154

state 87

 213) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 112

  assignable_range  go to state 198
  var           go to state 199
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 88

 214) position_assignment : assignable_range _ EQUAL assignable_range
 215) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 200


state 89

 218) var : var_without_namespaces _

  $default      reduce using rule 218 (var)


state 90

 219) var : var_with_namespaces _

  $default      reduce using rule 219 (var)


state 91

 237) var_system : SYSTEM _ WORD var_system_modifers
 238) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 201


state 92

 243) namespaces : ns _

  $default      reduce using rule 243 (namespaces)


state 93

 279) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 280) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 202


state 94

 319) address : ADDRESS _ var

  WORD          shift, and go to state 112

  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  var           go to state 203

state 95

 320) comment : COMMENT _

  $default      reduce using rule 320 (comment)


state 96

 321) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 204


state 97

 322) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 205


state 98

 329) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  sn            go to state 207
  swallow_newlines  go to state 208

state 99


  $end          shift, and go to state 209


state 100

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 95
  COMMENT       [reduce using rule 326 (terminator)]
  NEWLINE       shift, and go to state 102
  NEWLINE       [reduce using rule 326 (terminator)]
  false         shift, and go to state 104
  $default      reduce using rule 326 (terminator)

  terminator    go to state 210
  comment       go to state 103

state 101

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 102

 323) terminator : NEWLINE _

  $default      reduce using rule 323 (terminator)


state 103

 324) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 211
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 212

state 104

 325) terminator : false _

  $default      reduce using rule 325 (terminator)


state 105

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 213
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 106

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 214
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 107

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 216
  TRUE_FALSE    shift, and go to state 217
  ON_OFF        shift, and go to state 218

  tp_header_value  go to state 215

state 108

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  sn            go to state 219
  swallow_newlines  go to state 208

state 109

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 110

 101) var_or_indirect : var _

  $default      reduce using rule 101 (var_or_indirect)


state 111

 103) var_or_indirect : var_system _

  $default      reduce using rule 103 (var_or_indirect)


state 112

 220) var_without_namespaces : WORD _
 221) var_without_namespaces : WORD _ var_method_modifiers
 245) ns : WORD _ COLON COLON

  DOT           shift, and go to state 155
  COLON         shift, and go to state 156
  $default      reduce using rule 220 (var_without_namespaces)

  var_method_modifiers  go to state 153
  var_method_modifier  go to state 154

state 113

 222) var_with_namespaces : namespaces _ var_without_namespaces
 244) namespaces : namespaces _ ns

  WORD          shift, and go to state 112

  var_without_namespaces  go to state 158
  ns            go to state 159

state 114

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 115

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 116

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  indirectable  go to state 220
  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 117

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  expression    go to state 221
  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 118

  68) label : LABEL_SET LPAREN _ case_allowed_condition RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  case_allowed_condition  go to state 222
  number        go to state 223
  var           go to state 224
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 119

  71) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 71 (use_statement)


state 120

  72) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  73) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  indirectable  go to state 225
  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 121

 189) indirectable : number _

  $default      reduce using rule 189 (indirectable)


state 122

 190) indirectable : var _

  $default      reduce using rule 190 (indirectable)


state 123

 285) number : integer _

  $default      reduce using rule 285 (number)


state 124

 286) number : REAL _

  $default      reduce using rule 286 (number)


state 125

 287) integer : DIGIT _

  $default      reduce using rule 287 (integer)


state 126

  74) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 74 (collguard_statement)


state 127

 191) optional_arg : number _

  $default      reduce using rule 191 (optional_arg)


state 128

 192) optional_arg : var _

  $default      reduce using rule 192 (optional_arg)


state 129

  75) set_skip_statement : SET_SKIP_CONDITION expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 75 (set_skip_statement)

  operator      go to state 226

state 130

  76) function_call : WORD _
 220) var_without_namespaces : WORD _
 221) var_without_namespaces : WORD _ var_method_modifiers
 245) ns : WORD _ COLON COLON

  DOT           shift, and go to state 155
  COLON         shift, and go to state 156
  LPAREN        reduce using rule 76 (function_call)
  LPAREN        [reduce using rule 220 (var_without_namespaces)]
  $default      reduce using rule 220 (var_without_namespaces)

  var_method_modifiers  go to state 153
  var_method_modifier  go to state 154

state 131

 246) expression : unary_expression _

  $default      reduce using rule 246 (expression)


state 132

 247) expression : binary_expression _

  $default      reduce using rule 247 (expression)


state 133

 248) unary_expression : factor _

  $default      reduce using rule 248 (unary_expression)


state 134

 249) unary_expression : address _

  $default      reduce using rule 249 (unary_expression)


state 135

 250) unary_expression : BANG _ factor

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  OPERATION     shift, and go to state 151

  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  factor        go to state 241
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 136

 251) unary_expression : basic_program_call _

  $default      reduce using rule 251 (unary_expression)


state 137

 267) factor : number _

  $default      reduce using rule 267 (factor)


state 138

 268) factor : signed_number _

  $default      reduce using rule 268 (factor)


state 139

 269) factor : operation _

  $default      reduce using rule 269 (factor)


state 140

 270) factor : var _

  $default      reduce using rule 270 (factor)


state 141

 271) factor : signed_var _

  $default      reduce using rule 271 (factor)


state 142

 272) factor : var_system _

  $default      reduce using rule 272 (factor)


state 143

 273) factor : indirect_thing _

  $default      reduce using rule 273 (factor)


state 144

 274) factor : paren_expr _

  $default      reduce using rule 274 (factor)


state 145

 275) factor : booleans _

  $default      reduce using rule 275 (factor)


state 146

 276) booleans : TRUE_FALSE _

  $default      reduce using rule 276 (booleans)


state 147

 277) booleans : ON_OFF _

  $default      reduce using rule 277 (booleans)


state 148

 278) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  expression    go to state 242
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 149

 281) signed_number : sign _ DIGIT
 282) signed_number : sign _ REAL
 283) signed_var : sign _ var

  REAL          shift, and go to state 244
  DIGIT         shift, and go to state 243
  WORD          shift, and go to state 112

  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  var           go to state 245

state 150

 284) sign : MINUS _

  $default      reduce using rule 284 (sign)


state 151

 315) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 316) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 317) operation : OPERATION _ LBRACK signed_number RBRACK
 318) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 246


state 152

 205) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 265
  OUTPUT        shift, and go to state 266
  NUMREG        shift, and go to state 263
  POSREG        shift, and go to state 264
  VREG          shift, and go to state 261
  SREG          shift, and go to state 257
  ARG           shift, and go to state 260
  UALM          shift, and go to state 258
  TOOLREG       shift, and go to state 268
  FRAMEREG      shift, and go to state 269
  STRING        shift, and go to state 247
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  MINUS         shift, and go to state 150
  POSITION      shift, and go to state 262
  TIMER         shift, and go to state 259
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LOCALREG      shift, and go to state 271
  LOCALPOSE     shift, and go to state 272
  LOCALFLAG     shift, and go to state 273

  definable     go to state 248
  sign          go to state 249
  integer       go to state 123
  reg           go to state 250
  number        go to state 251
  signed_number  go to state 252
  string        go to state 253
  framereg      go to state 254
  booleans      go to state 255
  localvars     go to state 256
  reg_types     go to state 267
  frametype     go to state 270
  local_types   go to state 274

state 153

 221) var_without_namespaces : WORD var_method_modifiers _
 224) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 155
  $default      reduce using rule 221 (var_without_namespaces)

  var_method_modifier  go to state 275

state 154

 223) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 223 (var_method_modifiers)


state 155

 231) var_method_modifier : DOT _ swallow_newlines WORD
 232) var_method_modifier : DOT _ swallow_newlines group_statement
 233) var_method_modifier : DOT _ swallow_newlines POSEATTR
 234) var_method_modifier : DOT _ swallow_newlines OFFSET
 235) var_method_modifier : DOT _ swallow_newlines coord_system
 236) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 276

state 156

 245) ns : WORD COLON _ COLON

  COLON         shift, and go to state 277


state 157

  77) function_call : namespaces WORD _
 220) var_without_namespaces : WORD _
 221) var_without_namespaces : WORD _ var_method_modifiers
 245) ns : WORD _ COLON COLON

  DOT           shift, and go to state 155
  COLON         shift, and go to state 156
  LPAREN        reduce using rule 77 (function_call)
  LPAREN        [reduce using rule 220 (var_without_namespaces)]
  $default      reduce using rule 220 (var_without_namespaces)

  var_method_modifiers  go to state 153
  var_method_modifier  go to state 154

state 158

 222) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 222 (var_with_namespaces)


state 159

 244) namespaces : namespaces ns _

  $default      reduce using rule 244 (namespaces)


state 160

  78) basic_program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 247
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151
  $default      reduce using rule 84 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 278
  arg           go to state 279
  number        go to state 280
  signed_number  go to state 281
  var           go to state 282
  string        go to state 283
  address       go to state 284
  expression    go to state 285
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  basic_program_call  go to state 136
  operation     go to state 139
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 161

  76) function_call : WORD _
 245) ns : WORD _ COLON COLON

  COLON         shift, and go to state 156
  $default      reduce using rule 76 (function_call)


state 162

  77) function_call : namespaces _ WORD
 244) namespaces : namespaces _ ns

  WORD          shift, and go to state 286

  ns            go to state 159

state 163

  80) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 287


state 164

  81) program_call : CALL var_or_indirect _ LPAREN args RPAREN

  LPAREN        shift, and go to state 288


state 165

  95) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 289
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 166

  98) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 98 (io_method)


state 167

  99) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
 100) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var_or_indirect  go to state 290
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 168

 216) assignable_range : var RANGE _ var

  WORD          shift, and go to state 112

  var           go to state 291
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 169

 104) jump : JUMP label _

  $default      reduce using rule 104 (jump)


state 170

 105) conditional : IF expression _ block elsif_conditions else_block END
 107) conditional_block : IF expression _ THEN block elsif_block else_block END
 252) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 292
  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  THEN          shift, and go to state 294

  block         go to state 293
  operator      go to state 226

state 171

 106) conditional : UNLESS expression _ block else_block END
 252) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 292
  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239

  block         go to state 295
  operator      go to state 226

state 172

 116) forloop : FOR int_or_var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 296


state 173

 119) int_or_var : integer _

  $default      reduce using rule 119 (int_or_var)


state 174

 120) int_or_var : var _

  $default      reduce using rule 120 (int_or_var)


state 175

 121) int_or_var : indirect_thing _

  $default      reduce using rule 121 (int_or_var)


state 176

 118) while_loop : WHILE expression _ block END
 252) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 292
  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239

  block         go to state 297
  operator      go to state 226

state 177

 122) word_list : word_tuple _

  $default      reduce using rule 122 (word_list)


state 178

 123) word_list : word_list _ word_tuple
 126) using_statement : USING word_list _

  WORD          shift, and go to state 180
  WORD          [reduce using rule 126 (using_statement)]
  COMMA         shift, and go to state 179
  $default      reduce using rule 126 (using_statement)

  word_tuple    go to state 298

state 179

 124) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 299


state 180

 125) word_tuple : WORD _

  $default      reduce using rule 125 (word_tuple)


state 181

 127) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 180
  COMMA         shift, and go to state 179

  word_tuple    go to state 177
  word_list     go to state 300

state 182

 123) word_list : word_list _ word_tuple
 128) import_statement : IMPORT word_list _

  WORD          shift, and go to state 180
  WORD          [reduce using rule 128 (import_statement)]
  COMMA         shift, and go to state 179
  $default      reduce using rule 128 (import_statement)

  word_tuple    go to state 298

state 183

 129) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 292

  block         go to state 301

state 184

 130) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 131) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 302


state 185

 132) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 133) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 303


state 186

 134) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 304

state 187

 145) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 305
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 188

 146) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 306
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 189

 153) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 154) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 307

state 190

 204) definition : LOCALSTACK ASSIGN _ definable

  INPUT         shift, and go to state 265
  OUTPUT        shift, and go to state 266
  NUMREG        shift, and go to state 263
  POSREG        shift, and go to state 264
  VREG          shift, and go to state 261
  SREG          shift, and go to state 257
  ARG           shift, and go to state 260
  UALM          shift, and go to state 258
  TOOLREG       shift, and go to state 268
  FRAMEREG      shift, and go to state 269
  STRING        shift, and go to state 247
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  MINUS         shift, and go to state 150
  POSITION      shift, and go to state 262
  TIMER         shift, and go to state 259
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LOCALREG      shift, and go to state 271
  LOCALPOSE     shift, and go to state 272
  LOCALFLAG     shift, and go to state 273

  definable     go to state 308
  sign          go to state 249
  integer       go to state 123
  reg           go to state 250
  number        go to state 251
  signed_number  go to state 252
  string        go to state 253
  framereg      go to state 254
  booleans      go to state 255
  localvars     go to state 256
  reg_types     go to state 267
  frametype     go to state 270
  local_types   go to state 274

state 191

 206) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 309
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 192

 207) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 310


state 193

 208) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 311


state 194

 209) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 312


state 195

 210) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 313


state 196

 212) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 315

  array         go to state 314

state 197

 211) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 224) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 155
  ARROW         shift, and go to state 316

  var_method_modifier  go to state 275

state 198

 213) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 317


state 199

 216) assignable_range : var _ RANGE var
 217) assignable_range : var _

  RANGE         shift, and go to state 168
  $default      reduce using rule 217 (assignable_range)


state 200

 214) position_assignment : assignable_range EQUAL _ assignable_range
 215) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 112
  LPAREN        shift, and go to state 319

  assignable_range  go to state 318
  var           go to state 199
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 201

 237) var_system : SYSTEM WORD _ var_system_modifers
 238) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 323
  DOT           [reduce using rule 241 (var_system_modifers)]
  LBRACK        shift, and go to state 321
  $default      reduce using rule 241 (var_system_modifers)

  var_system_modifers  go to state 320
  var_system_modifer  go to state 322

state 202

 279) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 280) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 324


state 203

 319) address : ADDRESS var _

  $default      reduce using rule 319 (address)


state 204

 321) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 325


state 205

 322) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 326


state 206

 327) swallow_newlines : NEWLINE _

  $default      reduce using rule 327 (swallow_newlines)


state 207

 329) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 328

  hash          go to state 327

state 208

 330) sn : swallow_newlines _

  $default      reduce using rule 330 (sn)


state 209


  $default      accept


state 210

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 211

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 212

 324) terminator : comment optional_newline _

  $default      reduce using rule 324 (terminator)


state 213

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 329


state 214

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 330


state 215

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 216

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 217

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 218

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 219

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 331

  tp_tool_methods  go to state 332

state 220

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 333


state 221

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  RPAREN        shift, and go to state 334

  operator      go to state 226

state 222

  68) label : LABEL_SET LPAREN case_allowed_condition _ RPAREN

  RPAREN        shift, and go to state 335


state 223

 138) case_allowed_condition : number _

  $default      reduce using rule 138 (case_allowed_condition)


state 224

 139) case_allowed_condition : var _

  $default      reduce using rule 139 (case_allowed_condition)


state 225

  72) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  73) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 336
  COMMA         shift, and go to state 337


state 226

 252) binary_expression : expression operator _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  expression    go to state 338
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 227

 253) operator : EEQUAL _

  $default      reduce using rule 253 (operator)


state 228

 254) operator : NOTEQUAL _

  $default      reduce using rule 254 (operator)


state 229

 255) operator : LT _

  $default      reduce using rule 255 (operator)


state 230

 256) operator : GT _

  $default      reduce using rule 256 (operator)


state 231

 257) operator : GTE _

  $default      reduce using rule 257 (operator)


state 232

 258) operator : LTE _

  $default      reduce using rule 258 (operator)


state 233

 259) operator : PLUS _

  $default      reduce using rule 259 (operator)


state 234

 260) operator : MINUS _

  $default      reduce using rule 260 (operator)


state 235

 261) operator : OR _

  $default      reduce using rule 261 (operator)


state 236

 262) operator : STAR _

  $default      reduce using rule 262 (operator)


state 237

 263) operator : SLASH _

  $default      reduce using rule 263 (operator)


state 238

 264) operator : DIV _

  $default      reduce using rule 264 (operator)


state 239

 265) operator : MOD _

  $default      reduce using rule 265 (operator)


state 240

 266) operator : AND _

  $default      reduce using rule 266 (operator)


state 241

 250) unary_expression : BANG factor _

  $default      reduce using rule 250 (unary_expression)


state 242

 252) binary_expression : expression _ operator expression
 278) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  RPAREN        shift, and go to state 339

  operator      go to state 226

state 243

 281) signed_number : sign DIGIT _

  $default      reduce using rule 281 (signed_number)


state 244

 282) signed_number : sign REAL _

  $default      reduce using rule 282 (signed_number)


state 245

 283) signed_var : sign var _

  $default      reduce using rule 283 (signed_var)


state 246

 315) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 316) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 317) operation : OPERATION LBRACK _ signed_number RBRACK
 318) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  sign          go to state 249
  integer       go to state 123
  var_or_indirect  go to state 340
  signed_number  go to state 341
  number        go to state 342

state 247

  97) string : STRING _

  $default      reduce using rule 97 (string)


state 248

 205) definition : WORD ASSIGN definable _

  $default      reduce using rule 205 (definition)


state 249

 281) signed_number : sign _ DIGIT
 282) signed_number : sign _ REAL

  REAL          shift, and go to state 244
  DIGIT         shift, and go to state 243


state 250

 288) definable : reg _

  $default      reduce using rule 288 (definable)


state 251

 289) definable : number _

  $default      reduce using rule 289 (definable)


state 252

 290) definable : signed_number _

  $default      reduce using rule 290 (definable)


state 253

 291) definable : string _

  $default      reduce using rule 291 (definable)


state 254

 292) definable : framereg _

  $default      reduce using rule 292 (definable)


state 255

 293) definable : booleans _

  $default      reduce using rule 293 (definable)


state 256

 294) definable : localvars _

  $default      reduce using rule 294 (definable)


state 257

 297) reg_types : SREG _

  $default      reduce using rule 297 (reg_types)


state 258

 298) reg_types : UALM _

  $default      reduce using rule 298 (reg_types)


state 259

 299) reg_types : TIMER _

  $default      reduce using rule 299 (reg_types)


state 260

 300) reg_types : ARG _

  $default      reduce using rule 300 (reg_types)


state 261

 301) reg_types : VREG _

  $default      reduce using rule 301 (reg_types)


state 262

 302) reg_types : POSITION _

  $default      reduce using rule 302 (reg_types)


state 263

 303) reg_types : NUMREG _

  $default      reduce using rule 303 (reg_types)


state 264

 304) reg_types : POSREG _

  $default      reduce using rule 304 (reg_types)


state 265

 305) reg_types : INPUT _

  $default      reduce using rule 305 (reg_types)


state 266

 306) reg_types : OUTPUT _

  $default      reduce using rule 306 (reg_types)


state 267

 307) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 343


state 268

 308) frametype : TOOLREG _

  $default      reduce using rule 308 (frametype)


state 269

 309) frametype : FRAMEREG _

  $default      reduce using rule 309 (frametype)


state 270

 310) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 344


state 271

 311) local_types : LOCALREG _

  $default      reduce using rule 311 (local_types)


state 272

 312) local_types : LOCALPOSE _

  $default      reduce using rule 312 (local_types)


state 273

 313) local_types : LOCALFLAG _

  $default      reduce using rule 313 (local_types)


state 274

 314) localvars : local_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 345


state 275

 224) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 224 (var_method_modifiers)


state 276

 231) var_method_modifier : DOT swallow_newlines _ WORD
 232) var_method_modifier : DOT swallow_newlines _ group_statement
 233) var_method_modifier : DOT swallow_newlines _ POSEATTR
 234) var_method_modifier : DOT swallow_newlines _ OFFSET
 235) var_method_modifier : DOT swallow_newlines _ coord_system
 236) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 353
  GROUP         shift, and go to state 346
  WORD          shift, and go to state 350
  POSEATTR      shift, and go to state 352
  SPHERE        shift, and go to state 347
  POLAR         shift, and go to state 348
  ORIGIN        shift, and go to state 349
  FIX           shift, and go to state 355

  group_statement  go to state 351
  coord_system  go to state 354

state 277

 245) ns : WORD COLON COLON _

  $default      reduce using rule 245 (ns)


state 278

  78) basic_program_call : function_call LPAREN args _ RPAREN
  83) args : args _ COMMA arg

  RPAREN        shift, and go to state 356
  COMMA         shift, and go to state 357


state 279

  82) args : arg _

  $default      reduce using rule 82 (args)


state 280

  85) arg : number _
 267) factor : number _

  RPAREN        reduce using rule 85 (arg)
  RPAREN        [reduce using rule 267 (factor)]
  COMMA         reduce using rule 85 (arg)
  COMMA         [reduce using rule 267 (factor)]
  $default      reduce using rule 267 (factor)


state 281

  86) arg : signed_number _
 268) factor : signed_number _

  RPAREN        reduce using rule 86 (arg)
  RPAREN        [reduce using rule 268 (factor)]
  COMMA         reduce using rule 86 (arg)
  COMMA         [reduce using rule 268 (factor)]
  $default      reduce using rule 268 (factor)


state 282

  87) arg : var _
 270) factor : var _

  RPAREN        reduce using rule 87 (arg)
  RPAREN        [reduce using rule 270 (factor)]
  COMMA         reduce using rule 87 (arg)
  COMMA         [reduce using rule 270 (factor)]
  $default      reduce using rule 270 (factor)


state 283

  88) arg : string _

  $default      reduce using rule 88 (arg)


state 284

  89) arg : address _
 249) unary_expression : address _

  RPAREN        reduce using rule 89 (arg)
  RPAREN        [reduce using rule 249 (unary_expression)]
  COMMA         reduce using rule 89 (arg)
  COMMA         [reduce using rule 249 (unary_expression)]
  $default      reduce using rule 249 (unary_expression)


state 285

  90) arg : expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 90 (arg)

  operator      go to state 226

state 286

  77) function_call : namespaces WORD _
 245) ns : WORD _ COLON COLON

  COLON         shift, and go to state 156
  $default      reduce using rule 77 (function_call)


state 287

  80) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 247
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151
  $default      reduce using rule 84 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 358
  arg           go to state 279
  number        go to state 280
  signed_number  go to state 281
  var           go to state 282
  string        go to state 283
  address       go to state 284
  expression    go to state 285
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  basic_program_call  go to state 136
  operation     go to state 139
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 288

  81) program_call : CALL var_or_indirect LPAREN _ args RPAREN

  STRING        shift, and go to state 247
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151
  $default      reduce using rule 84 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 359
  arg           go to state 279
  number        go to state 280
  signed_number  go to state 281
  var           go to state 282
  string        go to state 283
  address       go to state 284
  expression    go to state 285
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  basic_program_call  go to state 136
  operation     go to state 139
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 289

  95) return_statement : RETURN LPAREN expression _ RPAREN
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  RPAREN        shift, and go to state 360

  operator      go to state 226

state 290

  99) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
 100) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 361
  COMMA         shift, and go to state 362


state 291

 216) assignable_range : var RANGE var _

  $default      reduce using rule 216 (assignable_range)


state 292

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 95
  MESSAGE       shift, and go to state 96
  WARNING       shift, and go to state 97
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 93
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 98
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 87
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 86
  LOCALSTACK    shift, and go to state 84

  statement     go to state 3
  statements    go to state 363
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  var_or_indirect  go to state 85
  assignable_range  go to state 88
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92

state 293

 105) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 366
  ELSIF         [reduce using rule 110 (elsif_conditions)]
  $default      reduce using rule 110 (elsif_conditions)

  elsif_conditions  go to state 364
  elsif_condition  go to state 365

state 294

 107) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 292

  block         go to state 367

state 295

 106) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 369
  $default      reduce using rule 152 (else_block)

  else_block    go to state 368

state 296

 116) forloop : FOR int_or_var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 370


state 297

 118) while_loop : WHILE expression block _ END

  END           shift, and go to state 371


state 298

 123) word_list : word_list word_tuple _

  $default      reduce using rule 123 (word_list)


state 299

 124) word_tuple : COMMA WORD _

  $default      reduce using rule 124 (word_tuple)


state 300

 123) word_list : word_list _ word_tuple
 127) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 180
  WORD          [reduce using rule 127 (compile_statement)]
  COMMA         shift, and go to state 179
  $default      reduce using rule 127 (compile_statement)

  word_tuple    go to state 298

state 301

 129) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 372


state 302

 130) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 131) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 373


state 303

 132) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 133) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 376
  $default      reduce using rule 93 (program_vars)

  program_var   go to state 374
  program_vars  go to state 375

state 304

 134) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 379

  case_conditions  go to state 377
  case_condition  go to state 378

state 305

 145) inline_conditional : inlineable IF expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 145 (inline_conditional)

  operator      go to state 226

state 306

 146) inline_conditional : inlineable UNLESS expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 146 (inline_conditional)

  operator      go to state 226

state 307

 153) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 154) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 380
  MID           shift, and go to state 381


state 308

 204) definition : LOCALSTACK ASSIGN definable _

  $default      reduce using rule 204 (definition)


state 309

 206) assignment : var_or_indirect EQUAL expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 206 (assignment)

  operator      go to state 226

state 310

 207) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 382
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 311

 208) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 383
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 312

 209) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 384
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 313

 210) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 385
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 314

 212) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 212 (position_assignment)


state 315

 345) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 208
  sn            go to state 386

state 316

 211) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 315

  array         go to state 387

state 317

 213) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 155

  var_method_modifiers  go to state 388
  var_method_modifier  go to state 154

state 318

 214) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 214 (position_assignment)


state 319

 215) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 112

  assignable_range  go to state 389
  var           go to state 199
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 320

 237) var_system : SYSTEM WORD var_system_modifers _
 240) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 323
  DOT           [reduce using rule 237 (var_system)]
  $default      reduce using rule 237 (var_system)

  var_system_modifer  go to state 390

state 321

 238) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 125

  integer       go to state 391

state 322

 239) var_system_modifers : var_system_modifer _

  $default      reduce using rule 239 (var_system_modifers)


state 323

 242) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 91

  var_system    go to state 392

state 324

 279) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 280) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 393


state 325

 321) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 394


state 326

 322) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 395


state 327

 329) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  sn            go to state 396
  swallow_newlines  go to state 208

state 328

 331) hash : LBRACE _ sn hash_attributes sn RBRACE
 332) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 208
  sn            go to state 397

state 329

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 330

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 331

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  sn            go to state 398
  swallow_newlines  go to state 208

state 332

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 333

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 399


state 334

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 400
  $default      reduce using rule 60 (wait_statement)


state 335

  68) label : LABEL_SET LPAREN case_allowed_condition RPAREN _

  $default      reduce using rule 68 (label)


state 336

  72) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 72 (use_statement)


state 337

  73) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 346

  group_statement  go to state 401

state 338

 252) binary_expression : expression _ operator expression
 252) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 227
  EEQUAL        [reduce using rule 252 (binary_expression)]
  NOTEQUAL      shift, and go to state 228
  NOTEQUAL      [reduce using rule 252 (binary_expression)]
  GTE           shift, and go to state 231
  GTE           [reduce using rule 252 (binary_expression)]
  LTE           shift, and go to state 232
  LTE           [reduce using rule 252 (binary_expression)]
  LT            shift, and go to state 229
  LT            [reduce using rule 252 (binary_expression)]
  GT            shift, and go to state 230
  GT            [reduce using rule 252 (binary_expression)]
  PLUS          shift, and go to state 233
  PLUS          [reduce using rule 252 (binary_expression)]
  MINUS         shift, and go to state 234
  MINUS         [reduce using rule 252 (binary_expression)]
  STAR          shift, and go to state 236
  STAR          [reduce using rule 252 (binary_expression)]
  SLASH         shift, and go to state 237
  SLASH         [reduce using rule 252 (binary_expression)]
  DIV           shift, and go to state 238
  DIV           [reduce using rule 252 (binary_expression)]
  AND           shift, and go to state 240
  AND           [reduce using rule 252 (binary_expression)]
  OR            shift, and go to state 235
  OR            [reduce using rule 252 (binary_expression)]
  MOD           shift, and go to state 239
  MOD           [reduce using rule 252 (binary_expression)]
  $default      reduce using rule 252 (binary_expression)

  operator      go to state 226

state 339

 278) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 278 (paren_expr)


state 340

 315) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 316) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 403
  RBRACK        shift, and go to state 402


state 341

 317) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 404


state 342

 318) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 405


state 343

 307) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 406

  definable_range  go to state 407

state 344

 310) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 408


state 345

 314) localvars : local_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 409


state 346

  70) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 410


state 347

 228) coord_system : SPHERE _

  $default      reduce using rule 228 (coord_system)


state 348

 229) coord_system : POLAR _

  $default      reduce using rule 229 (coord_system)


state 349

 230) coord_system : ORIGIN _

  $default      reduce using rule 230 (coord_system)


state 350

 231) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 231 (var_method_modifier)


state 351

 232) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 232 (var_method_modifier)


state 352

 233) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 233 (var_method_modifier)


state 353

 234) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 234 (var_method_modifier)


state 354

 235) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 235 (var_method_modifier)


state 355

 236) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 236 (var_method_modifier)


state 356

  78) basic_program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 78 (basic_program_call)


state 357

  83) args : args COMMA _ arg

  STRING        shift, and go to state 247
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  arg           go to state 411
  number        go to state 280
  signed_number  go to state 281
  var           go to state 282
  string        go to state 283
  address       go to state 284
  expression    go to state 285
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  basic_program_call  go to state 136
  operation     go to state 139
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 358

  80) program_call : RUN function_call LPAREN args _ RPAREN
  83) args : args _ COMMA arg

  RPAREN        shift, and go to state 412
  COMMA         shift, and go to state 357


state 359

  81) program_call : CALL var_or_indirect LPAREN args _ RPAREN
  83) args : args _ COMMA arg

  RPAREN        shift, and go to state 413
  COMMA         shift, and go to state 357


state 360

  95) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 95 (return_statement)


state 361

  99) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 99 (io_method)


state 362

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125

  number        go to state 414
  integer       go to state 123

state 363

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 95
  MESSAGE       shift, and go to state 96
  WARNING       shift, and go to state 97
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 93
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 98
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 87
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 86
  LOCALSTACK    shift, and go to state 84
  $default      reduce using rule 5 (block)

  statement     go to state 100
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  var_or_indirect  go to state 85
  assignable_range  go to state 88
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92

state 364

 105) conditional : IF expression block elsif_conditions _ else_block END
 109) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 369
  ELSIF         shift, and go to state 366
  $default      reduce using rule 152 (else_block)

  else_block    go to state 415
  elsif_condition  go to state 416

state 365

 108) elsif_conditions : elsif_condition _

  $default      reduce using rule 108 (elsif_conditions)


state 366

 111) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 417
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 367

 107) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 420
  ELSIF         [reduce using rule 114 (elsif_block)]
  $default      reduce using rule 114 (elsif_block)

  elsif_block   go to state 418
  elsif_block_condition  go to state 419

state 368

 106) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 421


state 369

 151) else_block : ELSE _ block

  NEWLINE       shift, and go to state 292

  block         go to state 422

state 370

 116) forloop : FOR int_or_var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93

  int_or_var    go to state 423
  integer       go to state 173
  var           go to state 174
  indirect_thing  go to state 175
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 371

 118) while_loop : WHILE expression block END _

  $default      reduce using rule 118 (while_loop)


state 372

 129) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 129 (namespace)


state 373

 130) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 131) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 376
  $default      reduce using rule 93 (program_vars)

  program_var   go to state 374
  program_vars  go to state 424

state 374

  91) program_vars : program_var _

  $default      reduce using rule 91 (program_vars)


state 375

  92) program_vars : program_vars _ COMMA program_var
 132) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 133) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 426
  COMMA         shift, and go to state 425


state 376

  94) program_var : WORD _

  $default      reduce using rule 94 (program_var)


state 377

 134) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 136) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 429
  WHEN          shift, and go to state 379
  $default      reduce using rule 141 (case_else)

  case_else     go to state 427
  case_condition  go to state 428

state 378

 135) case_conditions : case_condition _

  $default      reduce using rule 135 (case_conditions)


state 379

 137) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  case_allowed_condition  go to state 430
  number        go to state 223
  var           go to state 224
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 380

 153) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 431


state 381

 154) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 432


state 382

 207) assignment : var_or_indirect PLUS EQUAL expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 207 (assignment)

  operator      go to state 226

state 383

 208) assignment : var_or_indirect MINUS EQUAL expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 208 (assignment)

  operator      go to state 226

state 384

 209) assignment : var_or_indirect STAR EQUAL expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 209 (assignment)

  operator      go to state 226

state 385

 210) assignment : var_or_indirect SLASH EQUAL expression _
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  $default      reduce using rule 210 (assignment)

  operator      go to state 226

state 386

 345) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 433
  WORD          shift, and go to state 434
  MINUS         shift, and go to state 150
  TRUE_FALSE    shift, and go to state 438
  LBRACK        shift, and go to state 315
  LBRACE        shift, and go to state 328
  $default      reduce using rule 344 (optional_sign)

  hash          go to state 435
  array         go to state 436
  optional_sign  go to state 437
  sign          go to state 439
  array_values  go to state 440
  array_value   go to state 441
  hash_value    go to state 442

state 387

 211) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 211 (position_assignment)


state 388

 213) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 224) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 155
  ARROW         shift, and go to state 443

  var_method_modifier  go to state 275

state 389

 215) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 444


state 390

 240) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 240 (var_system_modifers)


state 391

 238) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 445


state 392

 242) var_system_modifer : DOT var_system _

  $default      reduce using rule 242 (var_system_modifer)


state 393

 279) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 280) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  indirectable  go to state 446
  integer       go to state 123

state 394

 321) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 321 (message)


state 395

 322) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 322 (warning)


state 396

 329) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 447


state 397

 331) hash : LBRACE sn _ hash_attributes sn RBRACE
 332) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 451
  RBRACE        shift, and go to state 449

  hash_attributes  go to state 448
  hash_attribute  go to state 450

state 398

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 455
  RBRACE        shift, and go to state 453

  tp_tool_attributes  go to state 452
  tp_tool_attribute  go to state 454

state 399

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 456


state 400

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  wait_modifier  go to state 457
  timeout_modifier  go to state 458
  after_modifier  go to state 459
  swallow_newlines  go to state 460

state 401

  73) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 461


state 402

 315) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 315 (operation)


state 403

 316) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  var_or_indirect  go to state 462

state 404

 317) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 317 (operation)


state 405

 318) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 318 (operation)


state 406

 295) definable_range : DIGIT _ RANGE DIGIT
 296) definable_range : DIGIT _

  RANGE         shift, and go to state 463
  $default      reduce using rule 296 (definable_range)


state 407

 307) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 464


state 408

 310) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 465


state 409

 314) localvars : local_types LBRACK RBRACK _

  $default      reduce using rule 314 (localvars)


state 410

  70) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 125

  integer       go to state 466

state 411

  83) args : args COMMA arg _

  $default      reduce using rule 83 (args)


state 412

  80) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 80 (program_call)


state 413

  81) program_call : CALL var_or_indirect LPAREN args RPAREN _

  $default      reduce using rule 81 (program_call)


state 414

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 467


state 415

 105) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 468


state 416

 109) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 109 (elsif_conditions)


state 417

 111) elsif_condition : ELSIF expression _ block
 252) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 292
  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239

  block         go to state 469
  operator      go to state 226

state 418

 107) conditional_block : IF expression THEN block elsif_block _ else_block END
 113) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 369
  ELSIF         shift, and go to state 420
  $default      reduce using rule 152 (else_block)

  else_block    go to state 470
  elsif_block_condition  go to state 471

state 419

 112) elsif_block : elsif_block_condition _

  $default      reduce using rule 112 (elsif_block)


state 420

 115) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 130
  BANG          shift, and go to state 135
  MINUS         shift, and go to state 150
  INDIRECT      shift, and go to state 93
  TRUE_FALSE    shift, and go to state 146
  ON_OFF        shift, and go to state 147
  LPAREN        shift, and go to state 148
  SYSTEM        shift, and go to state 91
  ADDRESS       shift, and go to state 94
  OPERATION     shift, and go to state 151

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 472
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92
  unary_expression  go to state 131
  binary_expression  go to state 132
  factor        go to state 133
  address       go to state 134
  basic_program_call  go to state 136
  number        go to state 137
  signed_number  go to state 138
  operation     go to state 139
  var           go to state 140
  signed_var    go to state 141
  var_system    go to state 142
  indirect_thing  go to state 143
  paren_expr    go to state 144
  booleans      go to state 145
  sign          go to state 149
  integer       go to state 123

state 421

 106) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 106 (conditional)


state 422

 151) else_block : ELSE block _

  $default      reduce using rule 151 (else_block)


state 423

 116) forloop : FOR int_or_var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 473
  DOWNTO        shift, and go to state 474


state 424

  92) program_vars : program_vars _ COMMA program_var
 130) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 131) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 475
  COMMA         shift, and go to state 425


state 425

  92) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 376

  program_var   go to state 476

state 426

 132) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 133) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 292
  COLON         shift, and go to state 478

  block         go to state 477

state 427

 134) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 479


state 428

 136) case_conditions : case_conditions case_condition _

  $default      reduce using rule 136 (case_conditions)


state 429

 140) case_else : ELSE _ block

  NEWLINE       shift, and go to state 292

  block         go to state 480

state 430

 137) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 292

  block         go to state 481

state 431

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_or_indirect  go to state 482
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 432

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_or_indirect  go to state 483
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 433

 336) hash_value : STRING _

  $default      reduce using rule 336 (hash_value)


state 434

 337) hash_value : WORD _

  $default      reduce using rule 337 (hash_value)


state 435

 338) hash_value : hash _

  $default      reduce using rule 338 (hash_value)


state 436

 339) hash_value : array _

  $default      reduce using rule 339 (hash_value)


state 437

 340) hash_value : optional_sign _ DIGIT
 341) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 485
  DIGIT         shift, and go to state 484


state 438

 342) hash_value : TRUE_FALSE _

  $default      reduce using rule 342 (hash_value)


state 439

 343) optional_sign : sign _

  $default      reduce using rule 343 (optional_sign)


state 440

 345) array : LBRACK sn array_values _ sn RBRACK
 347) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 206
  COMMA         shift, and go to state 487
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 208
  sn            go to state 486

state 441

 346) array_values : array_value _

  $default      reduce using rule 346 (array_values)


state 442

 348) array_value : hash_value _

  $default      reduce using rule 348 (array_value)


state 443

 213) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 315

  array         go to state 488

state 444

 215) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 491

  pose_range_modifiers  go to state 489
  pose_range_modifier  go to state 490

state 445

 238) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 323
  DOT           [reduce using rule 241 (var_system_modifers)]
  $default      reduce using rule 241 (var_system_modifers)

  var_system_modifers  go to state 492
  var_system_modifer  go to state 322

state 446

 279) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 280) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 493


state 447

 329) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 329 (position_data)


state 448

 331) hash : LBRACE sn hash_attributes _ sn RBRACE
 334) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 206
  COMMA         shift, and go to state 495
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 208
  sn            go to state 494

state 449

 332) hash : LBRACE sn RBRACE _

  $default      reduce using rule 332 (hash)


state 450

 333) hash_attributes : hash_attribute _

  $default      reduce using rule 333 (hash_attributes)


state 451

 335) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 496


state 452

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 206
  COMMA         shift, and go to state 498
  $default      reduce using rule 328 (swallow_newlines)

  sn            go to state 497
  swallow_newlines  go to state 208

state 453

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 454

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 455

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 499


state 456

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 457

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 500
  $default      reduce using rule 61 (wait_statement)


state 458

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 459

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 460

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 501
  AFTER         shift, and go to state 502


state 461

  73) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 73 (use_statement)


state 462

 316) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 503


state 463

 295) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 504


state 464

 307) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 307 (reg)


state 465

 310) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 310 (framereg)


state 466

  70) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 505


state 467

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 506


state 468

 105) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 105 (conditional)


state 469

 111) elsif_condition : ELSIF expression block _

  $default      reduce using rule 111 (elsif_condition)


state 470

 107) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 507


state 471

 113) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 113 (elsif_block)


state 472

 115) elsif_block_condition : ELSIF expression _ THEN block
 252) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 227
  NOTEQUAL      shift, and go to state 228
  GTE           shift, and go to state 231
  LTE           shift, and go to state 232
  LT            shift, and go to state 229
  GT            shift, and go to state 230
  PLUS          shift, and go to state 233
  MINUS         shift, and go to state 234
  STAR          shift, and go to state 236
  SLASH         shift, and go to state 237
  DIV           shift, and go to state 238
  AND           shift, and go to state 240
  OR            shift, and go to state 235
  MOD           shift, and go to state 239
  THEN          shift, and go to state 508

  operator      go to state 226

state 473

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93

  int_or_var    go to state 509
  integer       go to state 173
  var           go to state 174
  indirect_thing  go to state 175
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 474

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93

  int_or_var    go to state 510
  integer       go to state 173
  var           go to state 174
  indirect_thing  go to state 175
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 475

 130) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 292
  COLON         shift, and go to state 512

  block         go to state 511

state 476

  92) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 92 (program_vars)


state 477

 132) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 513


state 478

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 514


state 479

 134) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 134 (case_statement)


state 480

 140) case_else : ELSE block _

  $default      reduce using rule 140 (case_else)


state 481

 137) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 137 (case_condition)


state 482

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 515


state 483

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 516


state 484

 340) hash_value : optional_sign DIGIT _

  $default      reduce using rule 340 (hash_value)


state 485

 341) hash_value : optional_sign REAL _

  $default      reduce using rule 341 (hash_value)


state 486

 345) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 517


state 487

 347) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 208
  sn            go to state 518

state 488

 213) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 213 (position_assignment)


state 489

 215) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 226) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 491
  $default      reduce using rule 215 (position_assignment)

  pose_range_modifier  go to state 519

state 490

 225) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 225 (pose_range_modifiers)


state 491

 227) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 520

state 492

 238) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 240) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 323
  DOT           [reduce using rule 238 (var_system)]
  $default      reduce using rule 238 (var_system)

  var_system_modifer  go to state 390

state 493

 279) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 280) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 155
  $default      reduce using rule 279 (indirect_thing)

  var_method_modifier  go to state 154
  var_method_modifiers  go to state 521

state 494

 331) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 522


state 495

 334) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 208
  sn            go to state 523

state 496

 335) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 433
  WORD          shift, and go to state 434
  MINUS         shift, and go to state 150
  TRUE_FALSE    shift, and go to state 438
  LBRACK        shift, and go to state 315
  LBRACE        shift, and go to state 328
  $default      reduce using rule 344 (optional_sign)

  hash_value    go to state 524
  hash          go to state 435
  array         go to state 436
  optional_sign  go to state 437
  sign          go to state 439

state 497

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 525


state 498

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  sn            go to state 526
  swallow_newlines  go to state 208

state 499

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 433
  WORD          shift, and go to state 434
  MINUS         shift, and go to state 150
  TRUE_FALSE    shift, and go to state 438
  LBRACK        shift, and go to state 315
  LBRACE        shift, and go to state 328
  $default      reduce using rule 344 (optional_sign)

  hash_value    go to state 527
  hash          go to state 435
  array         go to state 436
  optional_sign  go to state 437
  sign          go to state 439

state 500

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  wait_modifier  go to state 528
  timeout_modifier  go to state 458
  after_modifier  go to state 459
  swallow_newlines  go to state 460

state 501

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 529


state 502

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 530


state 503

 316) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 316 (operation)


state 504

 295) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 295 (definable_range)


state 505

  70) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 70 (group_statement)


state 506

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 531


state 507

 107) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 107 (conditional_block)


state 508

 115) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 292

  block         go to state 532

state 509

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 533


state 510

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 534


state 511

 130) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 535


state 512

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 536


state 513

 132) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 132 (function)


state 514

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 292

  block         go to state 537

state 515

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 540

  motion_modifiers  go to state 538
  motion_modifier  go to state 539

state 516

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 541


state 517

 345) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 345 (array)


state 518

 347) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 433
  WORD          shift, and go to state 434
  MINUS         shift, and go to state 150
  TRUE_FALSE    shift, and go to state 438
  LBRACK        shift, and go to state 315
  LBRACE        shift, and go to state 328
  $default      reduce using rule 344 (optional_sign)

  hash          go to state 435
  array         go to state 436
  optional_sign  go to state 437
  sign          go to state 439
  array_value   go to state 542
  hash_value    go to state 442

state 519

 226) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 226 (pose_range_modifiers)


state 520

 227) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 543


state 521

 224) var_method_modifiers : var_method_modifiers _ var_method_modifier
 280) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 155
  $default      reduce using rule 280 (indirect_thing)

  var_method_modifier  go to state 275

state 522

 331) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 331 (hash)


state 523

 334) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 451

  hash_attribute  go to state 544

state 524

 335) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 335 (hash_attribute)


state 525

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 526

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 455

  tp_tool_attribute  go to state 545

state 527

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 528

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 529

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 546

state 530

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  indirectable  go to state 547
  number        go to state 121
  var           go to state 122
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 531

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 100 (io_method)


state 532

 115) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 115 (elsif_block_condition)


state 533

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 292

  block         go to state 548

state 534

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 292

  block         go to state 549

state 535

 130) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 130 (function)


state 536

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 292

  block         go to state 550

state 537

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 551


state 538

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 156) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 540
  $default      reduce using rule 153 (motion_statement)

  motion_modifier  go to state 552

state 539

 155) motion_modifiers : motion_modifier _

  $default      reduce using rule 155 (motion_modifiers)


state 540

 159) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 160) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 161) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 162) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 163) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 164) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 165) motion_modifier : DOT _ swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 166) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 167) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 168) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 553

state 541

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 206
  $default      reduce using rule 328 (swallow_newlines)

  swallow_newlines  go to state 554

state 542

 347) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 347 (array_values)


state 543

 227) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 227 (pose_range_modifier)


state 544

 334) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 334 (hash_attributes)


state 545

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 546

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 555


state 547

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 556


state 548

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 557


state 549

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 558


state 550

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 559


state 551

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 133 (function)


state 552

 156) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 156 (motion_modifiers)


state 553

 159) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 160) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 161) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 162) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 163) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 164) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 165) motion_modifier : DOT swallow_newlines _ DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 166) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 167) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 168) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 565
  DISTANCE_SEGMENT  shift, and go to state 566
  AT            shift, and go to state 560
  ACC           shift, and go to state 561
  TERM          shift, and go to state 563
  OFFSET        shift, and go to state 564
  SKIP          shift, and go to state 567
  COORD         shift, and go to state 570
  MROT          shift, and go to state 571
  PTH           shift, and go to state 572
  WJNT          shift, and go to state 574
  INC           shift, and go to state 573
  BREAK         shift, and go to state 575
  RTCP          shift, and go to state 576
  FPLIN         shift, and go to state 577
  AP_LD         shift, and go to state 582
  RT_LD         shift, and go to state 581
  CD            shift, and go to state 578
  CR            shift, and go to state 562
  INDEV         shift, and go to state 580
  EV            shift, and go to state 579
  PSPD          shift, and go to state 583
  CTV           shift, and go to state 584

  valid_motion_statements  go to state 568
  single_argument_motion_modifiers  go to state 569

state 554

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 585


state 555

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 556

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 586


state 557

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 116 (forloop)


state 558

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 117 (forloop)


state 559

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 131 (function)


state 560

 159) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 587


state 561

 160) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 588


state 562

 161) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 589


state 563

 162) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 590


state 564

 163) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 591


state 565

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 592


state 566

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT _ LPAREN distance COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 593


state 567

 166) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 594


state 568

 167) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 167 (motion_modifier)


state 569

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 595


state 570

 169) valid_motion_statements : COORD _

  $default      reduce using rule 169 (valid_motion_statements)


state 571

 170) valid_motion_statements : MROT _

  $default      reduce using rule 170 (valid_motion_statements)


state 572

 171) valid_motion_statements : PTH _

  $default      reduce using rule 171 (valid_motion_statements)


state 573

 172) valid_motion_statements : INC _

  $default      reduce using rule 172 (valid_motion_statements)


state 574

 173) valid_motion_statements : WJNT _

  $default      reduce using rule 173 (valid_motion_statements)


state 575

 174) valid_motion_statements : BREAK _

  $default      reduce using rule 174 (valid_motion_statements)


state 576

 175) valid_motion_statements : RTCP _

  $default      reduce using rule 175 (valid_motion_statements)


state 577

 176) valid_motion_statements : FPLIN _

  $default      reduce using rule 176 (valid_motion_statements)


state 578

 177) single_argument_motion_modifiers : CD _

  $default      reduce using rule 177 (single_argument_motion_modifiers)


state 579

 178) single_argument_motion_modifiers : EV _

  $default      reduce using rule 178 (single_argument_motion_modifiers)


state 580

 179) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 179 (single_argument_motion_modifiers)


state 581

 180) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 180 (single_argument_motion_modifiers)


state 582

 181) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 181 (single_argument_motion_modifiers)


state 583

 182) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 182 (single_argument_motion_modifiers)


state 584

 183) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 183 (single_argument_motion_modifiers)


state 585

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 596


state 586

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 597


state 587

 159) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 600
  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  speed         go to state 598
  number        go to state 121
  var           go to state 122
  indirectable  go to state 599
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 588

 160) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93

  integer       go to state 173
  var           go to state 174
  indirect_thing  go to state 175
  int_or_var    go to state 601
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 589

 161) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  MINUS         shift, and go to state 606

  valid_terminations  go to state 602
  motion_arguements  go to state 603
  integer       go to state 604
  var           go to state 605
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 590

 162) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  MINUS         shift, and go to state 606

  valid_terminations  go to state 607
  integer       go to state 604
  var           go to state 605
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 591

 163) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_or_indirect  go to state 608
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 592

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA seg_actions RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  time          go to state 609
  var           go to state 610
  number        go to state 611
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 593

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN _ distance COMMA seg_actions RPAREN

  REAL          shift, and go to state 124
  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112

  distance      go to state 612
  var           go to state 613
  number        go to state 614
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92
  integer       go to state 123

state 594

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 615

state 595

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93

  integer       go to state 173
  var           go to state 174
  indirect_thing  go to state 175
  int_or_var    go to state 616
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 596

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 112
  INDIRECT      shift, and go to state 93
  SYSTEM        shift, and go to state 91

  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  var_or_indirect  go to state 617
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 597

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 598

 159) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 618


state 599

 201) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 619


state 600

 202) speed : STRING _

  $default      reduce using rule 202 (speed)


state 601

 160) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 620


state 602

 157) motion_arguements : valid_terminations _
 158) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 621
  $default      reduce using rule 157 (motion_arguements)


state 603

 161) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 622


state 604

 184) valid_terminations : integer _

  $default      reduce using rule 184 (valid_terminations)


state 605

 185) valid_terminations : var _

  $default      reduce using rule 185 (valid_terminations)


state 606

 186) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 623


state 607

 162) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 624


state 608

 163) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 625


state 609

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 626


state 610

 197) time : var _

  $default      reduce using rule 197 (time)


state 611

 198) time : number _

  $default      reduce using rule 198 (time)


state 612

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 627


state 613

 199) distance : var _

  $default      reduce using rule 199 (distance)


state 614

 200) distance : number _

  $default      reduce using rule 200 (distance)


state 615

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 629
  $default      reduce using rule 188 (optional_lpos_arg)

  optional_lpos_arg  go to state 628

state 616

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 630


state 617

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 631


state 618

 159) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 619

 201) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 632


state 620

 160) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 160 (motion_modifier)


state 621

 158) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 125
  WORD          shift, and go to state 112
  MINUS         shift, and go to state 606

  valid_terminations  go to state 633
  integer       go to state 604
  var           go to state 605
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 622

 161) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 623

 186) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 186 (valid_terminations)


state 624

 162) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 162 (motion_modifier)


state 625

 163) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 163 (motion_modifier)


state 626

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 62
  WORD          shift, and go to state 130
  INDIRECT      shift, and go to state 93
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  SYSTEM        shift, and go to state 91

  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  seg_actions   go to state 634
  program_call  go to state 635
  io_method     go to state 636
  assignment    go to state 637
  var_or_indirect  go to state 638
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92

state 627

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 62
  WORD          shift, and go to state 130
  INDIRECT      shift, and go to state 93
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  SYSTEM        shift, and go to state 91

  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 110
  indirect_thing  go to state 64
  var_system    go to state 111
  seg_actions   go to state 639
  program_call  go to state 635
  io_method     go to state 636
  assignment    go to state 637
  var_or_indirect  go to state 638
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  ns            go to state 92

state 628

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 640


state 629

 187) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 112

  var           go to state 641
  var_without_namespaces  go to state 89
  var_with_namespaces  go to state 90
  namespaces    go to state 113
  ns            go to state 92

state 630

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 168 (motion_modifier)


state 631

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 540

  motion_modifiers  go to state 642
  motion_modifier  go to state 539

state 632

 201) speed : indirectable COMMA STRING _

  $default      reduce using rule 201 (speed)


state 633

 158) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 158 (motion_arguements)


state 634

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 643


state 635

 194) seg_actions : program_call _

  $default      reduce using rule 194 (seg_actions)


state 636

 195) seg_actions : io_method _

  $default      reduce using rule 195 (seg_actions)


state 637

 196) seg_actions : assignment _

  $default      reduce using rule 196 (seg_actions)


state 638

 206) assignment : var_or_indirect _ EQUAL expression
 207) assignment : var_or_indirect _ PLUS EQUAL expression
 208) assignment : var_or_indirect _ MINUS EQUAL expression
 209) assignment : var_or_indirect _ STAR EQUAL expression
 210) assignment : var_or_indirect _ SLASH EQUAL expression

  EQUAL         shift, and go to state 191
  PLUS          shift, and go to state 192
  MINUS         shift, and go to state 193
  STAR          shift, and go to state 194
  SLASH         shift, and go to state 195


state 639

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 644


state 640

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 166 (motion_modifier)


state 641

 187) optional_lpos_arg : COMMA var _

  $default      reduce using rule 187 (optional_lpos_arg)


state 642

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 156) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 540
  $default      reduce using rule 154 (motion_statement)

  motion_modifier  go to state 552

state 643

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN _

  $default      reduce using rule 164 (motion_modifier)


state 644

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN _

  $default      reduce using rule 165 (motion_modifier)

