state 3 contains 2 shift/reduce conflicts
state 53 contains 1 shift/reduce conflicts
state 61 contains 1 shift/reduce conflicts
state 63 contains 1 reduce/reduce conflicts
state 77 contains 2 shift/reduce conflicts
state 102 contains 2 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 132 contains 1 reduce/reduce conflicts
state 159 contains 1 reduce/reduce conflicts
state 180 contains 1 shift/reduce conflicts
state 184 contains 1 shift/reduce conflicts
state 203 contains 1 shift/reduce conflicts
state 287 contains 2 reduce/reduce conflicts
state 288 contains 2 reduce/reduce conflicts
state 289 contains 2 reduce/reduce conflicts
state 291 contains 2 reduce/reduce conflicts
state 300 contains 1 shift/reduce conflicts
state 307 contains 1 shift/reduce conflicts
state 327 contains 1 shift/reduce conflicts
state 345 contains 14 shift/reduce conflicts
state 375 contains 1 shift/reduce conflicts
state 454 contains 1 shift/reduce conflicts
state 501 contains 1 shift/reduce conflicts

rule 142 (case_allowed_statement) never reduced
rule 143 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL
rule 68 label: LABEL_SET LPAREN case_allowed_condition RPAREN
rule 69 label: LABEL_POP
rule 70 group_statement: GROUP LPAREN integer RPAREN
rule 71 use_statement: FANUC_USE indirectable
rule 72 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 73 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 74 collguard_statement: COLL_GUARD optional_arg
rule 75 set_skip_statement: SET_SKIP_CONDITION expression
rule 76 function_call: WORD
rule 77 function_call: namespaces WORD
rule 78 basic_program_call: function_call LPAREN args RPAREN
rule 79 program_call: basic_program_call
rule 80 program_call: RUN function_call LPAREN args RPAREN
rule 81 program_call: CALL var_or_indirect LPAREN args RPAREN
rule 82 args: arg
rule 83 args: args COMMA arg
rule 84 args: 
rule 85 arg: number
rule 86 arg: signed_number
rule 87 arg: var
rule 88 arg: string
rule 89 arg: address
rule 90 arg: expression
rule 91 program_vars: program_var
rule 92 program_vars: program_vars COMMA program_var
rule 93 program_vars: 
rule 94 program_var: WORD
rule 95 return_statement: RETURN LPAREN expression RPAREN
rule 96 return_statement: RETURN
rule 97 string: STRING
rule 98 io_method: IO_METHOD var_or_indirect
rule 99 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 100 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 101 var_or_indirect: var
rule 102 var_or_indirect: indirect_thing
rule 103 var_or_indirect: var_system
rule 104 jump: JUMP label
rule 105 conditional: IF expression block elsif_conditions else_block END
rule 106 conditional: UNLESS expression block else_block END
rule 107 conditional_block: IF expression THEN block elsif_block else_block END
rule 108 elsif_conditions: elsif_condition
rule 109 elsif_conditions: elsif_conditions elsif_condition
rule 110 elsif_conditions: 
rule 111 elsif_condition: ELSIF expression block
rule 112 elsif_block: elsif_block_condition
rule 113 elsif_block: elsif_block elsif_block_condition
rule 114 elsif_block: 
rule 115 elsif_block_condition: ELSIF expression THEN block
rule 116 forloop: FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 117 forloop: FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 118 while_loop: WHILE expression block END
rule 119 int_or_var: integer
rule 120 int_or_var: var
rule 121 int_or_var: indirect_thing
rule 122 word_list: word_tuple
rule 123 word_list: word_list word_tuple
rule 124 word_tuple: COMMA WORD
rule 125 word_tuple: WORD
rule 126 using_statement: USING word_list
rule 127 compile_statement: COMPILE IMPORT word_list
rule 128 import_statement: IMPORT word_list
rule 129 namespace: NAMESPACE WORD block END
rule 130 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 131 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 132 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 133 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 134 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 135 case_conditions: case_condition
rule 136 case_conditions: case_conditions case_condition
rule 137 case_condition: WHEN case_allowed_condition block
rule 138 case_allowed_condition: number
rule 139 case_allowed_condition: var
rule 140 case_else: ELSE block
rule 141 case_else: 
rule 142 case_allowed_statement: program_call
rule 143 case_allowed_statement: jump
rule 144 inline_conditional: inlineable
rule 145 inline_conditional: inlineable IF expression
rule 146 inline_conditional: inlineable UNLESS expression
rule 147 inlineable: jump
rule 148 inlineable: assignment
rule 149 inlineable: io_method
rule 150 inlineable: program_call
rule 151 else_block: ELSE block
rule 152 else_block: 
rule 153 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 154 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 155 motion_modifiers: motion_modifier
rule 156 motion_modifiers: motion_modifiers motion_modifier
rule 157 motion_arguements: valid_terminations
rule 158 motion_arguements: valid_terminations COMMA valid_terminations
rule 159 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 160 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 161 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 162 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 163 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 164 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
rule 165 motion_modifier: DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
rule 166 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 167 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 168 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 169 valid_motion_statements: COORD
rule 170 valid_motion_statements: MROT
rule 171 valid_motion_statements: PTH
rule 172 valid_motion_statements: INC
rule 173 valid_motion_statements: WJNT
rule 174 valid_motion_statements: BREAK
rule 175 valid_motion_statements: RTCP
rule 176 valid_motion_statements: FPLIN
rule 177 single_argument_motion_modifiers: CD
rule 178 single_argument_motion_modifiers: EV
rule 179 single_argument_motion_modifiers: INDEV
rule 180 single_argument_motion_modifiers: RT_LD
rule 181 single_argument_motion_modifiers: AP_LD
rule 182 single_argument_motion_modifiers: PSPD
rule 183 single_argument_motion_modifiers: CTV
rule 184 valid_terminations: integer
rule 185 valid_terminations: var
rule 186 valid_terminations: MINUS DIGIT
rule 187 optional_lpos_arg: COMMA var
rule 188 optional_lpos_arg: 
rule 189 indirectable: number
rule 190 indirectable: var
rule 191 optional_arg: number
rule 192 optional_arg: var
rule 193 optional_arg: 
rule 194 seg_actions: program_call
rule 195 seg_actions: io_method
rule 196 seg_actions: assignment
rule 197 time: var
rule 198 time: number
rule 199 distance: var
rule 200 distance: number
rule 201 speed: indirectable COMMA STRING
rule 202 speed: STRING
rule 203 label_definition: label
rule 204 memory_types: LOCALSTACK
rule 205 memory_types: SHAREDSTACK
rule 206 definition: memory_types ASSIGN definable
rule 207 definition: WORD ASSIGN definable
rule 208 assignment: var_or_indirect EQUAL expression
rule 209 assignment: var_or_indirect PLUS EQUAL expression
rule 210 assignment: var_or_indirect MINUS EQUAL expression
rule 211 assignment: var_or_indirect STAR EQUAL expression
rule 212 assignment: var_or_indirect SLASH EQUAL expression
rule 213 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 214 position_assignment: var_or_indirect ARROW array
rule 215 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 216 position_assignment: assignable_range EQUAL assignable_range
rule 217 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 218 assignable_range: var RANGE var
rule 219 assignable_range: var
rule 220 var: var_without_namespaces
rule 221 var: var_with_namespaces
rule 222 var_without_namespaces: WORD
rule 223 var_without_namespaces: WORD var_method_modifiers
rule 224 var_with_namespaces: namespaces var_without_namespaces
rule 225 var_method_modifiers: var_method_modifier
rule 226 var_method_modifiers: var_method_modifiers var_method_modifier
rule 227 pose_range_modifiers: pose_range_modifier
rule 228 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 229 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 230 coord_system: SPHERE
rule 231 coord_system: POLAR
rule 232 coord_system: ORIGIN
rule 233 var_method_modifier: DOT swallow_newlines WORD
rule 234 var_method_modifier: DOT swallow_newlines group_statement
rule 235 var_method_modifier: DOT swallow_newlines POSEATTR
rule 236 var_method_modifier: DOT swallow_newlines OFFSET
rule 237 var_method_modifier: DOT swallow_newlines coord_system
rule 238 var_method_modifier: DOT swallow_newlines FIX
rule 239 var_system: SYSTEM WORD var_system_modifers
rule 240 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 241 var_system_modifers: var_system_modifer
rule 242 var_system_modifers: var_system_modifers var_system_modifer
rule 243 var_system_modifers: 
rule 244 var_system_modifer: DOT var_system
rule 245 namespaces: ns
rule 246 namespaces: namespaces ns
rule 247 ns: WORD COLON COLON
rule 248 expression: unary_expression
rule 249 expression: binary_expression
rule 250 unary_expression: factor
rule 251 unary_expression: address
rule 252 unary_expression: BANG factor
rule 253 unary_expression: basic_program_call
rule 254 binary_expression: expression operator expression
rule 255 operator: EEQUAL
rule 256 operator: NOTEQUAL
rule 257 operator: LT
rule 258 operator: GT
rule 259 operator: GTE
rule 260 operator: LTE
rule 261 operator: PLUS
rule 262 operator: MINUS
rule 263 operator: OR
rule 264 operator: STAR
rule 265 operator: SLASH
rule 266 operator: DIV
rule 267 operator: MOD
rule 268 operator: AND
rule 269 factor: number
rule 270 factor: signed_number
rule 271 factor: operation
rule 272 factor: var
rule 273 factor: signed_var
rule 274 factor: var_system
rule 275 factor: indirect_thing
rule 276 factor: paren_expr
rule 277 factor: booleans
rule 278 booleans: TRUE_FALSE
rule 279 booleans: ON_OFF
rule 280 paren_expr: LPAREN expression RPAREN
rule 281 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 282 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 283 signed_number: sign DIGIT
rule 284 signed_number: sign REAL
rule 285 signed_var: sign var
rule 286 sign: MINUS
rule 287 number: integer
rule 288 number: REAL
rule 289 integer: DIGIT
rule 290 definable: reg
rule 291 definable: number
rule 292 definable: signed_number
rule 293 definable: string
rule 294 definable: framereg
rule 295 definable: booleans
rule 296 definable: localvars
rule 297 definable: sharedvars
rule 298 definable_range: DIGIT RANGE DIGIT
rule 299 definable_range: DIGIT
rule 300 reg_types: SREG
rule 301 reg_types: UALM
rule 302 reg_types: TIMER
rule 303 reg_types: ARG
rule 304 reg_types: VREG
rule 305 reg_types: POSITION
rule 306 reg_types: NUMREG
rule 307 reg_types: POSREG
rule 308 reg_types: INPUT
rule 309 reg_types: OUTPUT
rule 310 reg: reg_types LBRACK definable_range RBRACK
rule 311 frametype: TOOLREG
rule 312 frametype: FRAMEREG
rule 313 framereg: frametype LBRACK DIGIT RBRACK
rule 314 local_types: LOCALREG
rule 315 local_types: LOCALPOSE
rule 316 local_types: LOCALFLAG
rule 317 localvars: local_types LBRACK RBRACK
rule 318 shared_types: SHAREDREG
rule 319 shared_types: SHAREDPOSE
rule 320 shared_types: SHAREDFLAG
rule 321 sharedvars: shared_types LBRACK RBRACK
rule 322 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 323 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 324 operation: OPERATION LBRACK signed_number RBRACK
rule 325 operation: OPERATION LBRACK number RBRACK
rule 326 address: ADDRESS var
rule 327 comment: COMMENT
rule 328 message: MESSAGE LPAREN STRING RPAREN
rule 329 warning: WARNING LPAREN STRING RPAREN
rule 330 terminator: NEWLINE
rule 331 terminator: comment optional_newline
rule 332 terminator: false
rule 333 terminator: 
rule 334 swallow_newlines: NEWLINE
rule 335 swallow_newlines: 
rule 336 position_data: POSITION_DATA sn hash sn END
rule 337 sn: swallow_newlines
rule 338 hash: LBRACE sn hash_attributes sn RBRACE
rule 339 hash: LBRACE sn RBRACE
rule 340 hash_attributes: hash_attribute
rule 341 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 342 hash_attribute: STRING COLON hash_value
rule 343 hash_value: STRING
rule 344 hash_value: WORD
rule 345 hash_value: hash
rule 346 hash_value: array
rule 347 hash_value: optional_sign DIGIT
rule 348 hash_value: optional_sign REAL
rule 349 hash_value: TRUE_FALSE
rule 350 optional_sign: sign
rule 351 optional_sign: 
rule 352 array: LBRACK sn array_values sn RBRACK
rule 353 array_values: array_value
rule 354 array_values: array_values COMMA sn array_value
rule 355 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (144)
    on right: 
    on left : 
  program (145)
    on right: 
    on left : 1 2
  statements (146)
    on right: 1 4 5
    on left : 3 4
  statement (147)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (148)
    on right: 3 4
    on left : 330 331 332 333
  block (149)
    on right: 105 106 107 111 115 116 117 118 129 130 131 132 133 137 140 151
    on left : 5
  optional_newline (150)
    on right: 331
    on left : 6 7
  comment (151)
    on right: 8 331
    on left : 327
  message (152)
    on right: 9
    on left : 328
  definition (153)
    on right: 10
    on left : 206 207
  namespace (154)
    on right: 11
    on left : 129
  motion_statement (155)
    on right: 12
    on left : 153 154
  position_assignment (156)
    on right: 13
    on left : 213 214 215 216 217
  label_definition (157)
    on right: 14
    on left : 203
  address (158)
    on right: 15 89 251
    on left : 326
  conditional (159)
    on right: 16
    on left : 105 106
  inline_conditional (160)
    on right: 17
    on left : 144 145 146
  conditional_block (161)
    on right: 18
    on left : 107
  forloop (162)
    on right: 19
    on left : 116 117
  while_loop (163)
    on right: 20
    on left : 118
  use_statement (164)
    on right: 21
    on left : 71 72 73
  set_skip_statement (165)
    on right: 22
    on left : 75
  wait_statement (166)
    on right: 23
    on left : 59 60 61 62
  case_statement (167)
    on right: 24
    on left : 134
  fanuc_eval (168)
    on right: 25
    on left : 58
  timer_method (169)
    on right: 26
    on left : 57
  position_data (170)
    on right: 27
    on left : 336
  raise (171)
    on right: 28
    on left : 56
  tp_header_definition (172)
    on right: 29
    on left : 46
  lpos_or_jpos (173)
    on right: 30
    on left : 43 44
  empty_stmt (174)
    on right: 31
    on left : 45
  warning (175)
    on right: 32
    on left : 329
  var_system (176)
    on right: 33 103 244 274
    on left : 239 240
  return_statement (177)
    on right: 36
    on left : 95 96
  collguard_statement (178)
    on right: 37
    on left : 74
  function (179)
    on right: 38
    on left : 130 131 132 133
  tp_application_definition (180)
    on right: 39
    on left : 55
  using_statement (181)
    on right: 40
    on left : 126
  import_statement (182)
    on right: 41
    on left : 128
  compile_statement (183)
    on right: 42
    on left : 127
  var_or_indirect (184)
    on right: 43 44 56 57 81 98 99 100 153 154 163 208 209 210 211 212 214 322 323
    on left : 101 102 103
  tp_header_value (185)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (186)
    on right: 55
    on left : 50 51
  sn (187)
    on right: 50 51 53 55 336 338 339 341 352 354
    on left : 337
  tp_tool_attributes (188)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (189)
    on right: 52 53
    on left : 54
  hash_value (190)
    on right: 54 342 355
    on left : 343 344 345 346 347 348 349
  indirectable (191)
    on right: 59 66 71 72 73 201 281 282
    on left : 189 190
  expression (192)
    on right: 60 61 62 75 90 95 105 106 107 111 115 118 145 146 208 209 210 211 212 254 280
    on left : 248 249
  wait_modifier (193)
    on right: 61 62
    on left : 63 64
  timeout_modifier (194)
    on right: 63
    on left : 65
  after_modifier (195)
    on right: 64
    on left : 66
  swallow_newlines (196)
    on right: 65 66 134 153 154 159 160 161 162 163 164 165 166 167 168 229 233 234 235 236 237 238 337
    on left : 334 335
  label (197)
    on right: 65 104 166 203
    on left : 67 68 69
  case_allowed_condition (198)
    on right: 68 137
    on left : 138 139
  group_statement (199)
    on right: 73 234
    on left : 70
  integer (200)
    on right: 70 119 184 240 287
    on left : 289
  optional_arg (201)
    on right: 74
    on left : 191 192 193
  function_call (202)
    on right: 78 80
    on left : 76 77
  namespaces (203)
    on right: 77 224 246
    on left : 245 246
  basic_program_call (204)
    on right: 79 253
    on left : 78
  args (205)
    on right: 78 80 81 83
    on left : 82 83 84
  program_call (206)
    on right: 142 150 194
    on left : 79 80 81
  arg (207)
    on right: 82 83
    on left : 85 86 87 88 89 90
  number (208)
    on right: 85 100 138 189 191 198 200 269 291 325
    on left : 287 288
  signed_number (209)
    on right: 86 270 292 324
    on left : 283 284
  var (210)
    on right: 87 101 120 134 139 185 187 190 192 197 199 218 219 272 285 326
    on left : 220 221
  string (211)
    on right: 88 293
    on left : 97
  program_vars (212)
    on right: 92 130 131 132 133
    on left : 91 92 93
  program_var (213)
    on right: 91 92
    on left : 94
  io_method (214)
    on right: 149 195
    on left : 98 99 100
  indirect_thing (215)
    on right: 102 121 275
    on left : 281 282
  jump (216)
    on right: 143 147
    on left : 104
  elsif_conditions (217)
    on right: 105 109
    on left : 108 109 110
  else_block (218)
    on right: 105 106 107
    on left : 151 152
  elsif_block (219)
    on right: 107 113
    on left : 112 113 114
  elsif_condition (220)
    on right: 108 109
    on left : 111
  elsif_block_condition (221)
    on right: 112 113
    on left : 115
  int_or_var (222)
    on right: 116 117 160 168
    on left : 119 120 121
  word_list (223)
    on right: 123 126 127 128
    on left : 122 123
  word_tuple (224)
    on right: 122 123
    on left : 124 125
  case_conditions (225)
    on right: 134 136
    on left : 135 136
  case_else (226)
    on right: 134
    on left : 140 141
  case_condition (227)
    on right: 135 136
    on left : 137
  case_allowed_statement (228)
    on right: 
    on left : 142 143
  inlineable (229)
    on right: 144 145 146
    on left : 147 148 149 150
  assignment (230)
    on right: 148 196
    on left : 208 209 210 211 212
  motion_modifiers (231)
    on right: 153 154 156
    on left : 155 156
  motion_modifier (232)
    on right: 155 156
    on left : 159 160 161 162 163 164 165 166 167 168
  motion_arguements (233)
    on right: 161
    on left : 157 158
  valid_terminations (234)
    on right: 157 158 162
    on left : 184 185 186
  speed (235)
    on right: 159
    on left : 201 202
  time (236)
    on right: 164
    on left : 197 198
  seg_actions (237)
    on right: 164 165
    on left : 194 195 196
  distance (238)
    on right: 165
    on left : 199 200
  optional_lpos_arg (239)
    on right: 166
    on left : 187 188
  valid_motion_statements (240)
    on right: 167
    on left : 169 170 171 172 173 174 175 176
  single_argument_motion_modifiers (241)
    on right: 168
    on left : 177 178 179 180 181 182 183
  memory_types (242)
    on right: 206
    on left : 204 205
  definable (243)
    on right: 206 207
    on left : 290 291 292 293 294 295 296 297
  var_method_modifiers (244)
    on right: 213 215 223 226 282
    on left : 225 226
  array (245)
    on right: 213 214 215 346
    on left : 352
  assignable_range (246)
    on right: 215 216 217
    on left : 218 219
  pose_range_modifiers (247)
    on right: 217 228
    on left : 227 228
  var_without_namespaces (248)
    on right: 220 224
    on left : 222 223
  var_with_namespaces (249)
    on right: 221
    on left : 224
  var_method_modifier (250)
    on right: 225 226
    on left : 233 234 235 236 237 238
  pose_range_modifier (251)
    on right: 227 228
    on left : 229
  coord_system (252)
    on right: 237
    on left : 230 231 232
  var_system_modifers (253)
    on right: 239 240 242
    on left : 241 242 243
  var_system_modifer (254)
    on right: 241 242
    on left : 244
  ns (255)
    on right: 245 246
    on left : 247
  unary_expression (256)
    on right: 248
    on left : 250 251 252 253
  binary_expression (257)
    on right: 249
    on left : 254
  factor (258)
    on right: 250 252
    on left : 269 270 271 272 273 274 275 276 277
  operator (259)
    on right: 254
    on left : 255 256 257 258 259 260 261 262 263 264 265 266 267 268
  operation (260)
    on right: 271
    on left : 322 323 324 325
  signed_var (261)
    on right: 273
    on left : 285
  paren_expr (262)
    on right: 276
    on left : 280
  booleans (263)
    on right: 277 295
    on left : 278 279
  sign (264)
    on right: 283 284 285 350
    on left : 286
  reg (265)
    on right: 290
    on left : 310
  framereg (266)
    on right: 294
    on left : 313
  localvars (267)
    on right: 296
    on left : 317
  sharedvars (268)
    on right: 297
    on left : 321
  definable_range (269)
    on right: 310
    on left : 298 299
  reg_types (270)
    on right: 310
    on left : 300 301 302 303 304 305 306 307 308 309
  frametype (271)
    on right: 313
    on left : 311 312
  local_types (272)
    on right: 317
    on left : 314 315 316
  shared_types (273)
    on right: 321
    on left : 318 319 320
  hash (274)
    on right: 336 345
    on left : 338 339
  hash_attributes (275)
    on right: 338 341
    on left : 340 341
  hash_attribute (276)
    on right: 340 341
    on left : 342
  optional_sign (277)
    on right: 347 348
    on left : 350 351
  array_values (278)
    on right: 352 354
    on left : 353 354
  array_value (279)
    on right: 353 354
    on left : 355

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 206 207
  AT_SYM (3) 
  COMMENT (4) 327
  MESSAGE (5) 328
  WARNING (6) 329
  JUMP (7) 104
  IO_METHOD (8) 98 99 100
  INPUT (9) 308
  OUTPUT (10) 309
  NUMREG (11) 306
  POSREG (12) 307
  VREG (13) 304
  SREG (14) 300
  TIME_SEGMENT (15) 164
  DISTANCE_SEGMENT (16) 165
  ARG (17) 303
  UALM (18) 301
  TOOLREG (19) 311
  FRAMEREG (20) 312
  MOVE (21) 153 154
  DOT (22) 61 62 153 154 159 160 161 162 163 164 165 166 167 168 229 233 234 235 236 237 238 244
  TO (23) 116 153 154
  DOWNTO (24) 117
  MID (25) 154
  AT (26) 159
  ACC (27) 160
  TERM (28) 162
  OFFSET (29) 163 236
  SKIP (30) 166
  GROUP (31) 70
  COORD (32) 169
  MROT (33) 170
  PTH (34) 171
  WJNT (35) 173
  INC (36) 172
  BREAK (37) 174
  RTCP (38) 175
  FPLIN (39) 176
  AP_LD (40) 181
  RT_LD (41) 180
  CD (42) 177
  CR (43) 161
  INDEV (44) 179
  EV (45) 178
  PSPD (46) 182
  CTV (47) 183
  SEMICOLON (48) 
  NEWLINE (49) 5 6 45 330 334
  STRING (50) 47 58 59 66 97 100 201 202 281 282 328 329 342 343
  REAL (51) 284 288 348
  DIGIT (52) 186 283 289 298 299 313 347
  WORD (53) 54 76 77 94 124 125 129 130 131 132 133 207 222 223 233 239 240 247 344
  EQUAL (54) 46 55 208 209 210 211 212 216 217
  RANGE (55) 218 298
  EEQUAL (56) 255
  NOTEQUAL (57) 256
  GTE (58) 259
  LTE (59) 260
  LT (60) 257
  GT (61) 258
  BANG (62) 252
  PLUS (63) 209 261
  MINUS (64) 186 210 262 286
  STAR (65) 211 264
  SLASH (66) 212 265
  DIV (67) 266
  AND (68) 268
  OR (69) 263
  MOD (70) 267
  IF (71) 105 107 145
  THEN (72) 107 115
  ELSE (73) 140 151
  ELSIF (74) 111 115
  END (75) 105 106 107 116 117 118 129 130 131 132 133 134 336
  UNLESS (76) 106 146
  FOR (77) 116 117
  IN (78) 116 117
  WHILE (79) 118
  WAIT_FOR (80) 59
  WAIT_UNTIL (81) 60 61 62
  TIMEOUT (82) 65
  AFTER (83) 66
  FANUC_USE (84) 71 72 73
  COLL_GUARD (85) 74
  SET_SKIP_CONDITION (86) 75
  NAMESPACE (87) 129
  CASE (88) 134
  WHEN (89) 137
  INDIRECT (90) 281 282
  POSITION (91) 305
  EVAL (92) 58
  TIMER (93) 302
  TIMER_METHOD (94) 57
  RAISE (95) 56
  ABORT (96) 35
  RETURN (97) 95 96
  POSITION_DATA (98) 336
  TRUE_FALSE (99) 48 278 349
  ON_OFF (100) 49 279
  CALL (101) 81
  RUN (102) 80
  PAUSE (103) 34
  TP_HEADER (104) 46
  TP_APPLICATION_TYPE (105) 55
  LPAREN (106) 43 44 59 60 61 62 65 66 68 70 72 73 78 80 81 95 99 100 116 117 130 131 132 133 153 154 159 160 161 162 163 164 165 166 168 215 217 280 281 282 328 329
  RPAREN (107) 43 44 59 60 61 62 65 66 68 70 72 73 78 80 81 95 99 100 116 117 130 131 132 133 153 154 159 160 161 162 163 164 165 166 168 215 217 280 281 282 328 329
  COLON (108) 54 131 133 247 342
  COMMA (109) 53 59 66 73 83 92 100 124 158 164 165 187 201 281 282 323 341 354
  LBRACK (110) 240 310 313 317 321 322 323 324 325 352
  RBRACK (111) 240 310 313 317 321 322 323 324 325 352
  LBRACE (112) 50 51 338 339
  RBRACE (113) 50 51 338 339
  LABEL (114) 67
  LABEL_SET (115) 68
  LABEL_POP (116) 69
  SYSTEM (117) 239 240
  ADDRESS (118) 326
  LPOS (119) 43
  JPOS (120) 44
  false (121) 332
  FUNCTION (122) 130 131 132 133
  OPERATION (123) 322 323 324 325
  USING (124) 126
  IMPORT (125) 127 128
  COMPILE (126) 127
  INLINE (127) 130 131
  ARROW (128) 213 214 215
  DEFAULTPOS (129) 213
  POSEATTR (130) 235
  POSEREVERSE (131) 229
  SPHERE (132) 230
  POLAR (133) 231
  ORIGIN (134) 232
  FIX (135) 238
  LOCALSTACK (136) 204
  LOCALREG (137) 314
  LOCALPOSE (138) 315
  LOCALFLAG (139) 316
  SHAREDSTACK (140) 205
  SHAREDREG (141) 318
  SHAREDPOSE (142) 319
  SHAREDFLAG (143) 320

--------- State ---------

state 0


  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 1


  $end          shift, and go to state 101


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85
  $default      reduce using rule 1 (program)

  statement     go to state 102
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 97
  COMMENT       [reduce using rule 333 (terminator)]
  NEWLINE       shift, and go to state 104
  NEWLINE       [reduce using rule 333 (terminator)]
  false         shift, and go to state 106
  $default      reduce using rule 333 (terminator)

  terminator    go to state 103
  comment       go to state 105

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 103) var_or_indirect : var_system _

  EQUAL         reduce using rule 103 (var_or_indirect)
  PLUS          reduce using rule 103 (var_or_indirect)
  MINUS         reduce using rule 103 (var_or_indirect)
  STAR          reduce using rule 103 (var_or_indirect)
  SLASH         reduce using rule 103 (var_or_indirect)
  ARROW         reduce using rule 103 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 107


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 108


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 109


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 110


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 111
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 116
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 117


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 118


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 119


state 49

  67) label : LABEL _

  $default      reduce using rule 67 (label)


state 50

  68) label : LABEL_SET _ LPAREN case_allowed_condition RPAREN

  LPAREN        shift, and go to state 120


state 51

  69) label : LABEL_POP _

  $default      reduce using rule 69 (label)


state 52

  71) use_statement : FANUC_USE _ indirectable
  72) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  73) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  LPAREN        shift, and go to state 122

  indirectable  go to state 121
  number        go to state 123
  var           go to state 124
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 53

  74) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  WORD          [reduce using rule 193 (optional_arg)]
  $default      reduce using rule 193 (optional_arg)

  optional_arg  go to state 128
  number        go to state 129
  var           go to state 130
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 54

  75) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  expression    go to state 131
  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 55

  76) function_call : WORD _
 207) definition : WORD _ ASSIGN definable
 222) var_without_namespaces : WORD _
 223) var_without_namespaces : WORD _ var_method_modifiers
 247) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 154
  DOT           shift, and go to state 157
  COLON         shift, and go to state 158
  LPAREN        reduce using rule 76 (function_call)
  $default      reduce using rule 222 (var_without_namespaces)

  var_method_modifiers  go to state 155
  var_method_modifier  go to state 156

state 56

  77) function_call : namespaces _ WORD
 224) var_with_namespaces : namespaces _ var_without_namespaces
 246) namespaces : namespaces _ ns

  WORD          shift, and go to state 159

  var_without_namespaces  go to state 160
  ns            go to state 161

state 57

  78) basic_program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 162


state 58

  79) program_call : basic_program_call _

  $default      reduce using rule 79 (program_call)


state 59

  80) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 163

  namespaces    go to state 164
  function_call  go to state 165
  ns            go to state 94

state 60

  81) program_call : CALL _ var_or_indirect LPAREN args RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 166
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 61

  95) return_statement : RETURN _ LPAREN expression RPAREN
  96) return_statement : RETURN _

  LPAREN        shift, and go to state 167
  LPAREN        [reduce using rule 96 (return_statement)]
  $default      reduce using rule 96 (return_statement)


state 62

  98) io_method : IO_METHOD _ var_or_indirect
  99) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
 100) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  LPAREN        shift, and go to state 169
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 168
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 63

 101) var_or_indirect : var _
 218) assignable_range : var _ RANGE var
 219) assignable_range : var _

  RANGE         shift, and go to state 170
  EQUAL         [reduce using rule 219 (assignable_range)]
  $default      reduce using rule 101 (var_or_indirect)


state 64

 102) var_or_indirect : indirect_thing _

  $default      reduce using rule 102 (var_or_indirect)


state 65

 104) jump : JUMP _ label

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 171

state 66

 105) conditional : IF _ expression block elsif_conditions else_block END
 107) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 172
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 67

 106) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 173
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 68

 116) forloop : FOR _ int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR _ int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 174
  integer       go to state 175
  var           go to state 176
  indirect_thing  go to state 177
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 69

 118) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 178
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 70

 126) using_statement : USING _ word_list

  WORD          shift, and go to state 182
  COMMA         shift, and go to state 181

  word_tuple    go to state 179
  word_list     go to state 180

state 71

 127) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 183


state 72

 128) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 182
  COMMA         shift, and go to state 181

  word_tuple    go to state 179
  word_list     go to state 184

state 73

 129) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 185


state 74

 130) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 131) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 186


state 75

 132) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 133) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 187


state 76

 134) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 114

  var           go to state 188
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 77

 144) inline_conditional : inlineable _
 145) inline_conditional : inlineable _ IF expression
 146) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 189
  IF            [reduce using rule 144 (inline_conditional)]
  UNLESS        shift, and go to state 190
  UNLESS        [reduce using rule 144 (inline_conditional)]
  $default      reduce using rule 144 (inline_conditional)


state 78

 147) inlineable : jump _

  $default      reduce using rule 147 (inlineable)


state 79

 148) inlineable : assignment _

  $default      reduce using rule 148 (inlineable)


state 80

 149) inlineable : io_method _

  $default      reduce using rule 149 (inlineable)


state 81

 150) inlineable : program_call _

  $default      reduce using rule 150 (inlineable)


state 82

 153) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 154) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 191


state 83

 203) label_definition : label _

  $default      reduce using rule 203 (label_definition)


state 84

 204) memory_types : LOCALSTACK _

  $default      reduce using rule 204 (memory_types)


state 85

 205) memory_types : SHAREDSTACK _

  $default      reduce using rule 205 (memory_types)


state 86

 206) definition : memory_types _ ASSIGN definable

  ASSIGN        shift, and go to state 192


state 87

 208) assignment : var_or_indirect _ EQUAL expression
 209) assignment : var_or_indirect _ PLUS EQUAL expression
 210) assignment : var_or_indirect _ MINUS EQUAL expression
 211) assignment : var_or_indirect _ STAR EQUAL expression
 212) assignment : var_or_indirect _ SLASH EQUAL expression
 214) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 193
  PLUS          shift, and go to state 194
  MINUS         shift, and go to state 195
  STAR          shift, and go to state 196
  SLASH         shift, and go to state 197
  ARROW         shift, and go to state 198


state 88

 213) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 157

  var_method_modifiers  go to state 199
  var_method_modifier  go to state 156

state 89

 215) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 114

  assignable_range  go to state 200
  var           go to state 201
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 90

 216) position_assignment : assignable_range _ EQUAL assignable_range
 217) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 202


state 91

 220) var : var_without_namespaces _

  $default      reduce using rule 220 (var)


state 92

 221) var : var_with_namespaces _

  $default      reduce using rule 221 (var)


state 93

 239) var_system : SYSTEM _ WORD var_system_modifers
 240) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers

  WORD          shift, and go to state 203


state 94

 245) namespaces : ns _

  $default      reduce using rule 245 (namespaces)


state 95

 281) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 282) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 204


state 96

 326) address : ADDRESS _ var

  WORD          shift, and go to state 114

  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  var           go to state 205

state 97

 327) comment : COMMENT _

  $default      reduce using rule 327 (comment)


state 98

 328) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 206


state 99

 329) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 207


state 100

 336) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  sn            go to state 209
  swallow_newlines  go to state 210

state 101


  $end          shift, and go to state 211


state 102

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 97
  COMMENT       [reduce using rule 333 (terminator)]
  NEWLINE       shift, and go to state 104
  NEWLINE       [reduce using rule 333 (terminator)]
  false         shift, and go to state 106
  $default      reduce using rule 333 (terminator)

  terminator    go to state 212
  comment       go to state 105

state 103

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 104

 330) terminator : NEWLINE _

  $default      reduce using rule 330 (terminator)


state 105

 331) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 213
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 214

state 106

 332) terminator : false _

  $default      reduce using rule 332 (terminator)


state 107

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 215
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 108

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 216
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 109

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 218
  TRUE_FALSE    shift, and go to state 219
  ON_OFF        shift, and go to state 220

  tp_header_value  go to state 217

state 110

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  sn            go to state 221
  swallow_newlines  go to state 210

state 111

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 112

 101) var_or_indirect : var _

  $default      reduce using rule 101 (var_or_indirect)


state 113

 103) var_or_indirect : var_system _

  $default      reduce using rule 103 (var_or_indirect)


state 114

 222) var_without_namespaces : WORD _
 223) var_without_namespaces : WORD _ var_method_modifiers
 247) ns : WORD _ COLON COLON

  DOT           shift, and go to state 157
  COLON         shift, and go to state 158
  $default      reduce using rule 222 (var_without_namespaces)

  var_method_modifiers  go to state 155
  var_method_modifier  go to state 156

state 115

 224) var_with_namespaces : namespaces _ var_without_namespaces
 246) namespaces : namespaces _ ns

  WORD          shift, and go to state 114

  var_without_namespaces  go to state 160
  ns            go to state 161

state 116

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 117

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 118

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  indirectable  go to state 222
  number        go to state 123
  var           go to state 124
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 119

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  expression    go to state 223
  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 120

  68) label : LABEL_SET LPAREN _ case_allowed_condition RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  case_allowed_condition  go to state 224
  number        go to state 225
  var           go to state 226
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 121

  71) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 71 (use_statement)


state 122

  72) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  73) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  indirectable  go to state 227
  number        go to state 123
  var           go to state 124
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 123

 189) indirectable : number _

  $default      reduce using rule 189 (indirectable)


state 124

 190) indirectable : var _

  $default      reduce using rule 190 (indirectable)


state 125

 287) number : integer _

  $default      reduce using rule 287 (number)


state 126

 288) number : REAL _

  $default      reduce using rule 288 (number)


state 127

 289) integer : DIGIT _

  $default      reduce using rule 289 (integer)


state 128

  74) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 74 (collguard_statement)


state 129

 191) optional_arg : number _

  $default      reduce using rule 191 (optional_arg)


state 130

 192) optional_arg : var _

  $default      reduce using rule 192 (optional_arg)


state 131

  75) set_skip_statement : SET_SKIP_CONDITION expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 75 (set_skip_statement)

  operator      go to state 228

state 132

  76) function_call : WORD _
 222) var_without_namespaces : WORD _
 223) var_without_namespaces : WORD _ var_method_modifiers
 247) ns : WORD _ COLON COLON

  DOT           shift, and go to state 157
  COLON         shift, and go to state 158
  LPAREN        reduce using rule 76 (function_call)
  LPAREN        [reduce using rule 222 (var_without_namespaces)]
  $default      reduce using rule 222 (var_without_namespaces)

  var_method_modifiers  go to state 155
  var_method_modifier  go to state 156

state 133

 248) expression : unary_expression _

  $default      reduce using rule 248 (expression)


state 134

 249) expression : binary_expression _

  $default      reduce using rule 249 (expression)


state 135

 250) unary_expression : factor _

  $default      reduce using rule 250 (unary_expression)


state 136

 251) unary_expression : address _

  $default      reduce using rule 251 (unary_expression)


state 137

 252) unary_expression : BANG _ factor

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  OPERATION     shift, and go to state 153

  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  factor        go to state 243
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 138

 253) unary_expression : basic_program_call _

  $default      reduce using rule 253 (unary_expression)


state 139

 269) factor : number _

  $default      reduce using rule 269 (factor)


state 140

 270) factor : signed_number _

  $default      reduce using rule 270 (factor)


state 141

 271) factor : operation _

  $default      reduce using rule 271 (factor)


state 142

 272) factor : var _

  $default      reduce using rule 272 (factor)


state 143

 273) factor : signed_var _

  $default      reduce using rule 273 (factor)


state 144

 274) factor : var_system _

  $default      reduce using rule 274 (factor)


state 145

 275) factor : indirect_thing _

  $default      reduce using rule 275 (factor)


state 146

 276) factor : paren_expr _

  $default      reduce using rule 276 (factor)


state 147

 277) factor : booleans _

  $default      reduce using rule 277 (factor)


state 148

 278) booleans : TRUE_FALSE _

  $default      reduce using rule 278 (booleans)


state 149

 279) booleans : ON_OFF _

  $default      reduce using rule 279 (booleans)


state 150

 280) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  expression    go to state 244
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 151

 283) signed_number : sign _ DIGIT
 284) signed_number : sign _ REAL
 285) signed_var : sign _ var

  REAL          shift, and go to state 246
  DIGIT         shift, and go to state 245
  WORD          shift, and go to state 114

  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  var           go to state 247

state 152

 286) sign : MINUS _

  $default      reduce using rule 286 (sign)


state 153

 322) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 323) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 324) operation : OPERATION _ LBRACK signed_number RBRACK
 325) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 248


state 154

 207) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 268
  OUTPUT        shift, and go to state 269
  NUMREG        shift, and go to state 266
  POSREG        shift, and go to state 267
  VREG          shift, and go to state 264
  SREG          shift, and go to state 260
  ARG           shift, and go to state 263
  UALM          shift, and go to state 261
  TOOLREG       shift, and go to state 271
  FRAMEREG      shift, and go to state 272
  STRING        shift, and go to state 249
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  MINUS         shift, and go to state 152
  POSITION      shift, and go to state 265
  TIMER         shift, and go to state 262
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LOCALREG      shift, and go to state 274
  LOCALPOSE     shift, and go to state 275
  LOCALFLAG     shift, and go to state 276
  SHAREDREG     shift, and go to state 278
  SHAREDPOSE    shift, and go to state 279
  SHAREDFLAG    shift, and go to state 280

  definable     go to state 250
  sign          go to state 251
  integer       go to state 125
  reg           go to state 252
  number        go to state 253
  signed_number  go to state 254
  string        go to state 255
  framereg      go to state 256
  booleans      go to state 257
  localvars     go to state 258
  sharedvars    go to state 259
  reg_types     go to state 270
  frametype     go to state 273
  local_types   go to state 277
  shared_types  go to state 281

state 155

 223) var_without_namespaces : WORD var_method_modifiers _
 226) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 157
  $default      reduce using rule 223 (var_without_namespaces)

  var_method_modifier  go to state 282

state 156

 225) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 225 (var_method_modifiers)


state 157

 233) var_method_modifier : DOT _ swallow_newlines WORD
 234) var_method_modifier : DOT _ swallow_newlines group_statement
 235) var_method_modifier : DOT _ swallow_newlines POSEATTR
 236) var_method_modifier : DOT _ swallow_newlines OFFSET
 237) var_method_modifier : DOT _ swallow_newlines coord_system
 238) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 283

state 158

 247) ns : WORD COLON _ COLON

  COLON         shift, and go to state 284


state 159

  77) function_call : namespaces WORD _
 222) var_without_namespaces : WORD _
 223) var_without_namespaces : WORD _ var_method_modifiers
 247) ns : WORD _ COLON COLON

  DOT           shift, and go to state 157
  COLON         shift, and go to state 158
  LPAREN        reduce using rule 77 (function_call)
  LPAREN        [reduce using rule 222 (var_without_namespaces)]
  $default      reduce using rule 222 (var_without_namespaces)

  var_method_modifiers  go to state 155
  var_method_modifier  go to state 156

state 160

 224) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 224 (var_with_namespaces)


state 161

 246) namespaces : namespaces ns _

  $default      reduce using rule 246 (namespaces)


state 162

  78) basic_program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 249
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153
  $default      reduce using rule 84 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 285
  arg           go to state 286
  number        go to state 287
  signed_number  go to state 288
  var           go to state 289
  string        go to state 290
  address       go to state 291
  expression    go to state 292
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  basic_program_call  go to state 138
  operation     go to state 141
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 163

  76) function_call : WORD _
 247) ns : WORD _ COLON COLON

  COLON         shift, and go to state 158
  $default      reduce using rule 76 (function_call)


state 164

  77) function_call : namespaces _ WORD
 246) namespaces : namespaces _ ns

  WORD          shift, and go to state 293

  ns            go to state 161

state 165

  80) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 294


state 166

  81) program_call : CALL var_or_indirect _ LPAREN args RPAREN

  LPAREN        shift, and go to state 295


state 167

  95) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 296
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 168

  98) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 98 (io_method)


state 169

  99) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
 100) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 297
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 170

 218) assignable_range : var RANGE _ var

  WORD          shift, and go to state 114

  var           go to state 298
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 171

 104) jump : JUMP label _

  $default      reduce using rule 104 (jump)


state 172

 105) conditional : IF expression _ block elsif_conditions else_block END
 107) conditional_block : IF expression _ THEN block elsif_block else_block END
 254) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 299
  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  THEN          shift, and go to state 301

  block         go to state 300
  operator      go to state 228

state 173

 106) conditional : UNLESS expression _ block else_block END
 254) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 299
  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241

  block         go to state 302
  operator      go to state 228

state 174

 116) forloop : FOR int_or_var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 303


state 175

 119) int_or_var : integer _

  $default      reduce using rule 119 (int_or_var)


state 176

 120) int_or_var : var _

  $default      reduce using rule 120 (int_or_var)


state 177

 121) int_or_var : indirect_thing _

  $default      reduce using rule 121 (int_or_var)


state 178

 118) while_loop : WHILE expression _ block END
 254) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 299
  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241

  block         go to state 304
  operator      go to state 228

state 179

 122) word_list : word_tuple _

  $default      reduce using rule 122 (word_list)


state 180

 123) word_list : word_list _ word_tuple
 126) using_statement : USING word_list _

  WORD          shift, and go to state 182
  WORD          [reduce using rule 126 (using_statement)]
  COMMA         shift, and go to state 181
  $default      reduce using rule 126 (using_statement)

  word_tuple    go to state 305

state 181

 124) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 306


state 182

 125) word_tuple : WORD _

  $default      reduce using rule 125 (word_tuple)


state 183

 127) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 182
  COMMA         shift, and go to state 181

  word_tuple    go to state 179
  word_list     go to state 307

state 184

 123) word_list : word_list _ word_tuple
 128) import_statement : IMPORT word_list _

  WORD          shift, and go to state 182
  WORD          [reduce using rule 128 (import_statement)]
  COMMA         shift, and go to state 181
  $default      reduce using rule 128 (import_statement)

  word_tuple    go to state 305

state 185

 129) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 299

  block         go to state 308

state 186

 130) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 131) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 309


state 187

 132) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 133) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 310


state 188

 134) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 311

state 189

 145) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 312
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 190

 146) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 313
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 191

 153) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 154) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 314

state 192

 206) definition : memory_types ASSIGN _ definable

  INPUT         shift, and go to state 268
  OUTPUT        shift, and go to state 269
  NUMREG        shift, and go to state 266
  POSREG        shift, and go to state 267
  VREG          shift, and go to state 264
  SREG          shift, and go to state 260
  ARG           shift, and go to state 263
  UALM          shift, and go to state 261
  TOOLREG       shift, and go to state 271
  FRAMEREG      shift, and go to state 272
  STRING        shift, and go to state 249
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  MINUS         shift, and go to state 152
  POSITION      shift, and go to state 265
  TIMER         shift, and go to state 262
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LOCALREG      shift, and go to state 274
  LOCALPOSE     shift, and go to state 275
  LOCALFLAG     shift, and go to state 276
  SHAREDREG     shift, and go to state 278
  SHAREDPOSE    shift, and go to state 279
  SHAREDFLAG    shift, and go to state 280

  definable     go to state 315
  sign          go to state 251
  integer       go to state 125
  reg           go to state 252
  number        go to state 253
  signed_number  go to state 254
  string        go to state 255
  framereg      go to state 256
  booleans      go to state 257
  localvars     go to state 258
  sharedvars    go to state 259
  reg_types     go to state 270
  frametype     go to state 273
  local_types   go to state 277
  shared_types  go to state 281

state 193

 208) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 316
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 194

 209) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 317


state 195

 210) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 318


state 196

 211) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 319


state 197

 212) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 320


state 198

 214) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 322

  array         go to state 321

state 199

 213) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 226) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 157
  ARROW         shift, and go to state 323

  var_method_modifier  go to state 282

state 200

 215) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 324


state 201

 218) assignable_range : var _ RANGE var
 219) assignable_range : var _

  RANGE         shift, and go to state 170
  $default      reduce using rule 219 (assignable_range)


state 202

 216) position_assignment : assignable_range EQUAL _ assignable_range
 217) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 114
  LPAREN        shift, and go to state 326

  assignable_range  go to state 325
  var           go to state 201
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 203

 239) var_system : SYSTEM WORD _ var_system_modifers
 240) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 330
  DOT           [reduce using rule 243 (var_system_modifers)]
  LBRACK        shift, and go to state 328
  $default      reduce using rule 243 (var_system_modifers)

  var_system_modifers  go to state 327
  var_system_modifer  go to state 329

state 204

 281) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 282) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 331


state 205

 326) address : ADDRESS var _

  $default      reduce using rule 326 (address)


state 206

 328) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 332


state 207

 329) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 333


state 208

 334) swallow_newlines : NEWLINE _

  $default      reduce using rule 334 (swallow_newlines)


state 209

 336) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 335

  hash          go to state 334

state 210

 337) sn : swallow_newlines _

  $default      reduce using rule 337 (sn)


state 211


  $default      accept


state 212

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 213

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 214

 331) terminator : comment optional_newline _

  $default      reduce using rule 331 (terminator)


state 215

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 336


state 216

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 337


state 217

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 218

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 219

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 220

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 221

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 338

  tp_tool_methods  go to state 339

state 222

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 340


state 223

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  RPAREN        shift, and go to state 341

  operator      go to state 228

state 224

  68) label : LABEL_SET LPAREN case_allowed_condition _ RPAREN

  RPAREN        shift, and go to state 342


state 225

 138) case_allowed_condition : number _

  $default      reduce using rule 138 (case_allowed_condition)


state 226

 139) case_allowed_condition : var _

  $default      reduce using rule 139 (case_allowed_condition)


state 227

  72) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  73) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 343
  COMMA         shift, and go to state 344


state 228

 254) binary_expression : expression operator _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  expression    go to state 345
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 229

 255) operator : EEQUAL _

  $default      reduce using rule 255 (operator)


state 230

 256) operator : NOTEQUAL _

  $default      reduce using rule 256 (operator)


state 231

 257) operator : LT _

  $default      reduce using rule 257 (operator)


state 232

 258) operator : GT _

  $default      reduce using rule 258 (operator)


state 233

 259) operator : GTE _

  $default      reduce using rule 259 (operator)


state 234

 260) operator : LTE _

  $default      reduce using rule 260 (operator)


state 235

 261) operator : PLUS _

  $default      reduce using rule 261 (operator)


state 236

 262) operator : MINUS _

  $default      reduce using rule 262 (operator)


state 237

 263) operator : OR _

  $default      reduce using rule 263 (operator)


state 238

 264) operator : STAR _

  $default      reduce using rule 264 (operator)


state 239

 265) operator : SLASH _

  $default      reduce using rule 265 (operator)


state 240

 266) operator : DIV _

  $default      reduce using rule 266 (operator)


state 241

 267) operator : MOD _

  $default      reduce using rule 267 (operator)


state 242

 268) operator : AND _

  $default      reduce using rule 268 (operator)


state 243

 252) unary_expression : BANG factor _

  $default      reduce using rule 252 (unary_expression)


state 244

 254) binary_expression : expression _ operator expression
 280) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  RPAREN        shift, and go to state 346

  operator      go to state 228

state 245

 283) signed_number : sign DIGIT _

  $default      reduce using rule 283 (signed_number)


state 246

 284) signed_number : sign REAL _

  $default      reduce using rule 284 (signed_number)


state 247

 285) signed_var : sign var _

  $default      reduce using rule 285 (signed_var)


state 248

 322) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 323) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 324) operation : OPERATION LBRACK _ signed_number RBRACK
 325) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  sign          go to state 251
  integer       go to state 125
  var_or_indirect  go to state 347
  signed_number  go to state 348
  number        go to state 349

state 249

  97) string : STRING _

  $default      reduce using rule 97 (string)


state 250

 207) definition : WORD ASSIGN definable _

  $default      reduce using rule 207 (definition)


state 251

 283) signed_number : sign _ DIGIT
 284) signed_number : sign _ REAL

  REAL          shift, and go to state 246
  DIGIT         shift, and go to state 245


state 252

 290) definable : reg _

  $default      reduce using rule 290 (definable)


state 253

 291) definable : number _

  $default      reduce using rule 291 (definable)


state 254

 292) definable : signed_number _

  $default      reduce using rule 292 (definable)


state 255

 293) definable : string _

  $default      reduce using rule 293 (definable)


state 256

 294) definable : framereg _

  $default      reduce using rule 294 (definable)


state 257

 295) definable : booleans _

  $default      reduce using rule 295 (definable)


state 258

 296) definable : localvars _

  $default      reduce using rule 296 (definable)


state 259

 297) definable : sharedvars _

  $default      reduce using rule 297 (definable)


state 260

 300) reg_types : SREG _

  $default      reduce using rule 300 (reg_types)


state 261

 301) reg_types : UALM _

  $default      reduce using rule 301 (reg_types)


state 262

 302) reg_types : TIMER _

  $default      reduce using rule 302 (reg_types)


state 263

 303) reg_types : ARG _

  $default      reduce using rule 303 (reg_types)


state 264

 304) reg_types : VREG _

  $default      reduce using rule 304 (reg_types)


state 265

 305) reg_types : POSITION _

  $default      reduce using rule 305 (reg_types)


state 266

 306) reg_types : NUMREG _

  $default      reduce using rule 306 (reg_types)


state 267

 307) reg_types : POSREG _

  $default      reduce using rule 307 (reg_types)


state 268

 308) reg_types : INPUT _

  $default      reduce using rule 308 (reg_types)


state 269

 309) reg_types : OUTPUT _

  $default      reduce using rule 309 (reg_types)


state 270

 310) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 350


state 271

 311) frametype : TOOLREG _

  $default      reduce using rule 311 (frametype)


state 272

 312) frametype : FRAMEREG _

  $default      reduce using rule 312 (frametype)


state 273

 313) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 351


state 274

 314) local_types : LOCALREG _

  $default      reduce using rule 314 (local_types)


state 275

 315) local_types : LOCALPOSE _

  $default      reduce using rule 315 (local_types)


state 276

 316) local_types : LOCALFLAG _

  $default      reduce using rule 316 (local_types)


state 277

 317) localvars : local_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 352


state 278

 318) shared_types : SHAREDREG _

  $default      reduce using rule 318 (shared_types)


state 279

 319) shared_types : SHAREDPOSE _

  $default      reduce using rule 319 (shared_types)


state 280

 320) shared_types : SHAREDFLAG _

  $default      reduce using rule 320 (shared_types)


state 281

 321) sharedvars : shared_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 353


state 282

 226) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 226 (var_method_modifiers)


state 283

 233) var_method_modifier : DOT swallow_newlines _ WORD
 234) var_method_modifier : DOT swallow_newlines _ group_statement
 235) var_method_modifier : DOT swallow_newlines _ POSEATTR
 236) var_method_modifier : DOT swallow_newlines _ OFFSET
 237) var_method_modifier : DOT swallow_newlines _ coord_system
 238) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 361
  GROUP         shift, and go to state 354
  WORD          shift, and go to state 358
  POSEATTR      shift, and go to state 360
  SPHERE        shift, and go to state 355
  POLAR         shift, and go to state 356
  ORIGIN        shift, and go to state 357
  FIX           shift, and go to state 363

  group_statement  go to state 359
  coord_system  go to state 362

state 284

 247) ns : WORD COLON COLON _

  $default      reduce using rule 247 (ns)


state 285

  78) basic_program_call : function_call LPAREN args _ RPAREN
  83) args : args _ COMMA arg

  RPAREN        shift, and go to state 364
  COMMA         shift, and go to state 365


state 286

  82) args : arg _

  $default      reduce using rule 82 (args)


state 287

  85) arg : number _
 269) factor : number _

  RPAREN        reduce using rule 85 (arg)
  RPAREN        [reduce using rule 269 (factor)]
  COMMA         reduce using rule 85 (arg)
  COMMA         [reduce using rule 269 (factor)]
  $default      reduce using rule 269 (factor)


state 288

  86) arg : signed_number _
 270) factor : signed_number _

  RPAREN        reduce using rule 86 (arg)
  RPAREN        [reduce using rule 270 (factor)]
  COMMA         reduce using rule 86 (arg)
  COMMA         [reduce using rule 270 (factor)]
  $default      reduce using rule 270 (factor)


state 289

  87) arg : var _
 272) factor : var _

  RPAREN        reduce using rule 87 (arg)
  RPAREN        [reduce using rule 272 (factor)]
  COMMA         reduce using rule 87 (arg)
  COMMA         [reduce using rule 272 (factor)]
  $default      reduce using rule 272 (factor)


state 290

  88) arg : string _

  $default      reduce using rule 88 (arg)


state 291

  89) arg : address _
 251) unary_expression : address _

  RPAREN        reduce using rule 89 (arg)
  RPAREN        [reduce using rule 251 (unary_expression)]
  COMMA         reduce using rule 89 (arg)
  COMMA         [reduce using rule 251 (unary_expression)]
  $default      reduce using rule 251 (unary_expression)


state 292

  90) arg : expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 90 (arg)

  operator      go to state 228

state 293

  77) function_call : namespaces WORD _
 247) ns : WORD _ COLON COLON

  COLON         shift, and go to state 158
  $default      reduce using rule 77 (function_call)


state 294

  80) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 249
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153
  $default      reduce using rule 84 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 366
  arg           go to state 286
  number        go to state 287
  signed_number  go to state 288
  var           go to state 289
  string        go to state 290
  address       go to state 291
  expression    go to state 292
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  basic_program_call  go to state 138
  operation     go to state 141
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 295

  81) program_call : CALL var_or_indirect LPAREN _ args RPAREN

  STRING        shift, and go to state 249
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153
  $default      reduce using rule 84 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 367
  arg           go to state 286
  number        go to state 287
  signed_number  go to state 288
  var           go to state 289
  string        go to state 290
  address       go to state 291
  expression    go to state 292
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  basic_program_call  go to state 138
  operation     go to state 141
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 296

  95) return_statement : RETURN LPAREN expression _ RPAREN
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  RPAREN        shift, and go to state 368

  operator      go to state 228

state 297

  99) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
 100) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 369
  COMMA         shift, and go to state 370


state 298

 218) assignable_range : var RANGE var _

  $default      reduce using rule 218 (assignable_range)


state 299

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85

  statement     go to state 3
  statements    go to state 371
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 300

 105) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 374
  ELSIF         [reduce using rule 110 (elsif_conditions)]
  $default      reduce using rule 110 (elsif_conditions)

  elsif_conditions  go to state 372
  elsif_condition  go to state 373

state 301

 107) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 299

  block         go to state 375

state 302

 106) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 377
  $default      reduce using rule 152 (else_block)

  else_block    go to state 376

state 303

 116) forloop : FOR int_or_var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 378


state 304

 118) while_loop : WHILE expression block _ END

  END           shift, and go to state 379


state 305

 123) word_list : word_list word_tuple _

  $default      reduce using rule 123 (word_list)


state 306

 124) word_tuple : COMMA WORD _

  $default      reduce using rule 124 (word_tuple)


state 307

 123) word_list : word_list _ word_tuple
 127) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 182
  WORD          [reduce using rule 127 (compile_statement)]
  COMMA         shift, and go to state 181
  $default      reduce using rule 127 (compile_statement)

  word_tuple    go to state 305

state 308

 129) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 380


state 309

 130) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 131) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 381


state 310

 132) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 133) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 384
  $default      reduce using rule 93 (program_vars)

  program_var   go to state 382
  program_vars  go to state 383

state 311

 134) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 387

  case_conditions  go to state 385
  case_condition  go to state 386

state 312

 145) inline_conditional : inlineable IF expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 145 (inline_conditional)

  operator      go to state 228

state 313

 146) inline_conditional : inlineable UNLESS expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 146 (inline_conditional)

  operator      go to state 228

state 314

 153) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 154) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 388
  MID           shift, and go to state 389


state 315

 206) definition : memory_types ASSIGN definable _

  $default      reduce using rule 206 (definition)


state 316

 208) assignment : var_or_indirect EQUAL expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 208 (assignment)

  operator      go to state 228

state 317

 209) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 390
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 318

 210) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 391
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 319

 211) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 392
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 320

 212) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 393
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 321

 214) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 214 (position_assignment)


state 322

 352) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 210
  sn            go to state 394

state 323

 213) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 322

  array         go to state 395

state 324

 215) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 157

  var_method_modifiers  go to state 396
  var_method_modifier  go to state 156

state 325

 216) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 216 (position_assignment)


state 326

 217) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 114

  assignable_range  go to state 397
  var           go to state 201
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 327

 239) var_system : SYSTEM WORD var_system_modifers _
 242) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 330
  DOT           [reduce using rule 239 (var_system)]
  $default      reduce using rule 239 (var_system)

  var_system_modifer  go to state 398

state 328

 240) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 127

  integer       go to state 399

state 329

 241) var_system_modifers : var_system_modifer _

  $default      reduce using rule 241 (var_system_modifers)


state 330

 244) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 93

  var_system    go to state 400

state 331

 281) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 282) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 401


state 332

 328) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 402


state 333

 329) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 403


state 334

 336) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  sn            go to state 404
  swallow_newlines  go to state 210

state 335

 338) hash : LBRACE _ sn hash_attributes sn RBRACE
 339) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 210
  sn            go to state 405

state 336

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 337

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 338

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  sn            go to state 406
  swallow_newlines  go to state 210

state 339

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 340

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 407


state 341

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 408
  $default      reduce using rule 60 (wait_statement)


state 342

  68) label : LABEL_SET LPAREN case_allowed_condition RPAREN _

  $default      reduce using rule 68 (label)


state 343

  72) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 72 (use_statement)


state 344

  73) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 354

  group_statement  go to state 409

state 345

 254) binary_expression : expression _ operator expression
 254) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 229
  EEQUAL        [reduce using rule 254 (binary_expression)]
  NOTEQUAL      shift, and go to state 230
  NOTEQUAL      [reduce using rule 254 (binary_expression)]
  GTE           shift, and go to state 233
  GTE           [reduce using rule 254 (binary_expression)]
  LTE           shift, and go to state 234
  LTE           [reduce using rule 254 (binary_expression)]
  LT            shift, and go to state 231
  LT            [reduce using rule 254 (binary_expression)]
  GT            shift, and go to state 232
  GT            [reduce using rule 254 (binary_expression)]
  PLUS          shift, and go to state 235
  PLUS          [reduce using rule 254 (binary_expression)]
  MINUS         shift, and go to state 236
  MINUS         [reduce using rule 254 (binary_expression)]
  STAR          shift, and go to state 238
  STAR          [reduce using rule 254 (binary_expression)]
  SLASH         shift, and go to state 239
  SLASH         [reduce using rule 254 (binary_expression)]
  DIV           shift, and go to state 240
  DIV           [reduce using rule 254 (binary_expression)]
  AND           shift, and go to state 242
  AND           [reduce using rule 254 (binary_expression)]
  OR            shift, and go to state 237
  OR            [reduce using rule 254 (binary_expression)]
  MOD           shift, and go to state 241
  MOD           [reduce using rule 254 (binary_expression)]
  $default      reduce using rule 254 (binary_expression)

  operator      go to state 228

state 346

 280) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 280 (paren_expr)


state 347

 322) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 323) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 411
  RBRACK        shift, and go to state 410


state 348

 324) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 412


state 349

 325) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 413


state 350

 310) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 414

  definable_range  go to state 415

state 351

 313) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 416


state 352

 317) localvars : local_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 417


state 353

 321) sharedvars : shared_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 418


state 354

  70) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 419


state 355

 230) coord_system : SPHERE _

  $default      reduce using rule 230 (coord_system)


state 356

 231) coord_system : POLAR _

  $default      reduce using rule 231 (coord_system)


state 357

 232) coord_system : ORIGIN _

  $default      reduce using rule 232 (coord_system)


state 358

 233) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 233 (var_method_modifier)


state 359

 234) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 234 (var_method_modifier)


state 360

 235) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 235 (var_method_modifier)


state 361

 236) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 236 (var_method_modifier)


state 362

 237) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 237 (var_method_modifier)


state 363

 238) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 238 (var_method_modifier)


state 364

  78) basic_program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 78 (basic_program_call)


state 365

  83) args : args COMMA _ arg

  STRING        shift, and go to state 249
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  arg           go to state 420
  number        go to state 287
  signed_number  go to state 288
  var           go to state 289
  string        go to state 290
  address       go to state 291
  expression    go to state 292
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  basic_program_call  go to state 138
  operation     go to state 141
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 366

  80) program_call : RUN function_call LPAREN args _ RPAREN
  83) args : args _ COMMA arg

  RPAREN        shift, and go to state 421
  COMMA         shift, and go to state 365


state 367

  81) program_call : CALL var_or_indirect LPAREN args _ RPAREN
  83) args : args _ COMMA arg

  RPAREN        shift, and go to state 422
  COMMA         shift, and go to state 365


state 368

  95) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 95 (return_statement)


state 369

  99) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 99 (io_method)


state 370

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127

  number        go to state 423
  integer       go to state 125

state 371

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85
  $default      reduce using rule 5 (block)

  statement     go to state 102
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 372

 105) conditional : IF expression block elsif_conditions _ else_block END
 109) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 377
  ELSIF         shift, and go to state 374
  $default      reduce using rule 152 (else_block)

  else_block    go to state 424
  elsif_condition  go to state 425

state 373

 108) elsif_conditions : elsif_condition _

  $default      reduce using rule 108 (elsif_conditions)


state 374

 111) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 426
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 375

 107) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 429
  ELSIF         [reduce using rule 114 (elsif_block)]
  $default      reduce using rule 114 (elsif_block)

  elsif_block   go to state 427
  elsif_block_condition  go to state 428

state 376

 106) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 430


state 377

 151) else_block : ELSE _ block

  NEWLINE       shift, and go to state 299

  block         go to state 431

state 378

 116) forloop : FOR int_or_var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 432
  integer       go to state 175
  var           go to state 176
  indirect_thing  go to state 177
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 379

 118) while_loop : WHILE expression block END _

  $default      reduce using rule 118 (while_loop)


state 380

 129) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 129 (namespace)


state 381

 130) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 131) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 384
  $default      reduce using rule 93 (program_vars)

  program_var   go to state 382
  program_vars  go to state 433

state 382

  91) program_vars : program_var _

  $default      reduce using rule 91 (program_vars)


state 383

  92) program_vars : program_vars _ COMMA program_var
 132) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 133) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 435
  COMMA         shift, and go to state 434


state 384

  94) program_var : WORD _

  $default      reduce using rule 94 (program_var)


state 385

 134) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 136) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 438
  WHEN          shift, and go to state 387
  $default      reduce using rule 141 (case_else)

  case_else     go to state 436
  case_condition  go to state 437

state 386

 135) case_conditions : case_condition _

  $default      reduce using rule 135 (case_conditions)


state 387

 137) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  case_allowed_condition  go to state 439
  number        go to state 225
  var           go to state 226
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 388

 153) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 440


state 389

 154) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 441


state 390

 209) assignment : var_or_indirect PLUS EQUAL expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 209 (assignment)

  operator      go to state 228

state 391

 210) assignment : var_or_indirect MINUS EQUAL expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 210 (assignment)

  operator      go to state 228

state 392

 211) assignment : var_or_indirect STAR EQUAL expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 211 (assignment)

  operator      go to state 228

state 393

 212) assignment : var_or_indirect SLASH EQUAL expression _
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  $default      reduce using rule 212 (assignment)

  operator      go to state 228

state 394

 352) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 442
  WORD          shift, and go to state 443
  MINUS         shift, and go to state 152
  TRUE_FALSE    shift, and go to state 447
  LBRACK        shift, and go to state 322
  LBRACE        shift, and go to state 335
  $default      reduce using rule 351 (optional_sign)

  hash          go to state 444
  array         go to state 445
  optional_sign  go to state 446
  sign          go to state 448
  array_values  go to state 449
  array_value   go to state 450
  hash_value    go to state 451

state 395

 213) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 213 (position_assignment)


state 396

 215) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 226) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 157
  ARROW         shift, and go to state 452

  var_method_modifier  go to state 282

state 397

 217) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 453


state 398

 242) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 242 (var_system_modifers)


state 399

 240) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 454


state 400

 244) var_system_modifer : DOT var_system _

  $default      reduce using rule 244 (var_system_modifer)


state 401

 281) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 282) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  number        go to state 123
  var           go to state 124
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  indirectable  go to state 455
  integer       go to state 125

state 402

 328) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 328 (message)


state 403

 329) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 329 (warning)


state 404

 336) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 456


state 405

 338) hash : LBRACE sn _ hash_attributes sn RBRACE
 339) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 460
  RBRACE        shift, and go to state 458

  hash_attributes  go to state 457
  hash_attribute  go to state 459

state 406

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 464
  RBRACE        shift, and go to state 462

  tp_tool_attributes  go to state 461
  tp_tool_attribute  go to state 463

state 407

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 465


state 408

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  wait_modifier  go to state 466
  timeout_modifier  go to state 467
  after_modifier  go to state 468
  swallow_newlines  go to state 469

state 409

  73) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 470


state 410

 322) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 322 (operation)


state 411

 323) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  var_or_indirect  go to state 471

state 412

 324) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 324 (operation)


state 413

 325) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 325 (operation)


state 414

 298) definable_range : DIGIT _ RANGE DIGIT
 299) definable_range : DIGIT _

  RANGE         shift, and go to state 472
  $default      reduce using rule 299 (definable_range)


state 415

 310) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 473


state 416

 313) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 474


state 417

 317) localvars : local_types LBRACK RBRACK _

  $default      reduce using rule 317 (localvars)


state 418

 321) sharedvars : shared_types LBRACK RBRACK _

  $default      reduce using rule 321 (sharedvars)


state 419

  70) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 127

  integer       go to state 475

state 420

  83) args : args COMMA arg _

  $default      reduce using rule 83 (args)


state 421

  80) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 80 (program_call)


state 422

  81) program_call : CALL var_or_indirect LPAREN args RPAREN _

  $default      reduce using rule 81 (program_call)


state 423

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 476


state 424

 105) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 477


state 425

 109) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 109 (elsif_conditions)


state 426

 111) elsif_condition : ELSIF expression _ block
 254) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 299
  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241

  block         go to state 478
  operator      go to state 228

state 427

 107) conditional_block : IF expression THEN block elsif_block _ else_block END
 113) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 377
  ELSIF         shift, and go to state 429
  $default      reduce using rule 152 (else_block)

  else_block    go to state 479
  elsif_block_condition  go to state 480

state 428

 112) elsif_block : elsif_block_condition _

  $default      reduce using rule 112 (elsif_block)


state 429

 115) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 132
  BANG          shift, and go to state 137
  MINUS         shift, and go to state 152
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 148
  ON_OFF        shift, and go to state 149
  LPAREN        shift, and go to state 150
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 153

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 481
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 133
  binary_expression  go to state 134
  factor        go to state 135
  address       go to state 136
  basic_program_call  go to state 138
  number        go to state 139
  signed_number  go to state 140
  operation     go to state 141
  var           go to state 142
  signed_var    go to state 143
  var_system    go to state 144
  indirect_thing  go to state 145
  paren_expr    go to state 146
  booleans      go to state 147
  sign          go to state 151
  integer       go to state 125

state 430

 106) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 106 (conditional)


state 431

 151) else_block : ELSE block _

  $default      reduce using rule 151 (else_block)


state 432

 116) forloop : FOR int_or_var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 117) forloop : FOR int_or_var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 482
  DOWNTO        shift, and go to state 483


state 433

  92) program_vars : program_vars _ COMMA program_var
 130) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 131) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 484
  COMMA         shift, and go to state 434


state 434

  92) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 384

  program_var   go to state 485

state 435

 132) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 133) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 299
  COLON         shift, and go to state 487

  block         go to state 486

state 436

 134) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 488


state 437

 136) case_conditions : case_conditions case_condition _

  $default      reduce using rule 136 (case_conditions)


state 438

 140) case_else : ELSE _ block

  NEWLINE       shift, and go to state 299

  block         go to state 489

state 439

 137) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 299

  block         go to state 490

state 440

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 491
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 441

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 492
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 442

 343) hash_value : STRING _

  $default      reduce using rule 343 (hash_value)


state 443

 344) hash_value : WORD _

  $default      reduce using rule 344 (hash_value)


state 444

 345) hash_value : hash _

  $default      reduce using rule 345 (hash_value)


state 445

 346) hash_value : array _

  $default      reduce using rule 346 (hash_value)


state 446

 347) hash_value : optional_sign _ DIGIT
 348) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 494
  DIGIT         shift, and go to state 493


state 447

 349) hash_value : TRUE_FALSE _

  $default      reduce using rule 349 (hash_value)


state 448

 350) optional_sign : sign _

  $default      reduce using rule 350 (optional_sign)


state 449

 352) array : LBRACK sn array_values _ sn RBRACK
 354) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 208
  COMMA         shift, and go to state 496
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 210
  sn            go to state 495

state 450

 353) array_values : array_value _

  $default      reduce using rule 353 (array_values)


state 451

 355) array_value : hash_value _

  $default      reduce using rule 355 (array_value)


state 452

 215) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 322

  array         go to state 497

state 453

 217) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 500

  pose_range_modifiers  go to state 498
  pose_range_modifier  go to state 499

state 454

 240) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 330
  DOT           [reduce using rule 243 (var_system_modifers)]
  $default      reduce using rule 243 (var_system_modifers)

  var_system_modifers  go to state 501
  var_system_modifer  go to state 329

state 455

 281) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 282) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 502


state 456

 336) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 336 (position_data)


state 457

 338) hash : LBRACE sn hash_attributes _ sn RBRACE
 341) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 208
  COMMA         shift, and go to state 504
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 210
  sn            go to state 503

state 458

 339) hash : LBRACE sn RBRACE _

  $default      reduce using rule 339 (hash)


state 459

 340) hash_attributes : hash_attribute _

  $default      reduce using rule 340 (hash_attributes)


state 460

 342) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 505


state 461

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 208
  COMMA         shift, and go to state 507
  $default      reduce using rule 335 (swallow_newlines)

  sn            go to state 506
  swallow_newlines  go to state 210

state 462

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 463

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 464

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 508


state 465

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 466

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 509
  $default      reduce using rule 61 (wait_statement)


state 467

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 468

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 469

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 510
  AFTER         shift, and go to state 511


state 470

  73) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 73 (use_statement)


state 471

 323) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 512


state 472

 298) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 513


state 473

 310) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 310 (reg)


state 474

 313) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 313 (framereg)


state 475

  70) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 514


state 476

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 515


state 477

 105) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 105 (conditional)


state 478

 111) elsif_condition : ELSIF expression block _

  $default      reduce using rule 111 (elsif_condition)


state 479

 107) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 516


state 480

 113) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 113 (elsif_block)


state 481

 115) elsif_block_condition : ELSIF expression _ THEN block
 254) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 229
  NOTEQUAL      shift, and go to state 230
  GTE           shift, and go to state 233
  LTE           shift, and go to state 234
  LT            shift, and go to state 231
  GT            shift, and go to state 232
  PLUS          shift, and go to state 235
  MINUS         shift, and go to state 236
  STAR          shift, and go to state 238
  SLASH         shift, and go to state 239
  DIV           shift, and go to state 240
  AND           shift, and go to state 242
  OR            shift, and go to state 237
  MOD           shift, and go to state 241
  THEN          shift, and go to state 517

  operator      go to state 228

state 482

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 518
  integer       go to state 175
  var           go to state 176
  indirect_thing  go to state 177
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 483

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 519
  integer       go to state 175
  var           go to state 176
  indirect_thing  go to state 177
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 484

 130) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 299
  COLON         shift, and go to state 521

  block         go to state 520

state 485

  92) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 92 (program_vars)


state 486

 132) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 522


state 487

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 523


state 488

 134) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 134 (case_statement)


state 489

 140) case_else : ELSE block _

  $default      reduce using rule 140 (case_else)


state 490

 137) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 137 (case_condition)


state 491

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 524


state 492

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 525


state 493

 347) hash_value : optional_sign DIGIT _

  $default      reduce using rule 347 (hash_value)


state 494

 348) hash_value : optional_sign REAL _

  $default      reduce using rule 348 (hash_value)


state 495

 352) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 526


state 496

 354) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 210
  sn            go to state 527

state 497

 215) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 215 (position_assignment)


state 498

 217) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 228) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 500
  $default      reduce using rule 217 (position_assignment)

  pose_range_modifier  go to state 528

state 499

 227) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 227 (pose_range_modifiers)


state 500

 229) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 529

state 501

 240) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 242) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 330
  DOT           [reduce using rule 240 (var_system)]
  $default      reduce using rule 240 (var_system)

  var_system_modifer  go to state 398

state 502

 281) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 282) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 157
  $default      reduce using rule 281 (indirect_thing)

  var_method_modifier  go to state 156
  var_method_modifiers  go to state 530

state 503

 338) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 531


state 504

 341) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 210
  sn            go to state 532

state 505

 342) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 442
  WORD          shift, and go to state 443
  MINUS         shift, and go to state 152
  TRUE_FALSE    shift, and go to state 447
  LBRACK        shift, and go to state 322
  LBRACE        shift, and go to state 335
  $default      reduce using rule 351 (optional_sign)

  hash_value    go to state 533
  hash          go to state 444
  array         go to state 445
  optional_sign  go to state 446
  sign          go to state 448

state 506

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 534


state 507

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  sn            go to state 535
  swallow_newlines  go to state 210

state 508

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 442
  WORD          shift, and go to state 443
  MINUS         shift, and go to state 152
  TRUE_FALSE    shift, and go to state 447
  LBRACK        shift, and go to state 322
  LBRACE        shift, and go to state 335
  $default      reduce using rule 351 (optional_sign)

  hash_value    go to state 536
  hash          go to state 444
  array         go to state 445
  optional_sign  go to state 446
  sign          go to state 448

state 509

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  wait_modifier  go to state 537
  timeout_modifier  go to state 467
  after_modifier  go to state 468
  swallow_newlines  go to state 469

state 510

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 538


state 511

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 539


state 512

 323) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 323 (operation)


state 513

 298) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 298 (definable_range)


state 514

  70) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 70 (group_statement)


state 515

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 540


state 516

 107) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 107 (conditional_block)


state 517

 115) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 299

  block         go to state 541

state 518

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 542


state 519

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 543


state 520

 130) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 544


state 521

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 545


state 522

 132) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 132 (function)


state 523

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 299

  block         go to state 546

state 524

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 549

  motion_modifiers  go to state 547
  motion_modifier  go to state 548

state 525

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 550


state 526

 352) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 352 (array)


state 527

 354) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 442
  WORD          shift, and go to state 443
  MINUS         shift, and go to state 152
  TRUE_FALSE    shift, and go to state 447
  LBRACK        shift, and go to state 322
  LBRACE        shift, and go to state 335
  $default      reduce using rule 351 (optional_sign)

  hash          go to state 444
  array         go to state 445
  optional_sign  go to state 446
  sign          go to state 448
  array_value   go to state 551
  hash_value    go to state 451

state 528

 228) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 228 (pose_range_modifiers)


state 529

 229) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 552


state 530

 226) var_method_modifiers : var_method_modifiers _ var_method_modifier
 282) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 157
  $default      reduce using rule 282 (indirect_thing)

  var_method_modifier  go to state 282

state 531

 338) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 338 (hash)


state 532

 341) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 460

  hash_attribute  go to state 553

state 533

 342) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 342 (hash_attribute)


state 534

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 535

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 464

  tp_tool_attribute  go to state 554

state 536

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 537

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 538

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 555

state 539

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  indirectable  go to state 556
  number        go to state 123
  var           go to state 124
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 540

 100) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 100 (io_method)


state 541

 115) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 115 (elsif_block_condition)


state 542

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 299

  block         go to state 557

state 543

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 299

  block         go to state 558

state 544

 130) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 130 (function)


state 545

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 299

  block         go to state 559

state 546

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 560


state 547

 153) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 156) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 549
  $default      reduce using rule 153 (motion_statement)

  motion_modifier  go to state 561

state 548

 155) motion_modifiers : motion_modifier _

  $default      reduce using rule 155 (motion_modifiers)


state 549

 159) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 160) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 161) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 162) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 163) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 164) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 165) motion_modifier : DOT _ swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 166) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 167) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 168) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 562

state 550

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 208
  $default      reduce using rule 335 (swallow_newlines)

  swallow_newlines  go to state 563

state 551

 354) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 354 (array_values)


state 552

 229) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 229 (pose_range_modifier)


state 553

 341) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 341 (hash_attributes)


state 554

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 555

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 564


state 556

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 565


state 557

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 566


state 558

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 567


state 559

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 568


state 560

 133) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 133 (function)


state 561

 156) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 156 (motion_modifiers)


state 562

 159) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 160) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 161) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 162) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 163) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 164) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 165) motion_modifier : DOT swallow_newlines _ DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 166) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 167) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 168) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 574
  DISTANCE_SEGMENT  shift, and go to state 575
  AT            shift, and go to state 569
  ACC           shift, and go to state 570
  TERM          shift, and go to state 572
  OFFSET        shift, and go to state 573
  SKIP          shift, and go to state 576
  COORD         shift, and go to state 579
  MROT          shift, and go to state 580
  PTH           shift, and go to state 581
  WJNT          shift, and go to state 583
  INC           shift, and go to state 582
  BREAK         shift, and go to state 584
  RTCP          shift, and go to state 585
  FPLIN         shift, and go to state 586
  AP_LD         shift, and go to state 591
  RT_LD         shift, and go to state 590
  CD            shift, and go to state 587
  CR            shift, and go to state 571
  INDEV         shift, and go to state 589
  EV            shift, and go to state 588
  PSPD          shift, and go to state 592
  CTV           shift, and go to state 593

  valid_motion_statements  go to state 577
  single_argument_motion_modifiers  go to state 578

state 563

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 594


state 564

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 565

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 595


state 566

 116) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 116 (forloop)


state 567

 117) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 117 (forloop)


state 568

 131) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 131 (function)


state 569

 159) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 596


state 570

 160) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 597


state 571

 161) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 598


state 572

 162) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 599


state 573

 163) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 600


state 574

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 601


state 575

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT _ LPAREN distance COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 602


state 576

 166) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 603


state 577

 167) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 167 (motion_modifier)


state 578

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 604


state 579

 169) valid_motion_statements : COORD _

  $default      reduce using rule 169 (valid_motion_statements)


state 580

 170) valid_motion_statements : MROT _

  $default      reduce using rule 170 (valid_motion_statements)


state 581

 171) valid_motion_statements : PTH _

  $default      reduce using rule 171 (valid_motion_statements)


state 582

 172) valid_motion_statements : INC _

  $default      reduce using rule 172 (valid_motion_statements)


state 583

 173) valid_motion_statements : WJNT _

  $default      reduce using rule 173 (valid_motion_statements)


state 584

 174) valid_motion_statements : BREAK _

  $default      reduce using rule 174 (valid_motion_statements)


state 585

 175) valid_motion_statements : RTCP _

  $default      reduce using rule 175 (valid_motion_statements)


state 586

 176) valid_motion_statements : FPLIN _

  $default      reduce using rule 176 (valid_motion_statements)


state 587

 177) single_argument_motion_modifiers : CD _

  $default      reduce using rule 177 (single_argument_motion_modifiers)


state 588

 178) single_argument_motion_modifiers : EV _

  $default      reduce using rule 178 (single_argument_motion_modifiers)


state 589

 179) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 179 (single_argument_motion_modifiers)


state 590

 180) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 180 (single_argument_motion_modifiers)


state 591

 181) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 181 (single_argument_motion_modifiers)


state 592

 182) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 182 (single_argument_motion_modifiers)


state 593

 183) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 183 (single_argument_motion_modifiers)


state 594

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 605


state 595

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 606


state 596

 159) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 609
  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  speed         go to state 607
  number        go to state 123
  var           go to state 124
  indirectable  go to state 608
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 597

 160) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  integer       go to state 175
  var           go to state 176
  indirect_thing  go to state 177
  int_or_var    go to state 610
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 598

 161) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 615

  valid_terminations  go to state 611
  motion_arguements  go to state 612
  integer       go to state 613
  var           go to state 614
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 599

 162) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 615

  valid_terminations  go to state 616
  integer       go to state 613
  var           go to state 614
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 600

 163) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 617
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 601

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA seg_actions RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  time          go to state 618
  var           go to state 619
  number        go to state 620
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 602

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN _ distance COMMA seg_actions RPAREN

  REAL          shift, and go to state 126
  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114

  distance      go to state 621
  var           go to state 622
  number        go to state 623
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 125

state 603

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 624

state 604

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  integer       go to state 175
  var           go to state 176
  indirect_thing  go to state 177
  int_or_var    go to state 625
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 605

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 626
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 606

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 607

 159) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 627


state 608

 201) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 628


state 609

 202) speed : STRING _

  $default      reduce using rule 202 (speed)


state 610

 160) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 629


state 611

 157) motion_arguements : valid_terminations _
 158) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 630
  $default      reduce using rule 157 (motion_arguements)


state 612

 161) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 631


state 613

 184) valid_terminations : integer _

  $default      reduce using rule 184 (valid_terminations)


state 614

 185) valid_terminations : var _

  $default      reduce using rule 185 (valid_terminations)


state 615

 186) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 632


state 616

 162) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 633


state 617

 163) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 634


state 618

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 635


state 619

 197) time : var _

  $default      reduce using rule 197 (time)


state 620

 198) time : number _

  $default      reduce using rule 198 (time)


state 621

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 636


state 622

 199) distance : var _

  $default      reduce using rule 199 (distance)


state 623

 200) distance : number _

  $default      reduce using rule 200 (distance)


state 624

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 638
  $default      reduce using rule 188 (optional_lpos_arg)

  optional_lpos_arg  go to state 637

state 625

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 639


state 626

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 640


state 627

 159) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 159 (motion_modifier)


state 628

 201) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 641


state 629

 160) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 160 (motion_modifier)


state 630

 158) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 127
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 615

  valid_terminations  go to state 642
  integer       go to state 613
  var           go to state 614
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 631

 161) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 632

 186) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 186 (valid_terminations)


state 633

 162) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 162 (motion_modifier)


state 634

 163) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 163 (motion_modifier)


state 635

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 62
  WORD          shift, and go to state 132
  INDIRECT      shift, and go to state 95
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  SYSTEM        shift, and go to state 93

  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  seg_actions   go to state 643
  program_call  go to state 644
  io_method     go to state 645
  assignment    go to state 646
  var_or_indirect  go to state 647
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 636

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 62
  WORD          shift, and go to state 132
  INDIRECT      shift, and go to state 95
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  SYSTEM        shift, and go to state 93

  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  seg_actions   go to state 648
  program_call  go to state 644
  io_method     go to state 645
  assignment    go to state 646
  var_or_indirect  go to state 647
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 637

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 649


state 638

 187) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 114

  var           go to state 650
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 639

 168) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 168 (motion_modifier)


state 640

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 549

  motion_modifiers  go to state 651
  motion_modifier  go to state 548

state 641

 201) speed : indirectable COMMA STRING _

  $default      reduce using rule 201 (speed)


state 642

 158) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 158 (motion_arguements)


state 643

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 652


state 644

 194) seg_actions : program_call _

  $default      reduce using rule 194 (seg_actions)


state 645

 195) seg_actions : io_method _

  $default      reduce using rule 195 (seg_actions)


state 646

 196) seg_actions : assignment _

  $default      reduce using rule 196 (seg_actions)


state 647

 208) assignment : var_or_indirect _ EQUAL expression
 209) assignment : var_or_indirect _ PLUS EQUAL expression
 210) assignment : var_or_indirect _ MINUS EQUAL expression
 211) assignment : var_or_indirect _ STAR EQUAL expression
 212) assignment : var_or_indirect _ SLASH EQUAL expression

  EQUAL         shift, and go to state 193
  PLUS          shift, and go to state 194
  MINUS         shift, and go to state 195
  STAR          shift, and go to state 196
  SLASH         shift, and go to state 197


state 648

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 653


state 649

 166) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 166 (motion_modifier)


state 650

 187) optional_lpos_arg : COMMA var _

  $default      reduce using rule 187 (optional_lpos_arg)


state 651

 154) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 156) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 549
  $default      reduce using rule 154 (motion_statement)

  motion_modifier  go to state 561

state 652

 164) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN _

  $default      reduce using rule 164 (motion_modifier)


state 653

 165) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN _

  $default      reduce using rule 165 (motion_modifier)

